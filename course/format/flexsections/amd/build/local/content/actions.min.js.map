{"version":3,"file":"actions.min.js","sources":["../../../src/local/content/actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport {BaseComponent} from 'core/reactive';\r\nimport {get_string as getString, get_strings as getStrings} from \"core/str\";\r\nimport Notification from \"core/notification\";\r\nimport ModalFactory from \"core/modal_factory\";\r\nimport Templates from \"core/templates\";\r\nimport Pending from \"core/pending\";\r\n\r\n/**\r\n * Actions\r\n *\r\n * @module     format_flexsections/local/content/actions\r\n * @copyright  2022 Marina Glancy\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nexport default class extends BaseComponent {\r\n    // Example: course/format/amd/src/local/content/actions.js\r\n\r\n    /**\r\n     * Constructor hook.\r\n     */\r\n    create() {\r\n        // Optional component name for debugging.\r\n        this.name = 'content_actions_flexsections';\r\n        // Default query selectors.\r\n        this.selectors = {\r\n            ACTIONLINK: `[data-action-flexsections]`,\r\n            SECTIONLINK: `[data-for='section']`,\r\n        };\r\n        // Component css classes.\r\n        this.classes = {\r\n            DISABLED: `disabled`,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Initial state ready method.\r\n     *\r\n     * @param {Object} state the state data.\r\n     *\r\n     */\r\n    stateReady(state) {\r\n        super.stateReady(state);\r\n        // Delegate dispatch clicks.\r\n        this.addEventListener(\r\n            this.element,\r\n            'click',\r\n            this._dispatchClick\r\n        );\r\n    }\r\n\r\n    _dispatchClick(event) {\r\n        const target = event.target.closest(this.selectors.ACTIONLINK);\r\n        if (!target) {\r\n            return;\r\n        }\r\n        if (target.classList.contains(this.classes.DISABLED)) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        // Invoke proper method.\r\n        const methodName = this._actionMethodName(target.getAttribute('data-action-flexsections'));\r\n\r\n        if (this[methodName] !== undefined) {\r\n            this[methodName](target, event);\r\n        }\r\n    }\r\n\r\n    _actionMethodName(name) {\r\n        const requestName = name.charAt(0).toUpperCase() + name.slice(1);\r\n        return `_request${requestName}`;\r\n    }\r\n\r\n    /**\r\n     * Handle a section delete request.\r\n     *\r\n     * @param {Element} target the dispatch action element\r\n     * @param {Event} event the triggered event\r\n     */\r\n    _requestDelete(target, event) {\r\n        const sectionId = target.dataset.id;\r\n        if (!sectionId) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n\r\n        const sectionInfo = this.reactive.get('section', sectionId);\r\n\r\n        const cmList = sectionInfo.cmlist ?? [];\r\n        if (cmList.length || sectionInfo.hassummary || sectionInfo.rawtitle || sectionInfo.children.length) {\r\n            getStrings([\r\n                {key: 'confirm', component: 'moodle'},\r\n                {key: 'confirmdelete', component: 'format_flexsections'},\r\n                {key: 'yes', component: 'moodle'},\r\n                {key: 'no', component: 'moodle'}\r\n            ]).done((strings) => {\r\n                Notification.confirm(\r\n                    strings[0], // Confirm.\r\n                    strings[1], // Are you sure you want to delete.\r\n                    strings[2], // Yes.\r\n                    strings[3], // No.\r\n                    () => {\r\n                        this.reactive.dispatch('sectionDelete', [sectionId]);\r\n                    }\r\n                );\r\n            }).fail(Notification.exception);\r\n        } else {\r\n            // We don't need confirmation to merge empty sections.\r\n            this.reactive.dispatch('sectionDelete', [sectionId]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle a merge section request.\r\n     *\r\n     * @param {Element} target the dispatch action element\r\n     * @param {Event} event the triggered event\r\n     */\r\n    _requestMergeup(target, event) {\r\n        const sectionId = target.dataset.id;\r\n        if (!sectionId) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n\r\n        const sectionInfo = this.reactive.get('section', sectionId);\r\n\r\n        const cmList = sectionInfo.cmlist ?? [];\r\n        if (cmList.length || sectionInfo.hassummary || sectionInfo.rawtitle || sectionInfo.children.length) {\r\n            getStrings([\r\n                {key: 'confirm', component: 'moodle'},\r\n                {key: 'confirmmerge', component: 'format_flexsections'},\r\n                {key: 'yes', component: 'moodle'},\r\n                {key: 'no', component: 'moodle'}\r\n            ]).done((strings) => {\r\n                Notification.confirm(\r\n                    strings[0], // Confirm.\r\n                    strings[1], // Are you sure you want to merge.\r\n                    strings[2], // Yes.\r\n                    strings[3], // No.\r\n                    () => {\r\n                        this.reactive.dispatch('sectionMergeUp', sectionId);\r\n                    }\r\n                );\r\n            }).fail(Notification.exception);\r\n        } else {\r\n            // We don't need confirmation to merge empty sections.\r\n            this.reactive.dispatch('sectionMergeUp', sectionId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle a move section request.\r\n     *\r\n     * @param {Element} target the dispatch action element\r\n     * @param {Event} event the triggered event\r\n     */\r\n    _requestMoveSection(target, event) {\r\n        event.preventDefault();\r\n        const sectionId = target.dataset.id;\r\n        const sectionInfo = this.reactive.get('section', sectionId);\r\n        const exporter = this.reactive.getExporter();\r\n        const data = exporter.course(this.reactive.state);\r\n        data.sectiontitle = sectionInfo.title;\r\n\r\n        if (data.sections.length === 1 && `${data.sections[0].singlesection}` === '1') {\r\n            // We are on a page of a collapsed section. Do not show \"move before\" and \"move after\" controls.\r\n            data.singlesectionmode = 1;\r\n            data.sections[0].contentcollapsed = false;\r\n            // TODO allow to move from collapsed section up level.\r\n        }\r\n        const buildParents = (sections, parents) => {\r\n            for (var i in sections) {\r\n                sections[i].parents = parents;\r\n                sections[i].aftersectionid = (i > 0) ? sections[i - 1].id : 0;\r\n                buildParents(sections[i].children, parents + ',' + sections[i].id);\r\n                sections[i].lastchildid = sections[i].children.length ?\r\n                    sections[i].children[sections[i].children.length - 1].id : 0;\r\n            }\r\n        };\r\n        buildParents(data.sections, '');\r\n        data.lastchildid = data.sections.length ? data.sections[data.sections.length - 1].id : 0;\r\n\r\n        ModalFactory.create({\r\n            type: ModalFactory.types.CANCEL,\r\n            title: getString('movecoursesection', 'core'),\r\n            large: true,\r\n            buttons: {cancel: getString('closebuttontitle', 'core')},\r\n            removeOnClose: true,\r\n        })\r\n            .then(modal => {\r\n                // eslint-disable-next-line promise/no-nesting\r\n                Templates.render('format_flexsections/local/content/movesection', data).\r\n                then((body) => {\r\n                    modal.setBody(body);\r\n                    this._setupMoveSection(modal, modal.getBody()[0], sectionId, data);\r\n                    return null;\r\n                })\r\n                .fail(() => null);\r\n                modal.show();\r\n                return modal;\r\n            })\r\n            .fail(() => null);\r\n    }\r\n\r\n    /**\r\n     * Handle a move activity request.\r\n     *\r\n     * @param {Element} target the dispatch action element\r\n     * @param {Event} event the triggered event\r\n     */\r\n    _requestMoveCm(target, event) {\r\n        event.preventDefault();\r\n        const cmId = target.dataset.id;\r\n        if (!cmId) {\r\n            return;\r\n        }\r\n        const cmInfo = this.reactive.get('cm', cmId);\r\n\r\n        const exporter = this.reactive.getExporter();\r\n        const data = exporter.course(this.reactive.state);\r\n\r\n        // TODO set before and after current as disabled.\r\n        // TODO allow to move from collapsed section up level.\r\n\r\n        data.cmid = cmInfo.id;\r\n        data.cmname = cmInfo.name;\r\n\r\n        ModalFactory.create({\r\n            type: ModalFactory.types.CANCEL,\r\n            title: getString('movecoursemodule', 'core'),\r\n            large: true,\r\n            buttons: {cancel: getString('closebuttontitle', 'core')},\r\n            removeOnClose: true,\r\n        })\r\n            .then(modal => {\r\n                // eslint-disable-next-line promise/no-nesting\r\n                Templates.render('format_flexsections/local/content/movecm', data).\r\n                then((body) => {\r\n                    modal.setBody(body);\r\n                    this._setupMoveCm(modal, modal.getBody()[0], cmId, data);\r\n                    return null;\r\n                })\r\n                .fail(() => null);\r\n                modal.show();\r\n                return modal;\r\n            })\r\n            .fail(() => null);\r\n    }\r\n\r\n    /**\r\n     * Set up a popup window for moving activity\r\n     *\r\n     * @param {Modal} modal\r\n     * @param {Element} modalBody\r\n     * @param {Number} cmId\r\n     * @param {Object} data\r\n     * @param {Element} element\r\n     */\r\n    _setupMoveCm(modal, modalBody, cmId, data, element = null) {\r\n\r\n        // Capture click.\r\n        modalBody.addEventListener('click', (event) => {\r\n            const target = event.target;\r\n            if (!target.matches('a') || target.dataset.for === undefined || target.dataset.id === undefined) {\r\n                return;\r\n            }\r\n            if (target.getAttribute('aria-disabled')) {\r\n                return;\r\n            }\r\n            event.preventDefault();\r\n\r\n            const targetSectionId = (target.dataset.for === 'section') ? target.dataset.id : 0;\r\n            const targetCmId = (target.dataset.for === 'cm') ? target.dataset.id : 0;\r\n            this.reactive.dispatch('cmMove', [cmId], targetSectionId, targetCmId);\r\n            this._destroyModal(modal, element);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Destroy modal popup\r\n     *\r\n     * @param {Modal} modal\r\n     * @param {Element} element\r\n     */\r\n    _destroyModal(modal, element = null) {\r\n\r\n        // Destroy\r\n        modal.hide();\r\n        const pendingDestroy = new Pending(`courseformat/actions:destroyModal`);\r\n        if (element) {\r\n            element.focus();\r\n        }\r\n        setTimeout(() =>{\r\n            modal.destroy();\r\n            pendingDestroy.resolve();\r\n        }, 500);\r\n\r\n    }\r\n\r\n    /**\r\n     * Set up a popup window for moving section\r\n     *\r\n     * @param {Modal} modal\r\n     * @param {Element} modalBody\r\n     * @param {Number} sectionId\r\n     * @param {Object} data\r\n     * @param {Element} element\r\n     */\r\n    _setupMoveSection(modal, modalBody, sectionId, data, element = null) {\r\n\r\n        // Disable moving before or after itself or under one of its own children.\r\n        const links = modalBody.querySelectorAll(`${this.selectors.SECTIONLINK}`);\r\n        for (let i = 0; i < links.length; ++i) {\r\n            const re = new RegExp(`,${sectionId},`, \"g\");\r\n            if (links[i].getAttribute('data-before') === `${sectionId}` || links[i].getAttribute('data-after') === `${sectionId}` ||\r\n                `${links[i].getAttribute('data-parents')},`.match(re)) {\r\n                this._disableLink(links[i]);\r\n            }\r\n            // Disable moving to the depth that exceeds the maxsectiondepth setting.\r\n            const depth = (`${links[i].getAttribute('data-parents')}`.match(/,/g) || []).length;\r\n            if (data.maxsectiondepth && depth >= data.maxsectiondepth) {\r\n                this._disableLink(links[i]);\r\n            }\r\n        }\r\n\r\n        // TODO.\r\n        // Setup keyboard navigation.\r\n        // new ContentTree(\r\n        //     modalBody.querySelector(this.selectors.CONTENTTREE),\r\n        //     {\r\n        //         SECTION: this.selectors.SECTIONNODE,\r\n        //         TOGGLER: this.selectors.MODALTOGGLER,\r\n        //         COLLAPSE: this.selectors.MODALTOGGLER,\r\n        //     },\r\n        //     true\r\n        // );\r\n\r\n        // Capture click.\r\n        modalBody.addEventListener('click', (event) => {\r\n\r\n            const target = event.target;\r\n            if (!target.matches('a') || target.dataset.for !== 'section' || target.dataset.after === undefined) {\r\n                return;\r\n            }\r\n            if (target.getAttribute('aria-disabled')) {\r\n                return;\r\n            }\r\n            event.preventDefault();\r\n            const afterId = parseInt(target.dataset.after);\r\n            const parentId = parseInt(target.dataset.parentid);\r\n            this.reactive.dispatch('sectionMove', [sectionId], afterId ? afterId : -parentId);\r\n\r\n            this._destroyModal(modal, element);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Disable link\r\n     *\r\n     * @param {Element} element\r\n     */\r\n    _disableLink(element) {\r\n        if (element) {\r\n            element.style.pointerEvents = 'none';\r\n            element.style.userSelect = 'none';\r\n            element.classList.add('disabled');\r\n            element.setAttribute('aria-disabled', true);\r\n            element.addEventListener('click', event => event.preventDefault());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle a request to add a subsection as the last child of the parent\r\n     *\r\n     * @param {Element} target the dispatch action element\r\n     * @param {Event} event the triggered event\r\n     */\r\n    _requestAddSubSection(target, event) {\r\n        event.preventDefault();\r\n        this.reactive.dispatch('addSubSection', parseInt(target.dataset.parentid ?? 0));\r\n    }\r\n\r\n    /**\r\n     * Handle a request to add a subsection as the first child of the parent\r\n     *\r\n     * @param {Element} target the dispatch action element\r\n     * @param {Event} event the triggered event\r\n     */\r\n    _requestInsertSubSection(target, event) {\r\n        event.preventDefault();\r\n        this.reactive.dispatch('insertSubSection', parseInt(target.dataset.parentid ?? 0));\r\n    }\r\n}\r\n"],"names":["BaseComponent","create","name","selectors","ACTIONLINK","SECTIONLINK","classes","DISABLED","stateReady","state","addEventListener","this","element","_dispatchClick","event","target","closest","classList","contains","preventDefault","methodName","_actionMethodName","getAttribute","undefined","requestName","charAt","toUpperCase","slice","_requestDelete","sectionId","dataset","id","sectionInfo","reactive","get","cmlist","length","hassummary","rawtitle","children","key","component","done","strings","confirm","dispatch","fail","Notification","exception","_requestMergeup","_requestMoveSection","data","getExporter","course","sectiontitle","title","sections","singlesection","singlesectionmode","contentcollapsed","buildParents","parents","i","aftersectionid","lastchildid","type","ModalFactory","types","CANCEL","large","buttons","cancel","removeOnClose","then","modal","render","body","setBody","_setupMoveSection","getBody","show","_requestMoveCm","cmId","cmInfo","cmid","cmname","_setupMoveCm","modalBody","matches","for","targetSectionId","targetCmId","_destroyModal","hide","pendingDestroy","Pending","focus","setTimeout","destroy","resolve","links","querySelectorAll","re","RegExp","match","_disableLink","depth","maxsectiondepth","after","afterId","parseInt","parentId","parentid","style","pointerEvents","userSelect","add","setAttribute","_requestAddSubSection","_requestInsertSubSection"],"mappings":"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"}