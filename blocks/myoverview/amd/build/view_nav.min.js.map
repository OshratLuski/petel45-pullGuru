{"version":3,"file":"view_nav.min.js","sources":["../src/view_nav.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Manage the timeline view navigation for the overview block.\r\n *\r\n * @copyright  2018 Bas Brands <bas@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport $ from 'jquery';\r\nimport * as CustomEvents from 'core/custom_interaction_events';\r\nimport Notification from 'core/notification';\r\nimport {setUserPreference} from 'core_user/repository';\r\nimport * as View from 'block_myoverview/view';\r\nimport SELECTORS from 'block_myoverview/selectors';\r\n\r\n/**\r\n * Update the user preference for the block.\r\n *\r\n * @param {String} filter The type of filter: display/sort/grouping.\r\n * @param {String} value The current preferred value.\r\n * @return {Promise}\r\n */\r\nconst updatePreferences = (filter, value) => {\r\n    let type = null;\r\n    if (filter === 'display') {\r\n        type = 'block_myoverview_user_view_preference';\r\n    } else if (filter === 'sort') {\r\n        type = 'block_myoverview_user_sort_preference';\r\n    } else if (filter === 'customfieldvalue') {\r\n        type = 'block_myoverview_user_grouping_customfieldvalue_preference';\r\n    } else {\r\n        type = 'block_myoverview_user_grouping_preference';\r\n    }\r\n\r\n    return setUserPreference(type, value)\r\n        .catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Event listener for the Display filter (cards, list).\r\n *\r\n * @param {object} root The root element for the overview block\r\n */\r\nconst registerSelector = root => {\r\n\r\n    const Selector = root.find(SELECTORS.FILTERS);\r\n\r\n    CustomEvents.define(Selector, [CustomEvents.events.activate]);\r\n    Selector.on(\r\n        CustomEvents.events.activate,\r\n        SELECTORS.FILTER_OPTION,\r\n        (e, data) => {\r\n            const option = $(e.target);\r\n\r\n            if (option.hasClass('active')) {\r\n                // If it's already active then we don't need to do anything.\r\n                return;\r\n            }\r\n\r\n            const filter = option.attr('data-filter');\r\n            const pref = option.attr('data-pref');\r\n            const customfieldvalue = option.attr('data-customfieldvalue');\r\n\r\n            if(filter === 'grouping') {\r\n                if(option.parent().hasClass('grouping-buttons')){\r\n\r\n                    // If click from buttons.\r\n                    $('*[data-filter=\"grouping\"]').each(function (index) {\r\n\r\n                        if($(this).parent().hasClass('grouping-buttons')){\r\n                            $(this).removeClass('active');\r\n                            $(this).removeClass('btn-primary');\r\n                            $(this).addClass('btn-light');\r\n                        }else{\r\n                            $(this).removeAttr('aria-current');\r\n                            $('#groupingdropdown').find('span').text('');\r\n                        }\r\n\r\n                        option.removeClass('btn-light');\r\n                        option.addClass('active');\r\n                        option.addClass('btn-primary');\r\n                    });\r\n\r\n                }else{\r\n\r\n                    // If click from select.\r\n                    $('*[data-filter=\"grouping\"]').each(function (index) {\r\n\r\n                        if($(this).parent().hasClass('grouping-buttons')){\r\n                            $(this).removeClass('active');\r\n                            $(this).removeClass('btn-primary');\r\n                            $(this).addClass('btn-light');\r\n                        }\r\n                    });\r\n\r\n                }\r\n            }\r\n\r\n            root.find(SELECTORS.courseView.region).attr('data-' + filter, option.attr('data-value'));\r\n            updatePreferences(filter, pref);\r\n\r\n            if (customfieldvalue) {\r\n                root.find(SELECTORS.courseView.region).attr('data-customfieldvalue', customfieldvalue);\r\n                updatePreferences('customfieldvalue', customfieldvalue);\r\n            }\r\n\r\n            // Reset the views.\r\n\r\n            // Check if the user is currently in a searching state, if so we'll reset it.\r\n            const page = document.querySelector(SELECTORS.region.selectBlock);\r\n            const input = page.querySelector(SELECTORS.region.searchInput);\r\n            if (input.value !== '') {\r\n                const clearIcon = page.querySelector(SELECTORS.region.clearIcon);\r\n                input.value = '';\r\n                // Triggers the init so wont need to call it again.\r\n                View.clearSearch(clearIcon, root);\r\n            } else {\r\n                View.init(root);\r\n            }\r\n\r\n            data.originalEvent.preventDefault();\r\n        }\r\n    );\r\n\r\n    Selector.on(\r\n        CustomEvents.events.activate,\r\n        SELECTORS.DISPLAY_OPTION,\r\n        (e, data) => {\r\n            const option = $(e.target);\r\n\r\n            if (option.hasClass('active')) {\r\n                return;\r\n            }\r\n\r\n            const filter = option.attr('data-display-option');\r\n            const pref = option.attr('data-pref');\r\n\r\n            root.find(SELECTORS.courseView.region).attr('data-display', option.attr('data-value'));\r\n            updatePreferences(filter, pref);\r\n            View.reset(root);\r\n            data.originalEvent.preventDefault();\r\n        }\r\n    );\r\n};\r\n\r\n/**\r\n * Initialise the timeline view navigation by adding event listeners to\r\n * the navigation elements.\r\n *\r\n * @param {object} root The root element for the myoverview block\r\n */\r\nexport const init = root => {\r\n    root = $(root);\r\n    registerSelector(root);\r\n};\r\n"],"names":["updatePreferences","filter","value","type","catch","Notification","exception","registerSelector","root","Selector","find","SELECTORS","FILTERS","CustomEvents","define","events","activate","on","FILTER_OPTION","e","data","option","target","hasClass","attr","pref","customfieldvalue","parent","each","index","this","removeClass","addClass","removeAttr","text","courseView","region","page","document","querySelector","selectBlock","input","searchInput","clearIcon","View","clearSearch","init","originalEvent","preventDefault","DISPLAY_OPTION","reset"],"mappings":";;;;;;wTAoCMA,kBAAoB,CAACC,OAAQC,aAC3BC,KAAO,YAEPA,KADW,YAAXF,OACO,wCACW,SAAXA,OACA,wCACW,qBAAXA,OACA,6DAEA,6CAGJ,iCAAkBE,KAAMD,OAC1BE,MAAMC,sBAAaC,YAQtBC,iBAAmBC,aAEfC,SAAWD,KAAKE,KAAKC,mBAAUC,SAErCC,aAAaC,OAAOL,SAAU,CAACI,aAAaE,OAAOC,WACnDP,SAASQ,GACLJ,aAAaE,OAAOC,SACpBL,mBAAUO,eACV,CAACC,EAAGC,cACMC,QAAS,mBAAEF,EAAEG,WAEfD,OAAOE,SAAS,uBAKdtB,OAASoB,OAAOG,KAAK,eACrBC,KAAOJ,OAAOG,KAAK,aACnBE,iBAAmBL,OAAOG,KAAK,yBAEvB,aAAXvB,SACIoB,OAAOM,SAASJ,SAAS,wCAGtB,6BAA6BK,MAAK,SAAUC,QAEvC,mBAAEC,MAAMH,SAASJ,SAAS,yCACvBO,MAAMC,YAAY,8BAClBD,MAAMC,YAAY,mCAClBD,MAAME,SAAS,mCAEfF,MAAMG,WAAW,oCACjB,qBAAqBvB,KAAK,QAAQwB,KAAK,KAG7Cb,OAAOU,YAAY,aACnBV,OAAOW,SAAS,UAChBX,OAAOW,SAAS,sCAMlB,6BAA6BJ,MAAK,SAAUC,QAEvC,mBAAEC,MAAMH,SAASJ,SAAS,0CACvBO,MAAMC,YAAY,8BAClBD,MAAMC,YAAY,mCAClBD,MAAME,SAAS,kBAOjCxB,KAAKE,KAAKC,mBAAUwB,WAAWC,QAAQZ,KAAK,QAAUvB,OAAQoB,OAAOG,KAAK,eAC1ExB,kBAAkBC,OAAQwB,MAEtBC,mBACAlB,KAAKE,KAAKC,mBAAUwB,WAAWC,QAAQZ,KAAK,wBAAyBE,kBACrE1B,kBAAkB,mBAAoB0B,yBAMpCW,KAAOC,SAASC,cAAc5B,mBAAUyB,OAAOI,aAC/CC,MAAQJ,KAAKE,cAAc5B,mBAAUyB,OAAOM,gBAC9B,KAAhBD,MAAMvC,MAAc,OACdyC,UAAYN,KAAKE,cAAc5B,mBAAUyB,OAAOO,WACtDF,MAAMvC,MAAQ,GAEd0C,KAAKC,YAAYF,UAAWnC,WAE5BoC,KAAKE,KAAKtC,MAGdY,KAAK2B,cAAcC,oBAI3BvC,SAASQ,GACLJ,aAAaE,OAAOC,SACpBL,mBAAUsC,gBACV,CAAC9B,EAAGC,cACMC,QAAS,mBAAEF,EAAEG,WAEfD,OAAOE,SAAS,uBAIdtB,OAASoB,OAAOG,KAAK,uBACrBC,KAAOJ,OAAOG,KAAK,aAEzBhB,KAAKE,KAAKC,mBAAUwB,WAAWC,QAAQZ,KAAK,eAAgBH,OAAOG,KAAK,eACxExB,kBAAkBC,OAAQwB,MAC1BmB,KAAKM,MAAM1C,MACXY,KAAK2B,cAAcC,mCAWXxC,OAChBA,MAAO,mBAAEA,MACTD,iBAAiBC"}