{"version":3,"file":"message.min.js","sources":["../src/message.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope context it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript to initialise the selectors for the myoverview block.\r\n *\r\n * @package    block_myoverview\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'core/str',\r\n    'core/modal_factory',\r\n    'core/modal_events',\r\n    'core/templates',\r\n    'core/notification',\r\n    'core/ajax'\r\n],\r\nfunction(\r\n    $,\r\n    Str,\r\n    ModalFactory,\r\n    ModalEvents,\r\n    Templates,\r\n    Notification,\r\n    Ajax\r\n) {\r\n\r\n    var Message = function() {\r\n\r\n    };\r\n\r\n    Message.prototype.modal = null;\r\n\r\n    /**\r\n     * Send a message to these users.\r\n     *\r\n     * @method submitSendMessage\r\n     * @private\r\n     * @param {int[]} users\r\n     * @param {Event} e Form submission event.\r\n     * @return {Promise}\r\n     */\r\n    Message.prototype.submitSendMessage = function(courseId, target) {\r\n        var messageText = this.modal.getRoot().find('form textarea').val();\r\n\r\n        return Ajax.call([{\r\n            methodname: 'block_myoverview_send_course_messages',\r\n            args: {\r\n                message: messageText,\r\n                courseid: courseId,\r\n                target: target\r\n            }\r\n        }])[0].then(function(messageIds) {\r\n            if (messageIds.length == 1) {\r\n                return Str.get_string('sendbulkmessagesentsingle', 'core_message');\r\n            } else {\r\n                return Str.get_string('sendbulkmessagesent', 'core_message', messageIds.length);\r\n            }\r\n        }).then(function(msg) {\r\n            Notification.addNotification({\r\n                message: msg,\r\n                type: \"success\"\r\n            });\r\n            return true;\r\n        }).catch(Notification.exception);\r\n    };\r\n\r\n    Message.prototype.openForm = function(courseId, target) {\r\n        if (target === 'class') {\r\n            var titlePromise = Str.get_string('send_message_to_course_users', 'block_myoverview');\r\n        } else {\r\n            var titlePromise = Str.get_string('send_message_to_teacher', 'block_myoverview');\r\n        }\r\n\r\n        return $.when(\r\n            ModalFactory.create({\r\n                type: ModalFactory.types.SAVE_CANCEL,\r\n                body: Templates.render('block_myoverview/petel/send_course_message', {})\r\n            }),\r\n            titlePromise\r\n        ).then(function(modal, title) {\r\n            // Keep a reference to the modal.\r\n            this.modal = modal;\r\n\r\n            this.modal.setTitle(title);\r\n            this.modal.setSaveButtonText(title);\r\n\r\n            // We want to focus on the action select when the dialog is closed.\r\n            this.modal.getRoot().on(ModalEvents.hidden, function() {\r\n                this.modal.getRoot().remove();\r\n            }.bind(this));\r\n\r\n            this.modal.getRoot().on(ModalEvents.save, this.submitSendMessage.bind(this, courseId, target));\r\n\r\n            this.modal.show();\r\n\r\n            return this.modal;\r\n        }.bind(this));\r\n    };\r\n\r\n    return {\r\n        'init': function(options) {\r\n            return new Message(options);\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Templates","Notification","Ajax","Message","prototype","modal","submitSendMessage","courseId","target","messageText","this","getRoot","find","val","call","methodname","args","message","courseid","then","messageIds","length","get_string","msg","addNotification","type","catch","exception","openForm","titlePromise","when","create","types","SAVE_CANCEL","body","render","title","setTitle","setSaveButtonText","on","hidden","remove","bind","save","show","options"],"mappings":";;;;;;AAsBAA,kCAAO,CACH,SACA,WACA,qBACA,oBACA,iBACA,oBACA,cAEJ,SACIC,EACAC,IACAC,aACAC,YACAC,UACAC,aACAC,UAGIC,QAAU,oBAIdA,QAAQC,UAAUC,MAAQ,KAW1BF,QAAQC,UAAUE,kBAAoB,SAASC,SAAUC,YACjDC,YAAcC,KAAKL,MAAMM,UAAUC,KAAK,iBAAiBC,aAEtDX,KAAKY,KAAK,CAAC,CACdC,WAAY,wCACZC,KAAM,CACFC,QAASR,YACTS,SAAUX,SACVC,OAAQA,WAEZ,GAAGW,MAAK,SAASC,mBACQ,GAArBA,WAAWC,OACJxB,IAAIyB,WAAW,4BAA6B,gBAE5CzB,IAAIyB,WAAW,sBAAuB,eAAgBF,WAAWC,WAE7EF,MAAK,SAASI,YACbtB,aAAauB,gBAAgB,CACzBP,QAASM,IACTE,KAAM,aAEH,KACRC,MAAMzB,aAAa0B,YAG1BxB,QAAQC,UAAUwB,SAAW,SAASrB,SAAUC,WAC7B,UAAXA,WACIqB,aAAehC,IAAIyB,WAAW,+BAAgC,yBAE9DO,aAAehC,IAAIyB,WAAW,0BAA2B,2BAG1D1B,EAAEkC,KACLhC,aAAaiC,OAAO,CAChBN,KAAM3B,aAAakC,MAAMC,YACzBC,KAAMlC,UAAUmC,OAAO,6CAA8C,MAEzEN,cACFV,KAAK,SAASd,MAAO+B,mBAEd/B,MAAQA,WAERA,MAAMgC,SAASD,YACf/B,MAAMiC,kBAAkBF,YAGxB/B,MAAMM,UAAU4B,GAAGxC,YAAYyC,OAAQ,gBACnCnC,MAAMM,UAAU8B,UACvBC,KAAKhC,YAEFL,MAAMM,UAAU4B,GAAGxC,YAAY4C,KAAMjC,KAAKJ,kBAAkBoC,KAAKhC,KAAMH,SAAUC,cAEjFH,MAAMuC,OAEJlC,KAAKL,OACdqC,KAAKhC,QAGJ,MACK,SAASmC,gBACN,IAAI1C,QAAQ0C"}