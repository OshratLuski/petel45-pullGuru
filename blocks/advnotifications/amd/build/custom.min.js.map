{"version":3,"file":"custom.min.js","sources":["../src/custom.js"],"sourcesContent":["/* eslint no-console: [\"error\", { allow: [\"error\"] }], max-nested-callbacks: [\"error\", 7] */\n/**\n * @package    block_advnotifications\n * @copyright  2019 onwards LearningWorks Ltd {@link https://learningworks.co.nz/}\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author     Zander Potgieter <zander.potgieter@learningworks.co.nz>\n */\n\n/**\n * @module block_advnotifications/custom\n */\ndefine(['jquery'], function($) {\n    // JQuery is available via $.\n\n    return {\n        initialise: function() {\n            // Module initialised.\n            $(document).ready(function() {\n                // Commonly (multiple times) used elements.\n                var mainregion = $('#region-main');\n                var addregion = $('#add_notification_wrapper_id');\n                var strings = {\n                    save: 'Save',\n                    update: 'Update',\n                    req: 'Required...',\n                    preview: 'Preview',\n                    title: 'Title',\n                    message: 'Message'\n                };\n\n                // MANAGING NOTIFICATIONS.\n                mainregion.on('click', '.notifications_table tr > td > form > button[type=submit]', function(e) {\n                    e.preventDefault();\n                    var senddata = {}; // Data Object.\n                    senddata.call = 'ajax';\n                    senddata.purpose = '';\n                    senddata.tableaction = '';\n                    senddata.blockid = '';\n\n                    // Check if user wants to edit/delete.\n                    var eattr = $(this).closest('form').attr('data-edit');\n                    var dattr = $(this).closest('form').attr('data-delete');\n                    senddata.blockid = $(this).closest('form').find('[name=blockid]')[0].value;\n                    refreshRequired();\n\n                    // Check if anchor element has attribute, retrieved from above.\n                    if (typeof eattr !== typeof undefined && eattr !== false) {\n                        senddata.purpose = 'edit';\n                        senddata.tableaction = eattr;\n\n                        var savebutton = $('#add_notification_save');\n                        savebutton.addClass('update');\n                        savebutton.val(strings.update);\n                    } else if (typeof dattr !== typeof undefined && dattr !== false) {\n                        senddata.purpose = 'delete';\n                        senddata.tableaction = dattr;\n                    }\n\n                    var callpath = M.cfg.wwwroot + \"/blocks/advnotifications/pages/process.php?sesskey=\" + M.cfg.sesskey;\n\n                    // Perform tableaction.\n                    $.post(callpath, senddata).fail(function() {\n                        console.error(\"No 'manage' response received.\");\n                    }).done(function(data) {\n                        data = JSON.parse(data);\n\n                        // User deleted/edited notification.\n                        if (parseInt(data.done, 10) > 0) {\n                            $('#tr' + senddata.purpose + data.done).closest(\"tr\").fadeOut(250, function() {\n                                $(this).remove();\n                                clearForm();\n                                refreshPreview();\n                            });\n                        } else if (senddata.purpose === \"edit\") {\n                            for (var i in data) {\n                                if (data.hasOwnProperty(i)) {\n\n                                    // Need this for updating.\n                                    if (i === \"id\") {\n                                        var form = $('#add_notification_form');\n\n                                        // Because we're doing a standard submit, we need extra inputs to pass params.\n                                        // But first, remove old hidden inputs.\n                                        $('#add_notification_id').remove();\n                                        form.prepend(\n                                            '<input type=\"hidden\" id=\"add_notification_id\" name=\"id\" value=\"' + data[i] + '\"/>'\n                                        );\n\n                                        $('#add_notification_purpose').val('update');\n                                    }\n\n                                    var affectelement = $('#add_notification_wrapper_id').find('#add_notification_' + i);\n\n                                    // Check whether checkboxes should be checked or not.\n                                    // We also don't assign a value to checkbox input fields.\n                                    if (\n                                        (\n                                            i === 'enabled' ||\n                                            i === 'global' ||\n                                            i === 'dismissible' ||\n                                            i === 'aicon'\n                                        ) && data[i] == 1) {\n                                        affectelement.prop('checked', true);\n                                    } else if (\n                                        (i === 'enabled' ||\n                                            i === 'global' ||\n                                            i === 'dismissible' ||\n                                            i === 'aicon') && data[i] == 0) {\n                                        affectelement.prop('checked', false);\n                                    } else {\n                                        affectelement.val(data[i]);\n                                    }\n                                }\n                            }\n                            reloadPreview();\n                        }\n                    });\n                });\n\n                // Restore & Permanently delete notifications.\n                mainregion.on('click', '.notifications_restore_table tr > td > form > button[type=submit]', function(e) {\n\n                    e.preventDefault();\n                    var senddata = {}; // Data Object.\n                    senddata.call = 'ajax';\n                    senddata.purpose = '';\n                    senddata.tableaction = '';\n                    senddata.blockid = '';\n\n                    // Check if user wants to restore/delete.\n                    var rattr = $(this).closest('form').attr('data-restore');\n                    var pdattr = $(this).closest('form').attr('data-permdelete');\n                    senddata.blockid = $(this).closest('form').find('[name=blockid]')[0].value;\n\n                    // Check if anchor element has attribute, retrieved from above.\n                    if (typeof rattr !== typeof undefined && rattr !== false) {\n                        senddata.purpose = 'restore';\n                        senddata.tableaction = rattr;\n                    } else if (typeof pdattr !== typeof undefined && pdattr !== false) {\n                        senddata.purpose = 'permdelete';\n                        senddata.tableaction = pdattr;\n                    }\n\n                    var callpath = M.cfg.wwwroot + \"/blocks/advnotifications/pages/process.php?sesskey=\" + M.cfg.sesskey;\n\n                    // Perform tableaction.\n                    $.post(callpath, senddata).fail(function() {\n                        console.error(\"No 'restore/permdelete' response received.\");\n                    }).done(function(data) {\n                        data = JSON.parse(data);\n\n                        // User deleted/restored notification.\n                        // Object 'done' is returned for both restore & delete.\n                        if (parseInt(data.done, 10) > 0) {\n                            $('#tr' + senddata.purpose + data.done).closest(\"tr\").fadeOut(250, function() {\n                                $(this).remove();\n                            });\n                        }\n                    });\n                });\n\n                // Clear form.\n                addregion.on('click', '#add_notification_cancel', function(e) {\n                    e.preventDefault();\n                    clearForm();\n                });\n\n                // Managing more notifications.\n                mainregion.on('submit', '#add_notification_form', function(e) {\n                    e.preventDefault();\n                    var status = $('#add_notification_status');\n                    var form = $('#add_notification_form');\n\n                    refreshRequired();\n                    if (!checkRequired()) {\n                        // Stop if required fields are not supplied.\n                        return;\n                    }\n\n                    status.show();\n\n                    var senddata = $(this).serialize(); // Data Object.\n\n                    var callpath = M.cfg.wwwroot + \"/blocks/advnotifications/pages/process.php\";\n\n                    // Perform tableaction.\n                    $.post(callpath, senddata).fail(function(data) {\n                        console.error(\"No 'add' response received.\");\n\n                        var error = data.responseJSON.error;\n\n                        for (var i in error) {\n                            if (error.hasOwnProperty(i)) {\n                                var sfield = form.find('select[name=' + error[i] + ']');\n                                sfield.addClass('requiredfield');\n                                $(\n                                    '<strong class=\"requiredfield\"><em>' + strings.req + '</em></strong>'\n                                ).insertAfter(sfield[0].nextSibling);\n                            }\n                        }\n\n                        status.hide();\n                    }).done(function() {\n                        // User saved notification.\n                        status.find('.saving').hide();\n                        status.find('.done').show();\n\n                        // Clear Form.\n                        clearForm();\n\n                        setTimeout(function() {\n                            status.fadeOut(function() {\n                                status.find('.done').hide();\n                                status.find('.saving').show();\n                            });\n                        }, 1500);\n\n                        $('#advnotifications_table_wrapper').load('# #advnotifications_table_wrapper > *');\n                    });\n                });\n\n                // LIVE PREVIEW.\n                // Dynamically update preview alert as user changes textbox content.\n                addregion.on('input propertychange paste', '#add_notification_title, #add_notification_message', function () {\n                    reloadPreview();\n                });\n\n                // Dynamically update preview alert type.\n                $('#add_notification_type').on('change', function() {\n                    reloadPreview();\n                });\n\n                $('#add_notification_dismissible').on('change', function() {\n                    // Checking specifically whether ticked/checked or not to ensure it's displayed correctly (not toggling).\n                    reloadPreview();\n                });\n\n                $('#add_notification_aicon').on('change', function() {\n                    // Checking specifically whether ticked/checked or not to ensure it's displayed correctly (not toggling).\n                    reloadPreview();\n                });\n\n                // Check if preview is displaying correct (Update it).\n                var reloadPreview = function() {\n                    // Update title.\n                    var titleText = addregion.find('#add_notification_title').val().trim();\n                    let title = addregion.find('h4.alert-title');\n                    if (titleText.length > 0) {\n                        title.show();\n                        title.html(titleText);\n                    } else if (titleText.length == 0) {\n                        title.hide();\n                    } else {\n                        title.show();\n                        title.html(strings.title);\n                    }\n\n                    // Update message.\n                    var message = addregion.find('#add_notification_message');\n                    let previewMessage = addregion.find('.alert-text').children().first();\n                    if (message.val().length > 0) {\n                        previewMessage.html(message.val());\n                    } else {\n                        previewMessage.html(strings.message);\n                    }\n\n                    // Check notification type.\n                    var alerttype = $('#add_notification_type').val();\n                    // var previewalert = $('#add_notification_wrapper_id .preview-alert');\n                    var previewalert = $('.notification-block-wrapper');\n                    // Clear existing classes.\n                    previewalert.removeClass('alert-info alert-success alert-danger alert-warning announcement');\n\n                    // Special check for announcement type.\n                    if (alerttype === 'announcement') {\n                        previewalert.addClass(alerttype);\n                        alerttype = 'info';\n                    }\n\n                    // If anything unexpected, set to info type.\n                    if (alerttype !== 'info' && alerttype !== 'success' && alerttype !== 'warning' && alerttype !== 'danger') {\n                        alerttype = 'info';\n                    }\n\n                    // Add type of alert class.\n                    previewalert.addClass('alert-' + alerttype);\n\n                    // Add correct icon\n                    const icon = previewalert.find('.icon-wrapper');\n                    if (alerttype === 'warning') {\n                        icon.html('<i class=\" fal fa-exclamation-triangle mt-1\"></i>');\n                    }\n                    if (alerttype === 'danger' || alerttype === 'info') {\n                        icon.html('<i class=\" fal fa-exclamation-circle mt-1\"></i>');\n                    }\n                    if (alerttype === 'success') {\n                        icon.html('<i class=\" fal fa-check-circle mt-1\"></i>');\n                    }\n\n                    // Check if dismissable.\n                    if (!$('#add_notification_dismissible')[0].checked) {\n                        $('.notification-block-close').hide();\n                        previewalert.removeClass('dismissible');\n                    } else {\n                        $('.notification-block-close').show();\n                        previewalert.addClass('dismissible');\n                    }\n\n                    // Check if icon should be shown.\n                    if (!$('#add_notification_aicon')[0].checked) {\n                        $('.icon-wrapper').hide();\n                        previewalert.removeClass('aicon');\n                    } else {\n                        $('.icon-wrapper').show();\n                        previewalert.addClass('aicon');\n                        let icon = '<i class=\"fal fa-exclamation-circle mt-1\"></i>';\n                        // Change icon type\n                        if (alerttype === 'warning') {\n                            icon = '<i class=\"fal fa-exclamation-triangle mt-1\"></i>';\n                        }\n                        if (alerttype === 'success') {\n                            icon = '<i class=\"fal fa-check-circle mt-1\"></i>';\n                        }\n                        previewalert.find('.icon-wrapper').html('');\n                        $(icon).appendTo(previewalert.find('.icon-wrapper'));\n                    }\n                };\n\n                var init = function() {\n                    // Get strings.\n                    var senddata = {}; // Data Object.\n                    senddata.call = 'ajax';\n                    senddata.purpose = 'strings';\n\n                    var callpath = M.cfg.wwwroot + \"/blocks/advnotifications/pages/process.php?sesskey=\" + M.cfg.sesskey;\n\n                    $.post(callpath, senddata).fail(function() {\n                        console.error(\"No 'strings' response received.\");\n                    }).done(function(data) {\n                        // TODO: ONLY DO THIS IF AJAX SUCCESSFUL - don't render with English first?).\n                        // Store strings and update preview.\n                        strings = data;\n                    }).always(function() {\n                        // Always prepend live preview. Use langstrings if AJAX successful, otherwise use strings declared at top.\n                        refreshPreview();\n                    });\n\n                    // JS is enabled, so we can use AJAX in the new notification form.\n                    $('#add_notification_form').append(\n                        '<input type=\"hidden\" id=\"add_notification_call\" name=\"call\" value=\"ajax\"/>'\n                    );\n                };\n\n                // Shiny new and fresh preview.\n                var refreshPreview = function() {\n                    var previewelem = $('#notification_preview_wrapper');\n                    const previewdom = `\n                        <strong>${strings.preview}</strong>\n                        <div id=\"notification_preview_wrapper\" class=\"notification-block-wrapper alert-preview dismissible limitedtimes aicon d-flex mb-3 p-0 alert alert-info\">\n                            <div class=\"alert-colorblock\"></div>\n                            <div class=\"alert-inner d-flex flex-no-wrap align-items-start\">\n                                <div class=\"icon-wrapper\" style=\"display: none;\"></div>\n                                <div class=\"alert-wrapper\">\n                                    <h4 class=\"alert-title mb-0\">${strings.title}</h4>\n                                    <div class=\"m-0 alert-text\">${strings.message}</div>\n                                </div>\n                                <div class=\"notification-block-close ml-auto mt-1\" style=\"display: none;\">\n                                    <i class=\"fal fa-times-circle\"></i>\n                                </div>\n                            </div>            \n                        </div>`;\n\n                    // If it exists already, remove before adding again.\n                    if (previewelem.length > 0) {\n                        previewelem.parent().find('strong').remove();\n                        previewelem.remove();\n                        // Don't slide in.\n                        $(previewdom).prependTo($(addregion));\n                    } else {\n                        // Slide in.\n                        $(previewdom).prependTo($(addregion)).hide().slideDown();\n                    }\n                };\n\n                var checkRequired = function() {\n                    var disselopt = $('#add_notification_form select option:selected:disabled');\n\n                    for (var opt in disselopt) {\n                        if (disselopt.hasOwnProperty(opt)) {\n                            if ($(disselopt[opt]).prop('disabled')) {\n                                $(disselopt[opt]).closest('select').addClass('requiredfield');\n                                $('<strong class=\"requiredfield\"><em>' + strings.req + '</em></strong>')\n                                    .insertAfter($(disselopt[opt]).closest('select')[0].nextSibling);\n\n                                return false;\n                            }\n                        }\n                    }\n                    return true;\n                };\n\n                var refreshRequired = function() {\n                    $('select.requiredfield').removeClass('requiredfield');\n                    $('strong.requiredfield').remove();\n                };\n\n                var clearForm = function() {\n                    $('#add_notification_form')[0].reset();\n                    refreshRequired();\n                    refreshPreview();\n\n                    // Change save button back to normal.\n                    var savebutton = $('#add_notification_save');\n                    savebutton.removeClass('update');\n                    $('#add_notification_id').remove();\n                    $('#add_notification_purpose').val('add');\n\n                    savebutton.val(strings.save);\n                };\n\n                init();\n            });\n        }\n    };\n});"],"names":["define","$","initialise","document","ready","mainregion","addregion","strings","save","update","req","preview","title","message","on","e","preventDefault","senddata","eattr","this","closest","attr","dattr","blockid","find","value","refreshRequired","purpose","tableaction","savebutton","addClass","val","callpath","M","cfg","wwwroot","sesskey","post","fail","console","error","done","data","JSON","parse","parseInt","fadeOut","remove","clearForm","refreshPreview","i","hasOwnProperty","form","prepend","affectelement","prop","reloadPreview","rattr","pdattr","status","checkRequired","show","serialize","responseJSON","sfield","insertAfter","nextSibling","hide","setTimeout","load","titleText","trim","length","html","previewMessage","children","first","alerttype","previewalert","removeClass","icon","checked","appendTo","previewelem","previewdom","parent","prependTo","slideDown","disselopt","opt","reset","always","append"],"mappings":"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"}