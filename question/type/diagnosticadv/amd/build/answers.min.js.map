{"version":3,"file":"answers.min.js","sources":["../src/answers.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Handles events related to the diagnostic ADV question type answers.\r\n *\r\n * @module     qtype_multichoice/answers\r\n * @copyright  Devlion.ltd <info@devlion.co>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/**\r\n * Selectors for this module.\r\n *\r\n * @type {{ANSWER_LABEL: string}}\r\n */\r\nconst SELECTORS = {\r\n    ANSWER_LABEL: '[data-region=answer-label]',\r\n    ANSWER_INPUT: 'input[data-answertype=\"answer\"]',\r\n    CUSTOM_INPUT: 'input[data-answertype=\"custom\"]',\r\n    CUSTOM_FIELD: 'input[data-answertype=\"customtext\"]',\r\n    SECURITYWRAPPER: 'div.securitywrapper',\r\n    SECURITYTEXTAREA: 'div.securitywrapper textarea',\r\n    SECURITYSUREYES: 'input#securitysureyes',\r\n    SECURITYSURENO: 'input#securitysureno',\r\n};\r\n\r\n/**\r\n * Init method.\r\n *\r\n * @param {string} rootId The ID of the question container.\r\n */\r\nconst init = (rootId) => {\r\n    const root = document.getElementById(rootId);\r\n\r\n    // Add click event handlers for the divs containing the answer since these cannot be enclosed in a label element.\r\n    const answerLabels = root.querySelectorAll(SELECTORS.ANSWER_LABEL);\r\n    answerLabels.forEach((answerLabel) => {\r\n        answerLabel.addEventListener('click', (e) => {\r\n            const labelId = e.currentTarget.id;\r\n            // Fetch the answer this label is assigned to.\r\n            const linkedOption = root.querySelector(`[aria-labelledby=\"${labelId}\"]`);\r\n            // Trigger the click event.\r\n            linkedOption.click();\r\n        });\r\n    });\r\n\r\n    const answers = root.querySelectorAll(SELECTORS.ANSWER_INPUT);\r\n    const textfield = root.querySelector(SELECTORS.CUSTOM_FIELD);\r\n    const securitywrapper = root.querySelector(SELECTORS.SECURITYWRAPPER);\r\n    const securitytextarea = root.querySelector(SELECTORS.SECURITYWRAPPER);\r\n\r\n    if (securitywrapper) {\r\n        securitywrapper.style.display = 'none';\r\n        securitytextarea.disabled = true;\r\n    }\r\n\r\n    answers.forEach((answer) => {\r\n        answer.addEventListener('click', (e) => {\r\n                textfield.disabled = true;\r\n        });\r\n    });\r\n\r\n    const custom = root.querySelector(SELECTORS.CUSTOM_INPUT);\r\n    if (custom) {\r\n        custom.addEventListener('click', (e) => {\r\n            textfield.disabled = false;\r\n        });\r\n    }\r\n\r\n    const securitysureyes = root.querySelector(SELECTORS.SECURITYSUREYES);\r\n    if (securitysureyes) {\r\n        securitysureyes.addEventListener('click', (e) => {\r\n            if(e.currentTarget.checked) {\r\n                securitywrapper.style.display = 'none';\r\n                securitytextarea.disabled = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    const securitysureno = root.querySelector(SELECTORS.SECURITYSURENO);\r\n    if (securitysureno) {\r\n        if (securitysureno.checked) {\r\n            securitywrapper.style.display = 'block';\r\n            securitytextarea.disabled = false;\r\n        }\r\n    \r\n        securitysureno.addEventListener('click', (e) => {\r\n            if (e.currentTarget.checked) {\r\n                securitywrapper.style.display = 'block';\r\n                securitytextarea.disabled = false;\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport default {\r\n    init: init\r\n};\r\n"],"names":["SELECTORS","init","rootId","root","document","getElementById","querySelectorAll","forEach","answerLabel","addEventListener","e","labelId","currentTarget","id","querySelector","click","answers","textfield","securitywrapper","securitytextarea","style","display","disabled","answer","custom","securitysureyes","checked","securitysureno"],"mappings":";;;;;;;;MA4BMA,uBACY,6BADZA,uBAEY,kCAFZA,uBAGY,kCAHZA,uBAIY,sCAJZA,0BAKe,sBALfA,0BAOe,wBAPfA,yBAQc,oCAwEL,CACXC,KAjEUC,eACJC,KAAOC,SAASC,eAAeH,QAGhBC,KAAKG,iBAAiBN,wBAC9BO,SAASC,cAClBA,YAAYC,iBAAiB,SAAUC,UAC7BC,QAAUD,EAAEE,cAAcC,GAEXV,KAAKW,cAAe,qBAAoBH,aAEhDI,oBAIfC,QAAUb,KAAKG,iBAAiBN,wBAChCiB,UAAYd,KAAKW,cAAcd,wBAC/BkB,gBAAkBf,KAAKW,cAAcd,2BACrCmB,iBAAmBhB,KAAKW,cAAcd,2BAExCkB,kBACAA,gBAAgBE,MAAMC,QAAU,OAChCF,iBAAiBG,UAAW,GAGhCN,QAAQT,SAASgB,SACbA,OAAOd,iBAAiB,SAAUC,IAC1BO,UAAUK,UAAW,cAI3BE,OAASrB,KAAKW,cAAcd,wBAC9BwB,QACAA,OAAOf,iBAAiB,SAAUC,IAC9BO,UAAUK,UAAW,WAIvBG,gBAAkBtB,KAAKW,cAAcd,2BACvCyB,iBACAA,gBAAgBhB,iBAAiB,SAAUC,IACpCA,EAAEE,cAAcc,UACfR,gBAAgBE,MAAMC,QAAU,OAChCF,iBAAiBG,UAAW,YAKlCK,eAAiBxB,KAAKW,cAAcd,0BACtC2B,iBACIA,eAAeD,UACfR,gBAAgBE,MAAMC,QAAU,QAChCF,iBAAiBG,UAAW,GAGhCK,eAAelB,iBAAiB,SAAUC,IAClCA,EAAEE,cAAcc,UAChBR,gBAAgBE,MAAMC,QAAU,QAChCF,iBAAiBG,UAAW"}