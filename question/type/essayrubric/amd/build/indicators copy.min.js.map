{"version":3,"file":"indicators copy.min.js","sources":["../src/indicators copy.js"],"sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-dupe-keys */\n/* eslint-disable no-unused-vars */\n/* eslint-disable key-spacing */\n/* eslint-disable spaced-comment */\n/* eslint-disable capitalized-comments */\ndefine([\n  \"jquery\",\n  \"https://unpkg.com/tabulator-tables/dist/js/tabulator.min.js\",\n], function ($, Tabulator) {\n  return {\n    init: function (input, params, hascapedit) {\n      console.log(\"INIT\");\n      console.log(input);\n\n      let tabledata = [];\n      tabledata = Object.keys(input).map(function (key) {\n        return input[key];\n      });\n      // tabledata.sort((a, b) => a.sortorder - b.sortorder);\n\n      console.log(tabledata);\n\n      var lang = $(\"html\")[0].lang;\n\n      // TODO: HEBREW !!!\n      if (lang === \"he\") {\n        // var table = new Tabulator(\"#indicators-table\", {\n        //   movableRows: hascapedit,\n        //   height: 540,\n        //   data: tabledata,\n        //   textDirection: \"rtl\",\n        //   layout: \"fitColumns\",\n        //   columns: [\n        //     {\n        //       rowHandle: hascapedit,\n        //       formatter: \"handle\",\n        //       headerSort: false,\n        //       // frozen: true,\n        //       width: 30,\n        //       minWidth: 30,\n        //     },\n        //     {\n        //       field: \"isindicatorselected\",\n        //       hozAlign: \"center\",\n        //       headerHozAlign: \"center\",\n        //       headerSort: false,\n        //       formatter: (cell) => {\n        //         catid = cell.getRow()._row.data.id;\n        //         const value = cell.getValue();\n        //         return `\n        //                             <input class=\"n_catch n_catch2\" ${\n        //                               hascapedit ? \"\" : \"disabled=disabled\"\n        //                             } type=\"checkbox\" ${\n        //           value ? 'checked=\"checked\"' : \"\"\n        //         } name=\"n_indicators_${catid}[]\" id=\"n_indicators_${catid}\"/>\n        //                             `;\n        //       },\n        //       title: hascapedit\n        //         ? `\n        //                 <span>Select all</span>\n        //                 <br>\n        //                 <input class=\"n_catch_all\" type=\"checkbox\" name=\"n_catch_all\" id=\"n_catch_all\"/>\n        //                 `\n        //         : `<span>Select all</span>`,\n        //     },\n        //     {\n        //       title: \"Name\",\n        //       field: \"name\",\n        //       width: \"40%\",\n        //       // hozAlign: \"right\",\n        //       headerFilter: \"input\",\n        //       headerFilterLiveFilter: true,\n        //       headerSort: false,\n        //     },\n        //     {\n        //       title: \"Type\",\n        //       field: \"type\",\n        //       editor: hascapedit ? \"list\" : false,\n        //       editorParams: {\n        //         values: params.models,\n        //         allowEmpty: true,\n        //         listOnEmpty: true,\n        //         clearable: true,\n        //         itemFormatter: (label, value, item, element) => {\n        //           return `\n        //                         <strong>${label}</strong><br/>\n        //                         `;\n        //         },\n        //       },\n        //       formatter: function (cell, formatterParams, onRendered) {\n        //         return params.models[cell.getValue()] == \"—\"\n        //           ? \"\"\n        //           : params.models[cell.getValue()];\n        //       },\n        //       headerSort: false,\n        //       cssClass: hascapedit ? \"editablecol\" : false,\n        //     },\n        //     {\n        //       title: \"Weight\",\n        //       field: \"weight\",\n        //       // hozAlign: \"left\",\n        //       editor: hascapedit ? true : false,\n        //       cssClass: hascapedit ? \"editablecol\" : false,\n        //       validator: [\"min:0\", \"max:100\", \"integer\"],\n        //       headerSort: false,\n        //     },\n        //     {\n        //       title: \"Tag\",\n        //       field: \"tag\",\n        //       // hozAlign: \"left\",\n        //       headerFilter: \"input\",\n        //       headerFilterLiveFilter: true,\n        //       headerSort: false,\n        //     },\n        //   ],\n        // });\n      } else {\n        var table = new Tabulator(\"#indicators-table\", {\n          movableRows: hascapedit,\n          height: 540,\n          data: tabledata,\n          textDirection: \"ltr\",\n          layout: \"fitColumns\",\n          columns: [\n            {\n              rowHandle: hascapedit,\n              formatter: \"handle\",\n              headerSort: false,\n              frozen: true,\n              width: 30,\n              minWidth: 30,\n            },\n            {\n              field: \"isindicatorselected\",\n              hozAlign: \"center\",\n              headerHozAlign: \"center\",\n              headerSort: false,\n              formatter: (cell) => {\n                catid = cell.getRow()._row.data.id;\n                const value = cell.getValue();\n                return `\n                                    <input class=\"n_catch n_catch2\" ${\n                                      hascapedit ? \"\" : \"disabled=disabled\"\n                                    } type=\"checkbox\" ${\n                  value ? 'checked=\"checked\"' : \"\"\n                } name=\"n_indicators_${catid}[]\" id=\"n_indicators_${catid}\"/>\n                                    `;\n              },\n              title: hascapedit\n                ? `\n                        <span>Select all</span>\n                        <br>\n                        <input class=\"n_catch_all\" type=\"checkbox\" name=\"n_catch_all\" id=\"n_catch_all\"/>\n                        `\n                : `<span>Select all</span>`,\n            },\n            {\n              title: \"Indicatorid\",\n              field: \"indicatorid\",\n              width: \"10%\",\n              // hozAlign: \"right\",\n              headerFilter: \"input\",\n              headerFilterLiveFilter: true,\n              headerSort: false,\n            },\n            {\n              title: \"Name\",\n              field: \"name\",\n              width: \"30%\",\n              // hozAlign: \"right\",\n              headerFilter: \"input\",\n              headerFilterLiveFilter: true,\n              headerSort: false,\n            },\n            {\n              title: \"Model\",\n              field: \"model\",\n              editor: hascapedit ? \"list\" : false,\n              headerFilter: \"input\",\n              headerFilterLiveFilter: true,\n              headerSort: false,\n              editorParams: {\n                values: params.models, // TODO:\n                allowEmpty: true,\n                listOnEmpty: true,\n                clearable: true,\n                itemFormatter: (label, value, item, element) => {\n                  return `\n                                <strong>${label}</strong><br/>\n                                `;\n                },\n              },\n              formatter: function (cell, formatterParams, onRendered) {\n                return params.models[cell.getValue()] == \"—\"\n                  ? \"\"\n                  : params.models[cell.getValue()];\n              },\n              headerSort: false,\n              cssClass: hascapedit ? \"editablecol\" : false,\n            },\n            {\n              title: \"Research\",\n              field: \"research\",\n              hozAlign: \"center\",\n              headerHozAlign: \"center\",\n              headerSort: false,\n              formatter: \"tickCross\",\n              editor: \"tickCross\",\n              editorParams: {\n                trueValue: 1,\n                falseValue: 0,\n              },\n            },\n            {\n              title: \"Visible\",\n              field: \"visible\",\n              hozAlign: \"center\",\n              headerHozAlign: \"center\",\n              headerSort: false,\n              formatter: \"tickCross\",\n              editor: \"tickCross\",\n              editorParams: {\n                trueValue: 1,\n                falseValue: 0,\n              },\n            },\n          ],\n        });\n      }\n\n      // Listeners.\n      if (hascapedit) {\n        table.on(\"tableBuilt\", function () {\n          $(\"#n_catch_all\").change(function () {\n            cells = table.getColumn(\"isindicatorselected\").getCells();\n            cells.forEach((element) => {\n              element.setValue(this.checked);\n            });\n          });\n          $(\"form\").submit((e) => {\n            $(\"#indicators\").attr(\"value\", JSON.stringify(table.getData()));\n            return true;\n          });\n        });\n\n        // table.on(\"cellClick\", function (e, cell) {\n        //     if ($(e.target).hasClass(\"n_catch\")) {\n        //         cell.setValue($(e.target).is(\":checked\"));\n        //     }\n        // });\n      }\n    },\n  };\n});\n"],"names":["define","$","Tabulator","init","input","params","hascapedit","console","log","tabledata","Object","keys","map","key","lang","table","movableRows","height","data","textDirection","layout","columns","rowHandle","formatter","headerSort","frozen","width","minWidth","field","hozAlign","headerHozAlign","cell","catid","getRow","_row","id","value","getValue","title","headerFilter","headerFilterLiveFilter","editor","editorParams","values","models","allowEmpty","listOnEmpty","clearable","itemFormatter","label","item","element","formatterParams","onRendered","cssClass","trueValue","falseValue","on","change","cells","getColumn","getCells","forEach","setValue","this","checked","submit","e","attr","JSON","stringify","getData"],"mappings":"AAOAA,8CAAO,CACL,SACA,gEACC,SAAUC,EAAGC,iBACP,CACLC,KAAM,SAAUC,MAAOC,OAAQC,YAC7BC,QAAQC,IAAI,QACZD,QAAQC,IAAIJ,WAERK,UAAY,MAChBA,UAAYC,OAAOC,KAAKP,OAAOQ,KAAI,SAAUC,YACpCT,MAAMS,QAIfN,QAAQC,IAAIC,WAKC,OAHFR,EAAE,QAAQ,GAAGa,eA+FlBC,MAAQ,IAAIb,UAAU,oBAAqB,CAC7Cc,YAAaV,WACbW,OAAQ,IACRC,KAAMT,UACNU,cAAe,MACfC,OAAQ,aACRC,QAAS,CACP,CACEC,UAAWhB,WACXiB,UAAW,SACXC,YAAY,EACZC,QAAQ,EACRC,MAAO,GACPC,SAAU,IAEZ,CACEC,MAAO,sBACPC,SAAU,SACVC,eAAgB,SAChBN,YAAY,EACZD,UAAYQ,OACVC,MAAQD,KAAKE,SAASC,KAAKhB,KAAKiB,SAC1BC,MAAQL,KAAKM,iBACX,yEAEc/B,WAAa,GAAK,uCAEtC8B,MAAQ,oBAAsB,yBACTJ,6BAA6BA,gDALpD,EAQFM,MAAOhC,WACF,sNAKA,2BAEP,CACEgC,MAAO,cACPV,MAAO,cACPF,MAAO,MAEPa,aAAc,QACdC,wBAAwB,EACxBhB,YAAY,GAEd,CACEc,MAAO,OACPV,MAAO,OACPF,MAAO,MAEPa,aAAc,QACdC,wBAAwB,EACxBhB,YAAY,GAEd,CACEc,MAAO,QACPV,MAAO,QACPa,SAAQnC,YAAa,OACrBiC,aAAc,QACdC,wBAAwB,EACxBhB,YAAY,EACZkB,aAAc,CACZC,OAAQtC,OAAOuC,OACfC,YAAY,EACZC,aAAa,EACbC,WAAW,EACXC,cAAe,CAACC,MAAOb,MAAOc,KAAMC,UAC1B,6CACgBF,yDAI5B1B,UAAW,SAAUQ,KAAMqB,gBAAiBC,kBACD,KAAlChD,OAAOuC,OAAOb,KAAKM,YACtB,GACAhC,OAAOuC,OAAOb,KAAKM,aAEzBb,YAAY,EACZ8B,WAAUhD,YAAa,eAEzB,CACEgC,MAAO,WACPV,MAAO,WACPC,SAAU,SACVC,eAAgB,SAChBN,YAAY,EACZD,UAAW,YACXkB,OAAQ,YACRC,aAAc,CACZa,UAAW,EACXC,WAAY,IAGhB,CACElB,MAAO,UACPV,MAAO,UACPC,SAAU,SACVC,eAAgB,SAChBN,YAAY,EACZD,UAAW,YACXkB,OAAQ,YACRC,aAAc,CACZa,UAAW,EACXC,WAAY,OAQlBlD,YACFS,MAAM0C,GAAG,cAAc,WACrBxD,EAAE,gBAAgByD,QAAO,WACvBC,MAAQ5C,MAAM6C,UAAU,uBAAuBC,WAC/CF,MAAMG,SAASX,UACbA,QAAQY,SAASC,KAAKC,eAG1BhE,EAAE,QAAQiE,QAAQC,IAChBlE,EAAE,eAAemE,KAAK,QAASC,KAAKC,UAAUvD,MAAMwD,aAC7C,SAYlB"}