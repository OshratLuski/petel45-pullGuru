{"version":3,"file":"indicators.min.js","sources":["../src/indicators.js"],"sourcesContent":["/* eslint-disable space-infix-ops */\r\n/* eslint-disable promise/catch-or-return */\r\n/* eslint-disable promise/always-return */\r\n/* eslint-disable curly */\r\n/* eslint-disable max-len */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable block-scoped-var */\r\n/* eslint-disable no-empty */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable no-console */\r\n/* eslint-disable no-dupe-keys */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable key-spacing */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable capitalized-comments */\r\n/* eslint-disable babel/semi */\r\n\r\n// import $ from \"jquery\";\r\nimport Ajax from \"core/ajax\";\r\nimport * as Str from \"core/str\";\r\nimport Tabulator from \"https://unpkg.com/tabulator-tables/dist/js/tabulator.min.js\";\r\n\r\nexport default {\r\n  init: function (params, hascapedit, usedindicators) {\r\n    Ajax.call([\r\n      {\r\n        methodname: \"qtype_essayrubric_get_indicators\",\r\n        args: {\r\n        },\r\n        done: function (result) {\r\n          result = JSON.parse(result.result);\r\n          renderIndicators(result);\r\n        },\r\n        fail: {},\r\n      },\r\n    ]);\r\n\r\n    const renderIndicators = (input) => {\r\n      var strings = [\r\n        {\r\n          key: \"selectall\",\r\n          component: \"qtype_essayrubric\",\r\n        },\r\n        {\r\n          key: \"indicatorid\",\r\n          component: \"qtype_essayrubric\",\r\n        },\r\n        {\r\n          key: \"name\",\r\n          component: \"qtype_essayrubric\",\r\n        },\r\n        {\r\n          key: \"category\",\r\n          component: \"qtype_essayrubric\",\r\n        },\r\n        {\r\n          key: \"model\",\r\n          component: \"qtype_essayrubric\",\r\n        },\r\n        {\r\n          key: \"research\",\r\n          component: \"qtype_essayrubric\",\r\n        },\r\n        {\r\n          key: \"visible\",\r\n          component: \"qtype_essayrubric\",\r\n        },\r\n        {\r\n          key: \"search\",\r\n          component: \"qtype_essayrubric\",\r\n        },\r\n      ];\r\n      Str.get_strings(strings).then(function (results) {\r\n        let tabledata = [];\r\n        tabledata = Object.keys(input).map(function (key) {\r\n          return input[key];\r\n        });\r\n        tabledata.forEach((el, ind) => {\r\n          tabledata[ind].visible = Number(el.visible);\r\n          tabledata[ind].research = Number(el.research);\r\n        });\r\n\r\n        const direction = $(\"html\").attr(\"dir\");\r\n\r\n        const toggleDisabled = () => {\r\n          const outerElements = Array.from(\r\n            document.querySelectorAll(\".n_catch2\")\r\n          );\r\n          outerElements.forEach((el) => {\r\n            el.addEventListener(\"change\", () => {\r\n              if (\r\n                $(\".n_catch2:checked\")[0] &&\r\n                $(\"#ind_delete\").hasClass(\"disabled\")\r\n              ) {\r\n                $(\"#ind_delete\").removeClass(\"disabled\");\r\n              }\r\n              if (\r\n                !$(\".n_catch2:checked\")[0] &&\r\n                !$(\"#ind_delete\").hasClass(\"disabled\")\r\n              ) {\r\n                $(\"#ind_delete\").addClass(\"disabled\");\r\n              }\r\n            });\r\n          });\r\n        };\r\n\r\n        const isEditable = (cell) => {\r\n          let rowData = cell.getRow().getData();\r\n          let isEditable = !usedindicators.includes(rowData.indicatorid);\r\n          // eslint-disable-next-line curly\r\n          if (!isEditable) cell.getElement().className += \" cell-disabled\";\r\n\r\n          return isEditable;\r\n        };\r\n\r\n        var table = new Tabulator(\"#indicators-table\", {\r\n          //movableRows: hascapedit,\r\n          height: 540,\r\n          data: tabledata,\r\n          textDirection: direction,\r\n          layout: \"fitColumns\",\r\n          reactiveData: true,\r\n          columns: [\r\n            // {\r\n            //   rowHandle: hascapedit,\r\n            //   formatter: \"handle\",\r\n            //   headerSort: false,\r\n            //   frozen: true,\r\n            //   width: 30,\r\n            //   minWidth: 30,\r\n            // },\r\n            {\r\n              field: \"isindicatorselected\",\r\n              hozAlign: \"center\",\r\n              headerHozAlign: \"center\",\r\n              headerSort: false,\r\n              editable: isEditable,\r\n              formatter: (cell) => {\r\n                catid = cell.getRow()._row.data.id;\r\n                const value = cell.getValue();\r\n                let rowData = cell.getRow().getData();\r\n                let isCheckEditable = !usedindicators.includes(\r\n                  rowData.indicatorid\r\n                );\r\n                return `\r\n                                    <input class=\"n_catch n_catch2\" ${\r\n                                      hascapedit && isCheckEditable\r\n                                        ? \"\"\r\n                                        : \"disabled=disabled\"\r\n                                    } type=\"checkbox\" ${\r\n                  value ? 'checked=\"checked\"' : \"\"\r\n                } name=\"n_indicators_${catid}[]\" id=\"n_indicators_${catid}\"/>\r\n                                    `;\r\n              },\r\n              title: hascapedit\r\n                ? `\r\n                        <span>` +\r\n                  results[0] +\r\n                  `</span>\r\n                        <br>\r\n                        <input class=\"n_catch_all\" type=\"checkbox\" name=\"n_catch_all\" id=\"n_catch_all\"/>\r\n                        `\r\n                : `<span>` + results[0] + `</span>`,\r\n            },\r\n            {\r\n              // title: \"Indicatorid\",\r\n              title: results[1],\r\n              // title: Str.get_string('indicatorid', 'qtype_essayrubrics'),\r\n              field: \"indicatorid\",\r\n              validator: \"unique\",\r\n              editable: isEditable,\r\n              width: \"15%\",\r\n              editor: hascapedit ? \"list\" : false,\r\n              headerFilter: \"input\",\r\n              headerFilterPlaceholder: results[7],\r\n              headerFilterLiveFilter: true,\r\n              headerSort: false,\r\n              editorParams: {\r\n                valuesLookup: \"active\",\r\n                autocomplete: true,\r\n                allowEmpty: false,\r\n                listOnEmpty: true,\r\n                freetext: true,\r\n                placeholderEmpty: false,\r\n              },\r\n            },\r\n            {\r\n              title: results[2],\r\n              field: \"name\",\r\n              width: \"30%\",\r\n              editable: isEditable,\r\n              editor: hascapedit ? \"list\" : false,\r\n              headerFilter: \"input\",\r\n              headerFilterPlaceholder: results[7],\r\n              headerFilterLiveFilter: true,\r\n              tooltip: true,\r\n              validator: [\r\n                \"unique\",\r\n                (cell, value) => value !== \"\" && value !== \" \",\r\n              ],\r\n              editorParams: {\r\n                valuesLookup: \"active\",\r\n                autocomplete: true,\r\n                allowEmpty: false,\r\n                listOnEmpty: true,\r\n                freetext: true,\r\n                placeholderEmpty: false,\r\n              },\r\n              headerSort: false,\r\n            },\r\n            {\r\n              title: results[3],\r\n              field: \"category\",\r\n              editable: isEditable,\r\n              editor: hascapedit ? \"list\" : false,\r\n              headerFilter: \"input\",\r\n              headerFilterPlaceholder: results[7],\r\n              headerFilterLiveFilter: true,\r\n              validator: [\r\n                \"unique\",\r\n                (cell, value) => value !== \"\" && value !== \" \",\r\n              ],\r\n              editorParams: {\r\n                valuesLookup: \"active\",\r\n                autocomplete: true,\r\n                allowEmpty: false,\r\n                listOnEmpty: true,\r\n                freetext: true,\r\n                placeholderEmpty: false,\r\n                // itemFormatter: (label, value, item, element) => {\r\n                //   return `<strong>${label}</strong><br/>`;\r\n                // },\r\n              },\r\n              formatter: function (cell, formatterParams, onRendered) {\r\n                return cell.getValue() === \"â€”\" ? \"\" : cell.getValue();\r\n              },\r\n              headerSort: false,\r\n              // cssClass: hascapedit ? \"editablecol\" : false,\r\n            },\r\n            {\r\n              title: results[4],\r\n              field: \"model\",\r\n              editable: isEditable,\r\n              editor: hascapedit ? \"list\" : false,\r\n              headerFilter: \"input\",\r\n              headerFilterPlaceholder: results[7],\r\n              tooltip: true,\r\n              headerFilterLiveFilter: true,\r\n              validator: [\r\n                \"unique\",\r\n                (cell, value) => value !== \"\" && value !== \" \",\r\n              ],\r\n              editorParams: {\r\n                //values: params.models,\r\n                valuesLookup: \"active\",\r\n                autocomplete: true,\r\n                allowEmpty: false,\r\n                listOnEmpty: true,\r\n                freetext: true,\r\n                placeholderEmpty: false,\r\n                // itemFormatter: (label, value, item, element) => {\r\n                //   return `<strong>${label}</strong><br/>`;\r\n                // },\r\n              },\r\n              formatter: function (cell, formatterParams, onRendered) {\r\n                return cell.getValue() === \"â€”\" ? \"\" : cell.getValue();\r\n              },\r\n              headerSort: false,\r\n              // cssClass: hascapedit ? \"editablecol\" : false,\r\n            },\r\n            {\r\n              title: results[5],\r\n              field: \"research\",\r\n              hozAlign: \"center\",\r\n              width: \"10%\",\r\n              headerHozAlign: \"center\",\r\n              headerSort: false,\r\n              formatter: \"tickCross\",\r\n              formatterParams: {\r\n                allowEmpty: true,\r\n                allowTruthy: true,\r\n              },\r\n              cellClick: function (e, cell) {\r\n                cell.setValue(!cell.getValue());\r\n              },\r\n            },\r\n            {\r\n              title: results[6],\r\n              field: \"visible\",\r\n              hozAlign: \"center\",\r\n              editable: isEditable,\r\n              width: \"10%\",\r\n              headerHozAlign: \"center\",\r\n              headerSort: false,\r\n              formatter: \"tickCross\",\r\n              //editor: \"tickCross\",\r\n              formatterParams: {\r\n                allowEmpty: true,\r\n                allowTruthy: true,\r\n                tickElement:\r\n                  \"<i class='fa fa-eye eyeComponent' style='color: black;'></i>\",\r\n                crossElement:\r\n                  \"<i class='fa fa-eye-slash eyeComponent' style='color: black;'></i>\",\r\n              },\r\n              cellClick: function (e, cell) {\r\n                if (isEditable(cell)) {\r\n                  cell.setValue(!cell.getValue());\r\n                }\r\n              },\r\n            },\r\n          ],\r\n        });\r\n\r\n        // Listeners.\r\n        table.on(\"dataProcessed\", () => {\r\n          toggleDisabled();\r\n        });\r\n\r\n        if (hascapedit) {\r\n          table.on(\"tableBuilt\", function () {\r\n            $(\"#n_catch_all\").change(function () {\r\n              cells = table.getColumn(\"isindicatorselected\").getCells();\r\n              cells.forEach((element) => {\r\n                if ($(element.getElement()).hasClass(\"cell-disabled\")) return;\r\n                element.setValue(this.checked);\r\n              });\r\n              if (\r\n                $(\".n_catch2:checked\")[0] &&\r\n                $(\"#ind_delete\").hasClass(\"disabled\")\r\n              ) {\r\n                $(\"#ind_delete\").removeClass(\"disabled\");\r\n              }\r\n              if (\r\n                !$(\".n_catch2:checked\")[0] &&\r\n                !$(\"#ind_delete\").hasClass(\"disabled\")\r\n              ) {\r\n                $(\"#ind_delete\").addClass(\"disabled\");\r\n              }\r\n              toggleDisabled();\r\n            });\r\n\r\n            document\r\n              .getElementById(\"ind_submit\")\r\n              .addEventListener(\"click\", () => {\r\n                let updatedTableData = table.getData();\r\n\r\n                const empty = updatedTableData.find(\r\n                  (element) => element.name == undefined\r\n                );\r\n\r\n                if (empty) {\r\n                  require([\"core/toast\"], (Toast) => {\r\n                    Toast.add(\"Empty indicator name!\", {\r\n                      type: \"danger\",\r\n                    });\r\n                  });\r\n                  return false;\r\n                }\r\n\r\n                let indicatorsdata = JSON.stringify(table.getData());\r\n                document.getElementById(\"indicatorsdata\").value =\r\n                  indicatorsdata;\r\n                document.getElementById(\"indicatorsdata\").form.submit();\r\n\r\n                return true;\r\n              });\r\n          });\r\n          table.on(\"renderComplete\", () => {\r\n            let cells = [\r\n              ...table.getColumn(\"visible\").getCells(),\r\n              ...table.getColumn(\"research\").getCells(),\r\n              ...table.getColumn(\"isindicatorselected\").getCells(),\r\n            ];\r\n            cells.forEach((cell) => {\r\n              isEditable(cell);\r\n            });\r\n          });\r\n          document\r\n            .getElementById(\"ind_addnew\")\r\n            .addEventListener(\"click\", function () {\r\n              let lastId = 0;\r\n              let newData = table.getData();\r\n              newData.forEach((el) => {\r\n                if (el.indicatorid) {\r\n                  lastId = Number(el.indicatorid);\r\n                }\r\n              });\r\n              newData.push({\r\n                indicatorid: lastId + 1,\r\n                research: 1,\r\n                visible: 1,\r\n              });\r\n              table.replaceData(newData);\r\n            });\r\n          document\r\n            .getElementById(\"ind_delete\")\r\n            .addEventListener(\"click\", () => {\r\n              const elements = Array.from($(\".n_catch2\"));\r\n              const oldData = table.getData();\r\n              const newData = [];\r\n              elements.forEach((el, ind) => {\r\n                if (!el.checked) {\r\n                  newData.push(oldData[ind]);\r\n                }\r\n              });\r\n              table.replaceData(newData);\r\n              $(\".n_catch_all\")[0].checked = false;\r\n              $(\"#ind_delete\").addClass(\"disabled\");\r\n            });\r\n        }\r\n      });\r\n    };\r\n  },\r\n};\r\n"],"names":["init","params","hascapedit","usedindicators","call","methodname","args","done","result","JSON","parse","renderIndicators","fail","input","Str","get_strings","key","component","then","results","tabledata","Object","keys","map","forEach","el","ind","visible","Number","research","direction","$","attr","toggleDisabled","Array","from","document","querySelectorAll","addEventListener","hasClass","removeClass","addClass","isEditable","cell","rowData","getRow","getData","includes","indicatorid","getElement","className","table","Tabulator","height","data","textDirection","layout","reactiveData","columns","field","hozAlign","headerHozAlign","headerSort","editable","formatter","catid","_row","id","value","getValue","isCheckEditable","title","validator","width","editor","headerFilter","headerFilterPlaceholder","headerFilterLiveFilter","editorParams","valuesLookup","autocomplete","allowEmpty","listOnEmpty","freetext","placeholderEmpty","tooltip","formatterParams","onRendered","allowTruthy","cellClick","e","setValue","tickElement","crossElement","on","change","cells","getColumn","getCells","element","this","checked","getElementById","find","undefined","name","require","Toast","add","type","indicatorsdata","stringify","form","submit","lastId","newData","push","replaceData","elements","oldData"],"mappings":"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"}