{"version":3,"file":"questionindicator.min.js","sources":["../src/questionindicator.js"],"sourcesContent":["/* eslint-disable space-infix-ops */\r\n/* eslint-disable curly */\r\n/* eslint-disable promise/catch-or-return */\r\n/* eslint-disable promise/always-return */\r\n/* eslint-disable no-unreachable */\r\n/* eslint-disable babel/object-curly-spacing */\r\n/* eslint-disable no-empty-function */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable babel/semi */\r\n/* eslint-disable brace-style */\r\n/* eslint-disable block-spacing */\r\n/* eslint-disable max-statements-per-line */\r\n/* eslint-disable semi-spacing */\r\n/* eslint-disable no-debugger */\r\n/* eslint-disable space-before-blocks */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable block-scoped-var */\r\n/* eslint-disable no-empty */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable no-console */\r\n/* eslint-disable no-dupe-keys */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable key-spacing */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable capitalized-comments */\r\n\r\nimport $ from \"jquery\";\r\nimport * as Str from \"core/str\";\r\nimport ModalFactory from 'core/modal_factory';\r\nimport ModalEvents from 'core/modal_events';\r\nimport Notification from 'core/notification';\r\nimport Tabulator from \"https://unpkg.com/tabulator-tables/dist/js/tabulator.min.js\";\r\n\r\nexport default {\r\n  init: function (input, params, hascapedit, researchquestion) {\r\n    var strings = [\r\n      {\r\n        key: \"selectall\",\r\n        component: \"qtype_essayrubric\",\r\n      },\r\n      {\r\n        key: \"indicatorid\",\r\n        component: \"qtype_essayrubric\",\r\n      },\r\n      {\r\n        key: \"name\",\r\n        component: \"qtype_essayrubric\",\r\n      },\r\n      {\r\n        key: \"category\",\r\n        component: \"qtype_essayrubric\",\r\n      },\r\n      {\r\n        key: \"model\",\r\n        component: \"qtype_essayrubric\",\r\n      },\r\n      {\r\n        key: \"research\",\r\n        component: \"qtype_essayrubric\",\r\n      },\r\n      {\r\n        key: \"visible\",\r\n        component: \"qtype_essayrubric\",\r\n      },\r\n      {\r\n        key: \"type\",\r\n        component: \"qtype_essayrubric\",\r\n      },\r\n      {\r\n        key: \"weight\",\r\n        component: \"qtype_essayrubric\",\r\n      },\r\n      {\r\n        key: \"totalweight\",\r\n        component: \"qtype_essayrubric\",\r\n      },\r\n      {\r\n        key: \"search\",\r\n        component: \"qtype_essayrubric\",\r\n      },\r\n    ];\r\n    Str.get_strings(strings).then(function (results) {\r\n      let table;\r\n      const reinitTable = () => {\r\n        if (table !== undefined) {\r\n          // table.destroy();\r\n          table.replaceData(table.getData());\r\n        }\r\n        // table = new Tabulator(\"#questionindicatorfulltable-table\", tableoptions);\r\n      };\r\n\r\n      let availindicators = [];\r\n\r\n      const updateAutocomplete = (cell = null) => {\r\n        let allvalues = [];\r\n        if (cell) {\r\n          allvalues = cell.getColumn()._column.cells.map((col, i) => {\r\n            return col.value;\r\n          });\r\n        } else {\r\n          allvalues = tabledata.map((col, i) => {\r\n            return col.name;\r\n          });\r\n        }\r\n        availindicators = [\r\n          ...new Set(params.availindicators.concat(allvalues)),\r\n        ];\r\n        availindicators = availindicators.filter((el) => {\r\n          return el !== undefined;\r\n        });\r\n      };\r\n\r\n      const updateIndicatorsId = (cell = null) => {\r\n        let row = cell.getRow();\r\n\r\n        params.availindicatorsfull.forEach((element) => {\r\n          const matchingElement = params.availindicatorsfull.find(\r\n            (element) => element.name === cell.getData().name\r\n          );\r\n          if (matchingElement) {\r\n            row.update({ indicatorid: matchingElement.indicatorid });\r\n          } else {\r\n            row.update({ indicatorid: null });\r\n          }\r\n        });\r\n\r\n        params.availindicatorsfull = params.availindicatorsfull.filter((el) => {\r\n          return el !== undefined && el !== \"undefined\";\r\n        });\r\n      };\r\n\r\n      let tabledata = Object.keys(input).map((key) => input[key]);\r\n\r\n      const direction = $(\"html\").attr(\"dir\");\r\n      //TODO fetch readonly from backend\r\n      const readOnly = researchquestion;\r\n\r\n      let tableoptions = {\r\n        movableRows: hascapedit && readOnly === \"0\",\r\n        footerElement:\r\n          \"<div class='totalWeight'><span>\" +\r\n          results[9] +\r\n          \"</span> <span id='weightNum'>0</span></div>\",\r\n        height: 540,\r\n        data: tabledata,\r\n        textDirection: direction,\r\n        layout: \"fitColumns\",\r\n        reactiveData: true,\r\n        columns: [\r\n          {\r\n            rowHandle: hascapedit,\r\n            formatter: \"handle\",\r\n            headerSort: false,\r\n            frozen: true,\r\n            width: 30,\r\n            minWidth: 30,\r\n            visible: readOnly === \"0\",\r\n          },\r\n          {\r\n            field: \"isindicatorselected\",\r\n            hozAlign: \"center\",\r\n            headerHozAlign: \"center\",\r\n            headerSort: false,\r\n            editable: readOnly === \"0\",\r\n            formatter: (cell) => {\r\n              const catid = cell.getRow()._row.data.id;\r\n              const value = cell.getValue();\r\n              return `\r\n          <input ${\r\n            readOnly === \"1\" ? \"disabled\" : \"\"\r\n          } class=\"n_catch n_catch2\" ${hascapedit ? \"\" : \"disabled=disabled\"}\r\n          type=\"checkbox\" ${\r\n            value ? 'checked=\"checked\"' : \"\"\r\n          } name=\"n_indicators_${catid}[]\"\r\n          id=\"n_indicators_${catid}\"/>\r\n        `;\r\n            },\r\n            title: hascapedit\r\n              ? `\r\n          <span>` +\r\n                results[0] +\r\n                `</span>\r\n          <br>\r\n          <input ${\r\n            readOnly === \"1\" ? \"disabled\" : \"\"\r\n          } class=\"n_catch_all\" type=\"checkbox\" name=\"n_catch_all\" id=\"n_catch_all\"/>\r\n          `\r\n              : `<span>` + results[0] + `</span>`,\r\n          },\r\n          {\r\n            title: results[2],\r\n            field: \"name\",\r\n            width: \"50%\",\r\n            editable: readOnly === \"0\",\r\n            editor: hascapedit ? \"list\" : false,\r\n            headerFilter: \"input\",\r\n            headerFilterPlaceholder: results[10],\r\n            headerFilterLiveFilter: true,\r\n            validator: [\r\n              \"unique\",\r\n              (cell, value) => value !== \"\" && value !== \" \",\r\n            ],\r\n            editorParams: {\r\n              values: availindicators,\r\n              autocomplete: true,\r\n              allowEmpty: false,\r\n              listOnEmpty: true,\r\n              freetext: true,\r\n              placeholderEmpty: false,\r\n            },\r\n            headerSort: false,\r\n            cellEdited: function (cell) {\r\n              updateIndicatorsId(cell);\r\n\r\n              updateAutocomplete(cell);\r\n\r\n              for (const column of tableoptions.columns) {\r\n                if (column.field === \"name\") {\r\n                  column.editorParams.values = availindicators;\r\n                }\r\n              }\r\n\r\n              reinitTable();\r\n\r\n              // TODO: check main indicator\r\n            },\r\n          },\r\n          {\r\n            title: results[7],\r\n            field: \"type\",\r\n            width: \"20%\",\r\n            editable: readOnly === \"0\",\r\n            editor: hascapedit ? \"list\" : false,\r\n            editorParams: {\r\n              values: params.types,\r\n              allowEmpty: true,\r\n              listOnEmpty: true,\r\n              clearable: true,\r\n              // itemFormatter: (label, value, item, element) => {\r\n              //   return `\r\n              //     <strong>${label}</strong><br/>\r\n              //   `;\r\n              // },\r\n            },\r\n            formatter: (cell, formatterParams, onRendered) => {\r\n              return params.types[cell.getValue()] === \"â€”\"\r\n                ? \"\"\r\n                : params.types[cell.getValue()];\r\n            },\r\n            headerSort: false,\r\n            // cssClass: hascapedit ? \"editablecol\" : false,\r\n          },\r\n          {\r\n            title: results[8],\r\n            field: \"weight\",\r\n            hozAlign: \"left\",\r\n            editable: readOnly === \"0\",\r\n            maxWidth: 100,\r\n            headerHozAlign: \"center\",\r\n            cellEdited: (cell) => {\r\n              cell.setValue(Number(cell.getValue()));\r\n            },\r\n            editor: hascapedit ? true : false,\r\n          },\r\n        ],\r\n      };\r\n\r\n      // table = new Tabulator(\r\n      //   \"#questionindicatorfulltable-table\",\r\n      //   tableoptions\r\n      // );\r\n\r\n      updateAutocomplete();\r\n\r\n      // updateAutocomplete(cell);\r\n\r\n      for (const column of tableoptions.columns) {\r\n        if (column.field === \"name\") {\r\n          column.editorParams.values = availindicators;\r\n        }\r\n      }\r\n      // reinitTable();\r\n\r\n      // reinitTable();\r\n      table = new Tabulator(\"#questionindicatorfulltable-table\", tableoptions);\r\n\r\n      const rerenderTotalWeight = () => {\r\n        let totalWeightSum = 0;\r\n\r\n        document\r\n          .querySelectorAll(\".tabulator-row .tabulator-cell:nth-last-child(2)\")\r\n          .forEach((el) => {\r\n            let currentNum = Number(el.innerText);\r\n            if (isNaN(currentNum)) {\r\n              return;\r\n            }\r\n            totalWeightSum += currentNum;\r\n          });\r\n\r\n        $(\"#weightNum\")[0].innerText = totalWeightSum;\r\n      };\r\n\r\n      table.on(\"cellEdited\", function (cell) {\r\n        rerenderTotalWeight();\r\n      });\r\n\r\n      table.on(\"dataProcessed\", () => {\r\n        rerenderTotalWeight();\r\n        checkAddEvent();\r\n      });\r\n\r\n      // Listeners.\r\n\r\n      const checkAddEvent = () => {\r\n        const outerElements = Array.from(\r\n          document.querySelectorAll(\".n_catch2\")\r\n        );\r\n        outerElements.forEach((el) => {\r\n          el.addEventListener(\"click\", () => {\r\n            if (\r\n              $(\".n_catch2:checked\")[0] &&\r\n              $(\"#ind_delete\").hasClass(\"disabled\")\r\n            ) {\r\n              $(\"#ind_delete\").removeClass(\"disabled\");\r\n            }\r\n            if (\r\n              !$(\".n_catch2:checked\")[0] &&\r\n              !$(\"#ind_delete\").hasClass(\"disabled\")\r\n            ) {\r\n              $(\"#ind_delete\").addClass(\"disabled\");\r\n            }\r\n          });\r\n        });\r\n      };\r\n\r\n      table.on(\"renderComplete\", checkAddEvent);\r\n      table.on(\"renderComplete\", () => {\r\n        $(\".tabulator-row-handle-box\").attr(\r\n          \"class\",\r\n          \"icon fa fa-arrows fa-fw  iconsmall\"\r\n        );\r\n      });\r\n      if (hascapedit) {\r\n        table.on(\"tableBuilt\", function () {\r\n          if (readOnly === \"1\") $(\"#ind_addnew\")[0].disabled = true;\r\n          $(\"#n_catch_all\").change(function () {\r\n            const cells = table.getColumn(\"isindicatorselected\").getCells();\r\n            cells.forEach((element) => {\r\n              element.setValue(this.checked);\r\n            });\r\n            if (\r\n              $(\".n_catch2:checked\")[0] &&\r\n              $(\"#ind_delete\").hasClass(\"disabled\")\r\n            ) {\r\n              $(\"#ind_delete\").removeClass(\"disabled\");\r\n            }\r\n            if (\r\n              !$(\".n_catch2:checked\")[0] &&\r\n              !$(\"#ind_delete\").hasClass(\"disabled\")\r\n            ) {\r\n              $(\"#ind_delete\").addClass(\"disabled\");\r\n            }\r\n            checkAddEvent();\r\n          });\r\n          $(\"form\").submit((e) => {\r\n            let updatedTableData = table.getData();\r\n\r\n            const empty = updatedTableData.find(\r\n              (element) => element.name == undefined\r\n            );\r\n\r\n            if (empty) {\r\n              require([\"core/toast\"], (Toast) => {\r\n                Toast.add(\"Empty indicator name!\", {\r\n                  type: \"danger\",\r\n                });\r\n              });\r\n              return false;\r\n            }\r\n\r\n            let datajson = JSON.stringify(updatedTableData);\r\n\r\n            $(\"#questionindicatorfulltable\").attr(\"value\", datajson);\r\n            return true;\r\n          });\r\n        });\r\n\r\n        // table.on(\"cellClick\", function (e, cell) {\r\n        //     if ($(e.target).hasClass(\"n_catch\")) {\r\n        //         cell.setValue($(e.target).is(\":checked\"));\r\n        //     }\r\n        // });\r\n\r\n        document\r\n          .getElementById(\"ind_addnew\")\r\n          .addEventListener(\"click\", function () {\r\n            if (readOnly === \"1\") return;\r\n            let newData = table.getData();\r\n            newData.push({ weight: 0 });\r\n\r\n            table.replaceData(newData);\r\n            checkAddEvent();\r\n          });\r\n        document.getElementById(\"ind_delete\").addEventListener(\"click\", () => {\r\n\r\n          const elements = Array.from($(\".n_catch2\"));\r\n          const oldData = table.getData();\r\n          const newData = [];\r\n          elements.forEach((el, ind) => {\r\n            if (!el.checked) {\r\n              newData.push(oldData[ind]);\r\n            }\r\n          });\r\n\r\n          if (oldData.length !== newData.length) {\r\n\r\n            Str.get_strings([\r\n              { key: 'labeldeleteindicators', component: 'qtype_essayrubric' },\r\n              { key: 'areyoushure', component: 'qtype_essayrubric' },\r\n              { key: 'success', component: 'qtype_essayrubric' },\r\n            ]).done(function (strings) {\r\n              var modalPromise = ModalFactory.create({\r\n                type: ModalFactory.types.SAVE_CANCEL,\r\n                title: strings[0],\r\n                body: strings[1]\r\n              });\r\n\r\n              $.when(modalPromise).then(function (fmodal) {\r\n\r\n                fmodal.setSaveButtonText(strings[2]);\r\n\r\n                // Handle save event.\r\n                fmodal.getRoot().on(ModalEvents.save, function () {\r\n                  table.replaceData(newData);\r\n                  $(\".n_catch_all\")[0].checked = false;\r\n                  $(\"#ind_delete\").addClass(\"disabled\");\r\n                });\r\n\r\n                return fmodal;\r\n              }).done(function (modal) {\r\n                modal.show();\r\n              }).fail(Notification.exception);\r\n            })\r\n          }\r\n        });\r\n      }\r\n    });\r\n  },\r\n};\r\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireDefault","obj","__esModule","default","_jquery","Str","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_modal_factory","_modal_events","_notification","_tabulatorMin","_default","init","input","params","hascapedit","researchquestion","get_strings","component","then","results","table","availindicators","updateAutocomplete","cell","arguments","length","undefined","allvalues","getColumn","_column","cells","map","col","i","value","tabledata","name","Set","concat","filter","el","keys","direction","$","attr","readOnly","tableoptions","movableRows","footerElement","height","data","textDirection","layout","reactiveData","columns","rowHandle","formatter","headerSort","frozen","width","minWidth","visible","field","hozAlign","headerHozAlign","editable","catid","getRow","_row","id","getValue","title","editor","headerFilter","headerFilterPlaceholder","headerFilterLiveFilter","validator","editorParams","values","autocomplete","allowEmpty","listOnEmpty","freetext","placeholderEmpty","cellEdited","row","availindicatorsfull","forEach","element","matchingElement","find","getData","update","indicatorid","updateIndicatorsId","column","replaceData","types","clearable","formatterParams","onRendered","maxWidth","setValue","Number","Tabulator","rerenderTotalWeight","totalWeightSum","document","querySelectorAll","currentNum","innerText","isNaN","on","checkAddEvent","Array","from","addEventListener","hasClass","removeClass","addClass","disabled","change","getCells","this","checked","submit","e","updatedTableData","require","Toast","add","type","datajson","JSON","stringify","getElementById","newData","push","weight","elements","oldData","ind","done","strings","modalPromise","ModalFactory","create","SAVE_CANCEL","body","when","fmodal","setSaveButtonText","getRoot","ModalEvents","save","modal","show","fail","Notification","exception","_exports"],"mappings":"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"}