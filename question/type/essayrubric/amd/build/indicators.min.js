define("qtype_essayrubric/indicators",["exports","core/ajax","core/str","https://unpkg.com/tabulator-tables/dist/js/tabulator.min.js"],(function(_exports,_ajax,Str,_tabulatorMin){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_ajax=_interopRequireDefault(_ajax),Str=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Str),_tabulatorMin=_interopRequireDefault(_tabulatorMin);var _default={init:function(params,hascapedit,usedindicators){_ajax.default.call([{methodname:"qtype_essayrubric_get_indicators",args:{},done:function(result){result=JSON.parse(result.result),renderIndicators(result)},fail:{}}]);const renderIndicators=input=>{Str.get_strings([{key:"selectall",component:"qtype_essayrubric"},{key:"indicatorid",component:"qtype_essayrubric"},{key:"name",component:"qtype_essayrubric"},{key:"category",component:"qtype_essayrubric"},{key:"model",component:"qtype_essayrubric"},{key:"research",component:"qtype_essayrubric"},{key:"visible",component:"qtype_essayrubric"},{key:"search",component:"qtype_essayrubric"}]).then((function(results){let tabledata=[];tabledata=Object.keys(input).map((function(key){return input[key]})),tabledata.forEach(((el,ind)=>{tabledata[ind].visible=Number(el.visible),tabledata[ind].research=Number(el.research)}));const direction=$("html").attr("dir"),toggleDisabled=()=>{Array.from(document.querySelectorAll(".n_catch2")).forEach((el=>{el.addEventListener("change",(()=>{$(".n_catch2:checked")[0]&&$("#ind_delete").hasClass("disabled")&&$("#ind_delete").removeClass("disabled"),$(".n_catch2:checked")[0]||$("#ind_delete").hasClass("disabled")||$("#ind_delete").addClass("disabled")}))}))},isEditable=cell=>{let rowData=cell.getRow().getData(),isEditable=!usedindicators.includes(rowData.indicatorid);return isEditable||(cell.getElement().className+=" cell-disabled"),isEditable};var table=new _tabulatorMin.default("#indicators-table",{height:540,data:tabledata,textDirection:direction,layout:"fitColumns",reactiveData:!0,columns:[{field:"isindicatorselected",hozAlign:"center",headerHozAlign:"center",headerSort:!1,editable:isEditable,formatter:cell=>{catid=cell.getRow()._row.data.id;const value=cell.getValue();let rowData=cell.getRow().getData(),isCheckEditable=!usedindicators.includes(rowData.indicatorid);return'\n                                    <input class="n_catch n_catch2" '.concat(hascapedit&&isCheckEditable?"":"disabled=disabled",' type="checkbox" ').concat(value?'checked="checked"':"",' name="n_indicators_').concat(catid,'[]" id="n_indicators_').concat(catid,'"/>\n                                    ')},title:hascapedit?"\n                        <span>"+results[0]+'</span>\n                        <br>\n                        <input class="n_catch_all" type="checkbox" name="n_catch_all" id="n_catch_all"/>\n                        ':"<span>"+results[0]+"</span>"},{title:results[1],field:"indicatorid",validator:"unique",editable:isEditable,width:"15%",editor:!!hascapedit&&"list",headerFilter:"input",headerFilterPlaceholder:results[7],headerFilterLiveFilter:!0,headerSort:!1,editorParams:{valuesLookup:"active",autocomplete:!0,allowEmpty:!1,listOnEmpty:!0,freetext:!0,placeholderEmpty:!1}},{title:results[2],field:"name",width:"30%",editable:isEditable,editor:!!hascapedit&&"list",headerFilter:"input",headerFilterPlaceholder:results[7],headerFilterLiveFilter:!0,tooltip:!0,validator:["unique",(cell,value)=>""!==value&&" "!==value],editorParams:{valuesLookup:"active",autocomplete:!0,allowEmpty:!1,listOnEmpty:!0,freetext:!0,placeholderEmpty:!1},headerSort:!1},{title:results[3],field:"category",editable:isEditable,editor:!!hascapedit&&"list",headerFilter:"input",headerFilterPlaceholder:results[7],headerFilterLiveFilter:!0,validator:["unique",(cell,value)=>""!==value&&" "!==value],editorParams:{valuesLookup:"active",autocomplete:!0,allowEmpty:!1,listOnEmpty:!0,freetext:!0,placeholderEmpty:!1},formatter:function(cell,formatterParams,onRendered){return"—"===cell.getValue()?"":cell.getValue()},headerSort:!1},{title:results[4],field:"model",editable:isEditable,editor:!!hascapedit&&"list",headerFilter:"input",headerFilterPlaceholder:results[7],tooltip:!0,headerFilterLiveFilter:!0,validator:["unique",(cell,value)=>""!==value&&" "!==value],editorParams:{valuesLookup:"active",autocomplete:!0,allowEmpty:!1,listOnEmpty:!0,freetext:!0,placeholderEmpty:!1},formatter:function(cell,formatterParams,onRendered){return"—"===cell.getValue()?"":cell.getValue()},headerSort:!1},{title:results[5],field:"research",hozAlign:"center",width:"10%",headerHozAlign:"center",headerSort:!1,formatter:"tickCross",formatterParams:{allowEmpty:!0,allowTruthy:!0},cellClick:function(e,cell){cell.setValue(!cell.getValue())}},{title:results[6],field:"visible",hozAlign:"center",editable:isEditable,width:"10%",headerHozAlign:"center",headerSort:!1,formatter:"tickCross",formatterParams:{allowEmpty:!0,allowTruthy:!0,tickElement:"<i class='fa fa-eye eyeComponent' style='color: black;'></i>",crossElement:"<i class='fa fa-eye-slash eyeComponent' style='color: black;'></i>"},cellClick:function(e,cell){isEditable(cell)&&cell.setValue(!cell.getValue())}}]});table.on("dataProcessed",(()=>{toggleDisabled()})),hascapedit&&(table.on("tableBuilt",(function(){$("#n_catch_all").change((function(){cells=table.getColumn("isindicatorselected").getCells(),cells.forEach((element=>{$(element.getElement()).hasClass("cell-disabled")||element.setValue(this.checked)})),$(".n_catch2:checked")[0]&&$("#ind_delete").hasClass("disabled")&&$("#ind_delete").removeClass("disabled"),$(".n_catch2:checked")[0]||$("#ind_delete").hasClass("disabled")||$("#ind_delete").addClass("disabled"),toggleDisabled()})),document.getElementById("ind_submit").addEventListener("click",(()=>{if(table.getData().find((element=>null==element.name)))return require(["core/toast"],(Toast=>{Toast.add("Empty indicator name!",{type:"danger"})})),!1;let indicatorsdata=JSON.stringify(table.getData());return document.getElementById("indicatorsdata").value=indicatorsdata,document.getElementById("indicatorsdata").form.submit(),!0}))})),table.on("renderComplete",(()=>{[...table.getColumn("visible").getCells(),...table.getColumn("research").getCells(),...table.getColumn("isindicatorselected").getCells()].forEach((cell=>{isEditable(cell)}))})),document.getElementById("ind_addnew").addEventListener("click",(function(){let lastId=0,newData=table.getData();newData.forEach((el=>{el.indicatorid&&(lastId=Number(el.indicatorid))})),newData.push({indicatorid:lastId+1,research:1,visible:1}),table.replaceData(newData)})),document.getElementById("ind_delete").addEventListener("click",(()=>{const elements=Array.from($(".n_catch2")),oldData=table.getData(),newData=[];elements.forEach(((el,ind)=>{el.checked||newData.push(oldData[ind])})),table.replaceData(newData),$(".n_catch_all")[0].checked=!1,$("#ind_delete").addClass("disabled")})))}))}}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=indicators.min.js.map