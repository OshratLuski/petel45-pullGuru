{"version":3,"file":"studentanswer.min.js","sources":["../src/studentanswer.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Defines the behavior of the student's answer form for a vplquestion.\n * @copyright  Astor Bizard, 2019\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* globals Terminal */\n/* globals VPLTerminal */\ndefine([\n    'jquery',\n    'core/url',\n    'core/config',\n    'qtype_savpl/codeeditors',\n    'qtype_savpl/vplservice',\n    'qtype_savpl/scriptsloader'\n    ], function($, url, cfg, CodeEditors, VPLService, ScriptsLoader) {\n\n    /**\n     * For VPLTerminal constructor - determines what to display on titlebar.\n     * In our case, we just want to display if process is running or exited.\n     * @param {String} key Key to map.\n     * @return {String} Mapped string.\n     */\n    function str(key) {\n        switch (key) {\n            case 'console': return '[Process';\n            case 'connected':\n            case 'connecting':\n            case 'running': return 'running]';\n            case 'connection_closed': return 'exited]';\n            default: return key;\n        }\n    }\n\n    /**\n     * Escape special html characters in a text.\n     * @param {String} text HTML text to escape.\n     * @return {String} Escaped text.\n     */\n    function escapeHtml(text) {\n        var map = {'&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;'};\n        let result = '';\n        try {\n            result = text.replace(/[&<>\"']/g, function(c) {\n                return map[c];\n            });\n        }\n        catch (error) {\n            console.log('ERROR');\n            console.log(error);\n        }\n        return result;\n    }\n\n    /**\n     * Build an html string to display the specified field of the result,\n     * formatting titles (field name) and subtitles (lines starting with '-').\n     * @param {Object} result Evaluation/execution result object.\n     * @param {String} field Field of result to display.\n     * @param {String} level CSS class fragment for error level.\n     * @return {String} Formatted result as HTML fragment.\n     */\n    function makeResultHtml(result, field, level) {\n        if (result[field]) {\n            var formattedText = '';\n            escapeHtml(result[field]).split('\\n').forEach(function(line) {\n                if (line.charAt(0) == '-') {\n                    line = '<span class=\"vpl-test-title font-italic rounded px-1\">' + line + '</span>';\n                }\n                formattedText += line + '\\n';\n            });\n            return '<span class=\"vpl-result-title vpl-title-' + level + ' d-block font-weight-bold border border-dark pl-1 mb-1\">' +\n                        M.util.get_string(field, 'qtype_savpl') +\n                    '</span>' +\n                    formattedText.trim();\n        }\n        return '';\n    }\n\n    /**\n     * Display result on screen in specified display.\n     * If result is null, this method will try to get it from data-result attribute.\n     * @param {String} displayId ID of DOM element in which result should be displayed.\n     * @param {?Object} result Evaluation/execution result object, or null.\n     */\n    function displayResult(displayId, result) {\n        var $display = $('#' + displayId);\n        if (result === null) {\n            // This method parses the JSON by itself - no need to parse it.\n            result = $display.data('result');\n        }\n        var html = makeResultHtml(result, 'compilation', 'error')\n            + makeResultHtml(result, 'evaluation', 'info')\n            + makeResultHtml(result, 'execerror', 'error')\n            + makeResultHtml(result, 'evaluationerror', 'error');\n        if (!html) {\n            html = makeResultHtml(result, 'execution', 'error');\n        }\n        $display[html ? 'show' : 'hide']();\n        $display.html(html);\n    }\n\n    /**\n     * Set up student answer box (ace editor, terminal and reset/correction, run and pre-check buttons).\n     * @param {String|Number} questionId Question ID, used for DOM identifiers.\n     * @param {String|Number} vplId VPL ID, used for ajax calls.\n     * @param {String|Number} userId User ID, used for ajax calls.\n     * @param {String} textareaName HTML name attribute of textarea used for student answer.\n     * @param {Number} vplVersion Version number of mod_vpl (used to decide how to load scripts as they moved in 3.4 and 4.2).\n     */\n    function setup(questionId, userId, textareaName, vplVersion) {\n        // This is the textarea that will recieve student's answer.\n        var $textarea = $('textarea[name=\"' + textareaName + '\"]');\n        var $resetAndCorrectionButtons = $('#qvpl_reset_q' + questionId + ', #qvpl_correction_q' + questionId);\n\n        // Setup ace editor THEN buttons (so Run and Check correctly take current ace text).\n        CodeEditors.setupQuestionEditor($textarea, $resetAndCorrectionButtons, $textarea.data('lineoffset'))\n        .done(function() {\n\n            if ($textarea.attr('readonly') == 'readonly') {\n                // We are in review (readonly) mode - do nothing more.\n                return;\n            }\n\n            ScriptsLoader.loadVPLTerminal(vplVersion, function() {\n                // Setup terminal to fix number of rows (default is too much to fit within a quiz).\n                var oldPrototype = Terminal.prototype;\n                Terminal = function(data) { // eslint-disable-line no-global-assign\n                    data.rows = 10;\n                    return new oldPrototype.constructor(data);\n                };\n                Terminal.prototype = oldPrototype;\n\n                // Initialize the terminal on the wrapper.\n                var wrapperId = 'terminal_wrapper_q' + questionId;\n                var terminal = new VPLTerminal(wrapperId, wrapperId, str);\n                if (typeof $('#' + wrapperId).dialog === 'function') { // Check needed for VPL before 3.4.\n                    $('#' + wrapperId).dialog('option', 'draggable', true);\n                }\n\n                // Deactivate message function (it normally displays a ticking timer, which is annoying).\n                terminal.setMessage = function() {\n                    return;\n                };\n\n                // Move the terminal to a nice place within the question box.\n                var qvplButtons = '#qvpl_buttons_q' + questionId;\n                var $globalTerminalWrapper = $('#' + wrapperId).parent();\n                $globalTerminalWrapper.insertAfter(qvplButtons);\n\n                // Override connect function, that indirectly sets the terminal to be displayed somewhere else.\n                var oldConnect = terminal.connect;\n                terminal.connect = function() {\n                    oldConnect.apply(terminal, arguments);\n                    $globalTerminalWrapper.css('top', 0).css('left', 0);\n                    $('body > .ui-widget-overlay.ui-front').first().remove(); // Remove the modal lock overlay.\n                };\n\n                // Change close button style to match the general question style.\n                $globalTerminalWrapper.find('.ui-dialog-titlebar-close')\n                .html('<i class=\"fa fa-close\"></i>')\n                .addClass('btn btn-secondary close-terminal');\n\n                // Setup a VPL button (run, debug, or evaluate).\n                var setupButton = function(action, icon, filestype) {\n                    var $button = $(qvplButtons + ' button[data-action=\"' + action + '\"]');\n                    var $icon = $('<i class=\"fa fa-' + icon + '\"></i>');\n                    $('<span class=\"ml-2\">').append($icon).appendTo($button);\n                    var reenableButtons = function() {\n                        $icon.attr('class', 'fa fa-' + icon);\n                        $('.qvpl-buttons *').removeAttr('disabled');\n                    };\n\n                    $button.click(function() {\n                        $('.qvpl-buttons *').attr('disabled', 'disabled');\n                        $('.close-terminal').trigger('click');\n                        $icon.attr('class', 'fa fa-refresh fa-spin');\n                        // We got nested callbacks, but we can't promisify them,\n                        // as callback may be called several times depending on the underlying websocket messages order.\n                        VPLService.call('save', questionId, $textarea.val(), filestype)\n                        .then(function() {\n                            console.log('terminal on exec');\n                            console.log(terminal);\n                            return VPLService.call('exec', action, questionId, userId, terminal, function(result) {\n                                displayResult('vpl_result_q' + questionId, result);\n                                reenableButtons();\n                            });\n                        })\n                        .fail(function(details) {\n                            displayResult('vpl_result_q' + questionId, {execerror: details});\n                            reenableButtons();\n                        });\n                    });\n                };\n\n                setupButton('run', 'rocket', 'run');\n                setupButton('debug', 'check-square-o', 'precheck');\n                setupButton('evaluate', 'check-square-o', 'precheck');\n            });\n        })\n        .done(function() {\n            // Load jQueryUI here to not interfere with the one used by VPL modules.\n            require(['jqueryui'], function() {\n\n                CodeEditors.getEditorPreferences()\n                .done(function(prefs) {\n\n                    var $form = $('#qvpl_editor_preferences_form' + questionId);\n\n                    var $fontSizeInput = $('[name=\"vpl_fontsize' + questionId + '\"]');\n                    $fontSizeInput.val(prefs.fontSize);\n\n                    var $aceThemeInput = $('[name=\"vpl_editortheme' + questionId + '\"]');\n                    $aceThemeInput.val(prefs.aceTheme);\n\n                    // Some validation around font size.\n                    var prevFontSize = $fontSizeInput.val();\n                    $fontSizeInput.on('input', function() {\n                        var newFontSize = Number($(this).val());\n                        if (isNaN(newFontSize)) {\n                            $(this).val(prevFontSize);\n                        } else {\n                            // Clamp in [1..48].\n                            if (newFontSize < 1) {\n                                newFontSize = 1;\n                            } else if (newFontSize > 48) {\n                                newFontSize = 48;\n                            }\n                            $(this).val(newFontSize);\n                            prevFontSize = newFontSize;\n                            CodeEditors.changeFontSize(newFontSize); // Apply changes as a preview.\n                        }\n                    });\n\n                    // Setup increase and decrease font size buttons.\n                    $form.find('[data-role=\"fontsizeincr\"]').click(function() {\n                        $fontSizeInput.val(Number($fontSizeInput.val()) + 1);\n                        $fontSizeInput.trigger('input');\n                    });\n                    $form.find('[data-role=\"fontsizedecr\"]').click(function() {\n                        $fontSizeInput.val(Number($fontSizeInput.val()) - 1);\n                        $fontSizeInput.trigger('input');\n                    });\n\n                    $aceThemeInput.on('change', function() {\n                        CodeEditors.changeTheme($(this).val()); // Apply changes as a preview.\n                    });\n\n                    $('#qvpl_editor_preferences' + questionId).click(function() {\n                        $form.dialog({\n                            autoOpen: true,\n                            dialogClass: 'bg-white border border-primary qtype_savpl_editor_preferences_dialog',\n                            title: M.util.get_string('editoroptions', 'qtype_savpl'),\n                            closeOnEscape: true,\n                            modal: true,\n                            width: 400,\n                            buttons:\n                            [{\n                                text: M.util.get_string('savechanges', 'moodle'),\n                                'class': 'btn btn-primary mx-1',\n                                click: function() {\n                                    $fontSizeInput.data('save', $fontSizeInput.val());\n                                    $aceThemeInput.data('save', $aceThemeInput.val());\n                                    CodeEditors.saveEditorPreferences($aceThemeInput.val(), $fontSizeInput.val());\n                                    $(this).dialog('close');\n                                }\n                            },\n                            {\n                                text: M.util.get_string('cancel', 'moodle'),\n                                'class': 'btn btn-secondary mx-1',\n                                click: function() {\n                                    $(this).dialog('close');\n                                }\n                            }],\n                            create: function() {\n                                $form.dialog('widget').find('.ui-dialog-title').before('<i class=\"fa fa-fw fa-cog icon\"></i>');\n                            },\n                            open: function() {\n                                $fontSizeInput.data('save', $fontSizeInput.val());\n                                $aceThemeInput.data('save', $aceThemeInput.val());\n                                var $widget = $form.dialog('widget');\n                                $widget.focus();\n                                $widget.next('.ui-widget-overlay').addClass('qtype_savpl_dialog_overlay');\n                            },\n                            close: function() {\n                                $fontSizeInput.val($fontSizeInput.data('save'));\n                                $aceThemeInput.val($aceThemeInput.data('save'));\n                                CodeEditors.changeFontSize($fontSizeInput.val());\n                                CodeEditors.changeTheme($aceThemeInput.val());\n                                $('[name^=\"vpl_fontsize\"]').val($fontSizeInput.val());\n                                $('[name^=\"vpl_editortheme\"]').val($aceThemeInput.val());\n                            },\n                        });\n                    });\n                });\n            });\n        });\n    }\n\n    return {\n        setup: setup,\n        displayResult: displayResult\n    };\n});\n"],"names":["define","$","url","cfg","CodeEditors","VPLService","ScriptsLoader","str","key","makeResultHtml","result","field","level","formattedText","text","map","replace","c","error","console","log","escapeHtml","split","forEach","line","charAt","M","util","get_string","trim","displayResult","displayId","$display","data","html","setup","questionId","userId","textareaName","vplVersion","$textarea","$resetAndCorrectionButtons","setupQuestionEditor","done","attr","loadVPLTerminal","oldPrototype","Terminal","prototype","rows","constructor","wrapperId","terminal","VPLTerminal","dialog","setMessage","qvplButtons","$globalTerminalWrapper","parent","insertAfter","oldConnect","connect","apply","arguments","css","first","remove","find","addClass","setupButton","action","icon","filestype","$button","$icon","append","appendTo","reenableButtons","removeAttr","click","trigger","call","val","then","fail","details","execerror","require","getEditorPreferences","prefs","$form","$fontSizeInput","fontSize","$aceThemeInput","aceTheme","prevFontSize","on","newFontSize","Number","this","isNaN","changeFontSize","changeTheme","autoOpen","dialogClass","title","closeOnEscape","modal","width","buttons","saveEditorPreferences","create","before","open","$widget","focus","next","close"],"mappings":";;;;;AAuBAA,mCAAO,CACH,SACA,WACA,cACA,0BACA,yBACA,8BACG,SAASC,EAAGC,IAAKC,IAAKC,YAAaC,WAAYC,wBAQzCC,IAAIC,YACDA,SACC,gBAAkB,eAClB,gBACA,iBACA,gBAAkB,eAClB,0BAA4B,yBACjBA,cAgCfC,eAAeC,OAAQC,MAAOC,UAC/BF,OAAOC,OAAQ,KACXE,cAAgB,mBAzBRC,UACZC,IAAM,KAAM,YAAc,WAAa,WAAa,aAAe,cACnEL,OAAS,OAETA,OAASI,KAAKE,QAAQ,YAAY,SAASC,UAChCF,IAAIE,MAGnB,MAAOC,OACHC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,cAETR,OAcHW,CAAWX,OAAOC,QAAQW,MAAM,MAAMC,SAAQ,SAASC,MAC7B,KAAlBA,KAAKC,OAAO,KACZD,KAAO,yDAA2DA,KAAO,WAE7EX,eAAiBW,KAAO,QAErB,2CAA6CZ,MAAQ,2DAChDc,EAAEC,KAAKC,WAAWjB,MAAO,eAC7B,UACAE,cAAcgB,aAEnB,YASFC,cAAcC,UAAWrB,YAC1BsB,SAAW/B,EAAE,IAAM8B,WACR,OAAXrB,SAEAA,OAASsB,SAASC,KAAK,eAEvBC,KAAOzB,eAAeC,OAAQ,cAAe,SAC3CD,eAAeC,OAAQ,aAAc,QACrCD,eAAeC,OAAQ,YAAa,SACpCD,eAAeC,OAAQ,kBAAmB,SAC3CwB,OACDA,KAAOzB,eAAeC,OAAQ,YAAa,UAE/CsB,SAASE,KAAO,OAAS,UACzBF,SAASE,KAAKA,YAwMX,CACHC,eA9LWC,WAAYC,OAAQC,aAAcC,gBAEzCC,UAAYvC,EAAE,kBAAoBqC,aAAe,MACjDG,2BAA6BxC,EAAE,gBAAkBmC,WAAa,uBAAyBA,YAG3FhC,YAAYsC,oBAAoBF,UAAWC,2BAA4BD,UAAUP,KAAK,eACrFU,MAAK,WAEgC,YAA9BH,UAAUI,KAAK,aAKnBtC,cAAcuC,gBAAgBN,YAAY,eAElCO,aAAeC,SAASC,UAC5BD,SAAW,SAASd,aAChBA,KAAKgB,KAAO,GACL,IAAIH,aAAaI,YAAYjB,OAExCc,SAASC,UAAYF,iBAGjBK,UAAY,qBAAuBf,WACnCgB,SAAW,IAAIC,YAAYF,UAAWA,UAAW5C,KACZ,mBAA9BN,EAAE,IAAMkD,WAAWG,QAC1BrD,EAAE,IAAMkD,WAAWG,OAAO,SAAU,aAAa,GAIrDF,SAASG,WAAa,iBAKlBC,YAAc,kBAAoBpB,WAClCqB,uBAAyBxD,EAAE,IAAMkD,WAAWO,SAChDD,uBAAuBE,YAAYH,iBAG/BI,WAAaR,SAASS,QAC1BT,SAASS,QAAU,WACfD,WAAWE,MAAMV,SAAUW,WAC3BN,uBAAuBO,IAAI,MAAO,GAAGA,IAAI,OAAQ,GACjD/D,EAAE,sCAAsCgE,QAAQC,UAIpDT,uBAAuBU,KAAK,6BAC3BjC,KAAK,+BACLkC,SAAS,wCAGNC,YAAc,SAASC,OAAQC,KAAMC,eACjCC,QAAUxE,EAAEuD,YAAc,wBAA0Bc,OAAS,MAC7DI,MAAQzE,EAAE,mBAAqBsE,KAAO,UAC1CtE,EAAE,uBAAuB0E,OAAOD,OAAOE,SAASH,aAC5CI,gBAAkB,WAClBH,MAAM9B,KAAK,QAAS,SAAW2B,MAC/BtE,EAAE,mBAAmB6E,WAAW,aAGpCL,QAAQM,OAAM,WACV9E,EAAE,mBAAmB2C,KAAK,WAAY,YACtC3C,EAAE,mBAAmB+E,QAAQ,SAC7BN,MAAM9B,KAAK,QAAS,yBAGpBvC,WAAW4E,KAAK,OAAQ7C,WAAYI,UAAU0C,MAAOV,WACpDW,MAAK,kBACFhE,QAAQC,IAAI,oBACZD,QAAQC,IAAIgC,UACL/C,WAAW4E,KAAK,OAAQX,OAAQlC,WAAYC,OAAQe,UAAU,SAAS1C,QAC1EoB,cAAc,eAAiBM,WAAY1B,QAC3CmE,wBAGPO,MAAK,SAASC,SACXvD,cAAc,eAAiBM,WAAY,CAACkD,UAAWD,UACvDR,yBAKZR,YAAY,MAAO,SAAU,OAC7BA,YAAY,QAAS,iBAAkB,YACvCA,YAAY,WAAY,iBAAkB,kBAGjD1B,MAAK,WAEF4C,QAAQ,CAAC,aAAa,WAElBnF,YAAYoF,uBACX7C,MAAK,SAAS8C,WAEPC,MAAQzF,EAAE,gCAAkCmC,YAE5CuD,eAAiB1F,EAAE,sBAAwBmC,WAAa,MAC5DuD,eAAeT,IAAIO,MAAMG,cAErBC,eAAiB5F,EAAE,yBAA2BmC,WAAa,MAC/DyD,eAAeX,IAAIO,MAAMK,cAGrBC,aAAeJ,eAAeT,MAClCS,eAAeK,GAAG,SAAS,eACnBC,YAAcC,OAAOjG,EAAEkG,MAAMjB,OAC7BkB,MAAMH,aACNhG,EAAEkG,MAAMjB,IAAIa,eAGRE,YAAc,EACdA,YAAc,EACPA,YAAc,KACrBA,YAAc,IAElBhG,EAAEkG,MAAMjB,IAAIe,aACZF,aAAeE,YACf7F,YAAYiG,eAAeJ,iBAKnCP,MAAMvB,KAAK,8BAA8BY,OAAM,WAC3CY,eAAeT,IAAIgB,OAAOP,eAAeT,OAAS,GAClDS,eAAeX,QAAQ,YAE3BU,MAAMvB,KAAK,8BAA8BY,OAAM,WAC3CY,eAAeT,IAAIgB,OAAOP,eAAeT,OAAS,GAClDS,eAAeX,QAAQ,YAG3Ba,eAAeG,GAAG,UAAU,WACxB5F,YAAYkG,YAAYrG,EAAEkG,MAAMjB,UAGpCjF,EAAE,2BAA6BmC,YAAY2C,OAAM,WAC7CW,MAAMpC,OAAO,CACTiD,UAAU,EACVC,YAAa,uEACbC,MAAO/E,EAAEC,KAAKC,WAAW,gBAAiB,eAC1C8E,eAAe,EACfC,OAAO,EACPC,MAAO,IACPC,QACA,CAAC,CACG/F,KAAMY,EAAEC,KAAKC,WAAW,cAAe,gBAC9B,uBACTmD,MAAO,WACHY,eAAe1D,KAAK,OAAQ0D,eAAeT,OAC3CW,eAAe5D,KAAK,OAAQ4D,eAAeX,OAC3C9E,YAAY0G,sBAAsBjB,eAAeX,MAAOS,eAAeT,OACvEjF,EAAEkG,MAAM7C,OAAO,WAGvB,CACIxC,KAAMY,EAAEC,KAAKC,WAAW,SAAU,gBACzB,yBACTmD,MAAO,WACH9E,EAAEkG,MAAM7C,OAAO,YAGvByD,OAAQ,WACJrB,MAAMpC,OAAO,UAAUa,KAAK,oBAAoB6C,OAAO,yCAE3DC,KAAM,WACFtB,eAAe1D,KAAK,OAAQ0D,eAAeT,OAC3CW,eAAe5D,KAAK,OAAQ4D,eAAeX,WACvCgC,QAAUxB,MAAMpC,OAAO,UAC3B4D,QAAQC,QACRD,QAAQE,KAAK,sBAAsBhD,SAAS,+BAEhDiD,MAAO,WACH1B,eAAeT,IAAIS,eAAe1D,KAAK,SACvC4D,eAAeX,IAAIW,eAAe5D,KAAK,SACvC7B,YAAYiG,eAAeV,eAAeT,OAC1C9E,YAAYkG,YAAYT,eAAeX,OACvCjF,EAAE,0BAA0BiF,IAAIS,eAAeT,OAC/CjF,EAAE,6BAA6BiF,IAAIW,eAAeX,uBAW1EpD,cAAeA"}