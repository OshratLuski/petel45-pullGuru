{"version":3,"file":"vplideblocklyfile.min.js","sources":["../src/vplideblocklyfile.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\r\n//\r\n// VPL for Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// VPL for Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Blockly file management\r\n *\r\n * @copyright 2013 Juan Carlos Rodríguez-del-Pino\r\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\r\n */\r\n\r\n/* globals Interpreter */\r\n/* globals Blockly */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'qtype_savpl/vplutil'\r\n    ],\r\n    function($, VPLUtil) {\r\n        return function() {\r\n            var self = this;\r\n            var vplIdeInstance = this.getVPLIDE();\r\n            this.firstContent = true;\r\n            this.workspaceInstance = false;\r\n            var adaptBlockly = function() {\r\n                if (typeof Blockly.PHP.workspaceToCodeOld == 'undefined') {\r\n                    Blockly.PHP.workspaceToCodeOld = Blockly.PHP.workspaceToCode;\r\n                    Blockly.PHP.workspaceToCode = function(workspace) {\r\n                        return \"<?php\\n\" + Blockly.PHP.workspaceToCodeOld(workspace);\r\n                    };\r\n                }\r\n                if (typeof Blockly.Python.workspaceToCodeOld == 'undefined') {\r\n                    Blockly.Python.workspaceToCodeOld = Blockly.Python.workspaceToCode;\r\n                    Blockly.Python.workspaceToCode = function(workspace) {\r\n                        return \"# -*- coding: utf-8 -*-\\n\" + Blockly.Python.workspaceToCodeOld(workspace);\r\n                    };\r\n                }\r\n            };\r\n            var oldAdjustSize = this.adjustSize;\r\n            this.adjustSize = function() {\r\n                if (oldAdjustSize.call(this)) {\r\n                    var editTag = $(this.getTId());\r\n                    if (editTag.length === 0) {\r\n                        return false;\r\n                    }\r\n                    var tabs = editTag.parent();\r\n                    var newHeight = tabs.height();\r\n                    newHeight -= editTag.position().top;\r\n                    editTag.height(newHeight);\r\n                    $('#' + this.bdiv).height(newHeight);\r\n                    $('#' + this.bdiv).width(editTag.width());\r\n                    Blockly.svgResize(this.workspaceInstance);\r\n                    return false;\r\n                }\r\n                return false;\r\n            };\r\n            this.undo = function() {\r\n                if (this.isOpen()) {\r\n                    this.workspaceInstance.undo(false);\r\n                }\r\n            };\r\n            this.redo = function() {\r\n                if (this.isOpen()) {\r\n                    this.workspaceInstance.undo(true);\r\n                }\r\n            };\r\n            this.interpreter = false;\r\n            this.animateRun = false;\r\n            this.RUNSTATE = 1;\r\n            this.STEPSTATE = 2;\r\n            this.STOPSTATE = 3;\r\n            this.executionState = this.STOPSTATE;\r\n            this.goNext = false;\r\n            this.initRun = function(animate) {\r\n                var ter = vplIdeInstance.getTerminal();\r\n                if (ter.isConnected()) {\r\n                    ter.closeLocal();\r\n                }\r\n                this.animateRun = animate;\r\n                Blockly.JavaScript.STATEMENT_PREFIX = 'highlightBlock(%1);\\n';\r\n                Blockly.JavaScript.addReservedWords('highlightBlock');\r\n                var code = Blockly.JavaScript.workspaceToCode(self.workspaceInstance);\r\n                var initApi = function(interpreter, scope) {\r\n                    // Add an API function for the alert() block.\r\n                    var wrapperAlert = function(text) {\r\n                        text = typeof text != 'string' ? text.toString() + '\\r\\n' : text + '\\r\\n';\r\n                        return interpreter.createPrimitive(ter.writeLocal(text));\r\n                    };\r\n                    interpreter.setProperty(scope, 'alert',\r\n                            interpreter.createNativeFunction(wrapperAlert));\r\n\r\n                    // Add an API function for the prompt() block.\r\n                    var wrapperPrompt = function(text, callback) {\r\n                        text = typeof text != 'string' ? text.toString() : '' + text;\r\n                        ter.writeLocal(text);\r\n                        ter.setDataCallback(function(t) {\r\n                                               ter.writeLocal('\\n');\r\n                                               callback(t);\r\n                                            });\r\n                    };\r\n                    interpreter.setProperty(scope, 'prompt',\r\n                        interpreter.createAsyncFunction(wrapperPrompt));\r\n\r\n                    var wrapperHighlightBlock = function(id) {\r\n                        if (id == self.getBreakpoint()) {\r\n                            self.executionState = self.STEPSTATE;\r\n                            self.updateRunButtons();\r\n                            vplIdeInstance.getTerminal().setMessage(VPLUtil.str('breakpoint'));\r\n                        }\r\n                        if (self.animateRun || self.executionState == self.STEPSTATE) {\r\n                            self.workspaceInstance.highlightBlock(id);\r\n                        }\r\n                        self.goNext = false;\r\n                    };\r\n                    interpreter.setProperty(scope, 'highlightBlock',\r\n                            interpreter.createNativeFunction(wrapperHighlightBlock));\r\n                };\r\n                self.interpreter = new Interpreter(code, initApi);\r\n                ter.connectLocal(self.stop, VPLUtil.doNothing);\r\n            };\r\n            this.reservedWords = {\r\n                'Infinity': true, 'Array': true, 'Boolean': true,\r\n                'Date': true, 'Error': true, 'EvalError': true,\r\n                'Function': true, 'JSON': true, 'Math': true,\r\n                'NaN': true, 'Number': true, 'Object': true, 'RangeError': true,\r\n                'ReferenceError': true, 'RegExp': true, 'String': true,\r\n                'SyntaxError': true, 'TypeError': true, 'URIError': true,\r\n                'alert': true, 'arguments': true, 'constructor': true, 'eval': true,\r\n                'highlightBlock': true, 'isFinite': true,\r\n                'isNaN': true, 'parseFloat': true, 'parseInt': true, 'prompt': true,\r\n                'self': true, 'this': true, 'window': true,\r\n            };\r\n            (function() {\r\n                var breakpoint = null;\r\n                var lastSelection = null;\r\n                self.getBreakpoint = function() {\r\n                    return breakpoint;\r\n                };\r\n                self.setBreakpoint = function() {\r\n                    breakpoint = lastSelection;\r\n                };\r\n                self.removeBreakpoint = function() {\r\n                    breakpoint = null;\r\n                };\r\n                self.setLastSelection = function(selection) {\r\n                    lastSelection = selection;\r\n                };\r\n                self.isSelectingBreakpoint = function() {\r\n                    return breakpoint === null && lastSelection !== null;\r\n                };\r\n            })();\r\n            this.getVarValue = function(val) {\r\n                var HTML = '';\r\n                if (val === null) {\r\n                    HTML = \"<b>null</b>\";\r\n                } else if (val != undefined) {\r\n                    var type = typeof val;\r\n                    if (type == 'string') {\r\n                        HTML = '\"' + VPLUtil.sanitizeText(val) + '\"';\r\n                    } else if (type == 'boolean') {\r\n                        HTML = \"<b>\" + val + \"</b>\";\r\n                    } else if (type == 'object' && val.class === \"Array\") {\r\n                        HTML = '[';\r\n                        var ar = val.properties;\r\n                        for (var i = 0; i < ar.length; i++) {\r\n                            HTML += self.getVarValue(ar[i]);\r\n                            if (i != ar.length - 1) {\r\n                                HTML += ', ';\r\n                            }\r\n                        }\r\n                        HTML += ']';\r\n                    } else if (type == 'object') {\r\n                        HTML = \"<b>\" + val.toString() + \"</b>\";\r\n                    } else {\r\n                        HTML += '' + val;\r\n                    }\r\n                }\r\n                return HTML;\r\n            };\r\n            this.getVariables = function(properties) {\r\n                var HTML = '';\r\n                for (var proname in properties) {\r\n                    if (this.reservedWords[proname] === true) {\r\n                        continue;\r\n                    }\r\n                    var pro = properties[proname];\r\n                    if (pro != undefined && !(pro.class === \"Function\")) {\r\n                        var value = VPLUtil.sanitizeText(self.getVarValue(pro));\r\n                        HTML += '<b>' + proname + \"</b>:&nbsp;\" + value + \"<br>\\n\";\r\n                    }\r\n                }\r\n                return HTML;\r\n            };\r\n            this.getParameters = function(args) {\r\n                var HTML = '(';\r\n                for (var i = 0; i < args.length; i++) {\r\n                    HTML += '' + args[i];\r\n                    if (i < args.length - 1) {\r\n                        HTML += ', ';\r\n                    }\r\n                }\r\n                return HTML + ')';\r\n            };\r\n            this.showStack = function(interpreter) {\r\n                var sn = 0;\r\n                var HTML = '<table class=\"generaltable\">';\r\n                var stack = interpreter.stateStack;\r\n                var lastFunc = '<tr><td>0</td><td><b>Globals</b></td>';\r\n                for (var i = 0; i < stack.length; i++) {\r\n                    var level = stack[i];\r\n                    if (lastFunc > '' && (level.node.type == 'CallExpression' || i == stack.length - 1)) {\r\n                        HTML += lastFunc + '<td>' + self.getVariables(level.scope.properties);\r\n                        HTML += '</td></tr>';\r\n                    }\r\n                    if (level.node.type == 'CallExpression') {\r\n                        if (self.reservedWords[level.node.callee.name] !== true\r\n                        && level.node.callee.name != undefined) {\r\n                            sn++;\r\n                            lastFunc = '<tr><td>' + sn + '</td>';\r\n                            lastFunc += '<td>' + level.node.callee.name + self.getParameters(level.arguments_) + '</td>';\r\n                        } else {\r\n                            lastFunc = '';\r\n                        }\r\n                    }\r\n                }\r\n                HTML += '</table>';\r\n                vplIdeInstance.setResult({variables: HTML});\r\n            };\r\n            this.runLoop = function() {\r\n                if (!self.interpreter) {\r\n                    return;\r\n                }\r\n                self.goNext = true;\r\n                for (var i = 0; i < 30000 && self.goNext; i++) {\r\n                    if (self.executionState == self.STOPSTATE) {\r\n                        break;\r\n                    }\r\n                    if (!self.interpreter || !self.interpreter.step()) {\r\n                        self.executionState = self.STOPSTATE;\r\n                        self.updateRunButtons();\r\n                        break;\r\n                    }\r\n                }\r\n                if (self.executionState == self.STOPSTATE) {\r\n                    self.workspaceInstance.highlightBlock(-1);\r\n                    vplIdeInstance.getTerminal().closeLocal();\r\n                    vplIdeInstance.setResult({variables: ''});\r\n                    return;\r\n                }\r\n                if (self.executionState == self.RUNSTATE) {\r\n                    if (self.animateRun) {\r\n                        setTimeout(self.runLoop, 1000);\r\n                        self.showStack(self.interpreter);\r\n                    } else {\r\n                        setTimeout(self.runLoop, 0);\r\n                    }\r\n                } else {\r\n                    self.showStack(self.interpreter);\r\n                }\r\n            };\r\n            this.start = function() {\r\n                if (self.executionState != self.STOPSTATE) {\r\n                    return;\r\n                }\r\n                self.initRun(false);\r\n                self.executionState = self.RUNSTATE;\r\n                self.updateRunButtons();\r\n                vplIdeInstance.getTerminal().setMessage(VPLUtil.str('start'));\r\n                self.runLoop();\r\n            };\r\n            this.startAnimate = function() {\r\n                if (self.executionState != self.STOPSTATE) {\r\n                    return;\r\n                }\r\n                self.initRun(true);\r\n                self.executionState = self.RUNSTATE;\r\n                self.updateRunButtons();\r\n                vplIdeInstance.getTerminal().setMessage(VPLUtil.str('startanimate'));\r\n                self.runLoop();\r\n            };\r\n            this.stop = function() {\r\n                self.executionState = self.STOPSTATE;\r\n                self.workspaceInstance.highlightBlock(-1);\r\n                self.updateRunButtons();\r\n                vplIdeInstance.getTerminal().setMessage(VPLUtil.str('stop'));\r\n                vplIdeInstance.getTerminal().closeLocal();\r\n                self.interpreter = false;\r\n                vplIdeInstance.setResult({variables: ''});\r\n            };\r\n            this.pause = function() {\r\n                if (self.executionState != self.RUNSTATE) {\r\n                    return;\r\n                }\r\n                self.executionState = self.STEPSTATE;\r\n                vplIdeInstance.getTerminal().setMessage(VPLUtil.str('pause'));\r\n                self.updateRunButtons();\r\n            };\r\n            this.resume = function() {\r\n                if (self.executionState != self.STEPSTATE) {\r\n                    return;\r\n                }\r\n                self.executionState = self.RUNSTATE;\r\n                vplIdeInstance.getTerminal().setMessage(VPLUtil.str('resume'));\r\n                self.updateRunButtons();\r\n                self.runLoop();\r\n            };\r\n            this.step = function() {\r\n                if (self.executionState == self.STOPSTATE) {\r\n                    self.initRun(true);\r\n                }\r\n                self.executionState = self.STEPSTATE;\r\n                self.updateRunButtons();\r\n                vplIdeInstance.getTerminal().setMessage(VPLUtil.str('step'));\r\n                self.runLoop();\r\n            };\r\n            this.hasUndo = function() {\r\n                return true;\r\n            };\r\n            this.hasRedo = function() {\r\n                return true;\r\n            };\r\n            this.oldSetFileName = this.setFileName;\r\n            this.generatorMap = {\r\n                py: 'Python',\r\n                dart: 'Dart',\r\n                js: 'JavaScript',\r\n                lua: 'Lua',\r\n                php: 'PHP'\r\n            };\r\n            this.generator = '';\r\n            this.setFileName = function(newName) {\r\n                var oldFileName = this.getFileName();\r\n                var oldExt = VPLUtil.fileExtension(oldFileName);\r\n                if (!self.oldSetFileName(newName)) {\r\n                    VPLUtil.log(\"Blockly setFileName: name no acepted \" + newName);\r\n                    return false;\r\n                }\r\n                VPLUtil.log('Blockly set filename ' + newName);\r\n                var regExt2 = /\\.([^.]+)\\.blockly[123]?$/;\r\n                var regFn2 = /(.+)\\.blockly[123]?$/;\r\n                var ext2 = regExt2.exec(newName);\r\n                var fn2 = regFn2.exec(newName);\r\n                if (ext2 !== null && fn2 !== null && typeof this.generatorMap[ext2[1]] == 'string') {\r\n                    this.generator = this.generatorMap[ext2[1]];\r\n                    this.generatedFilename = fn2[1];\r\n                    VPLUtil.log('Blockly generator ' + this.generator + ' for filename ' + this.generatedFilename);\r\n                    this.updateGeneratedCode();\r\n                } else {\r\n                    this.generator = '';\r\n                }\r\n                if (oldExt != VPLUtil.fileExtension(newName)) {\r\n                    VPLUtil.log('Blockly extension changed');\r\n                    VPLUtil.afterAll('reopenBlockly', function() {\r\n                            VPLUtil.log('reopenBlockly');\r\n                            self.close();\r\n                            self.open();\r\n                        }\r\n                    );\r\n                }\r\n                return true;\r\n            };\r\n            this.updateGeneratedCode = function() {\r\n                if (self.blocklyNotLoaded) {\r\n                    return;\r\n                }\r\n                var fileManager = self.getFileManager();\r\n                if (self.generator != '') {\r\n                    VPLUtil.log('Blockly generate ' + self.generator);\r\n                    var fid = fileManager.fileNameExists(self.generatedFilename);\r\n                    // Try to create generated code file.\r\n                    if (fid == -1) {\r\n                        VPLUtil.log(\"try to create \" + self.generatedFilename + \" files\");\r\n                        fileManager.addFile({\r\n                            name: self.generatedFilename,\r\n                            contents: ''},\r\n                            false, VPLUtil.doNothing, VPLUtil.doNothing);\r\n                        fid = fileManager.fileNameExists(self.generatedFilename);\r\n                    }\r\n                    if (fid != -1) {\r\n                        var code = Blockly[self.generator].workspaceToCode(self.workspaceInstance);\r\n                        var fileGenerated = fileManager.getFile(fid);\r\n                        if (fileGenerated.getContent() != code) {\r\n                            fileGenerated.setContent(code);\r\n                            fileGenerated.change();\r\n                            fileGenerated.gotoLine(1);\r\n                            fileGenerated.setReadOnly(true);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            this.changeCode = function(event) {\r\n                VPLUtil.log(event);\r\n                if (event.type == 'ui' && event.element == 'selected') {\r\n                    self.setLastSelection(event.newValue);\r\n                    return;\r\n                }\r\n                if (event.type == 'ui'\r\n                        && event.element == 'category'\r\n                        && event.newValue == VPLUtil.str('run')) {\r\n                        VPLUtil.longDelay('updateRunButtons', self.updateRunButtons);\r\n                    return;\r\n                }\r\n                if (self.firstContent) {\r\n                    if (event.type == 'finished_loading') {\r\n                        self.firstContent = false;\r\n                        self.workspaceInstance.clearUndo();\r\n                    } else {\r\n                        return;\r\n                    }\r\n                }\r\n                if (!event.recordUndo) {\r\n                    return;\r\n                }\r\n\r\n                VPLUtil.log('Call change due changeCode');\r\n                self.change();\r\n                if (self.generator != '') {\r\n                    VPLUtil.afterAll('generate' + self.getFileName(), self.updateGeneratedCode);\r\n                }\r\n            };\r\n            var triesUpdateRunButtons = 0;\r\n            var triesUpdateRunButtonsLimits = 20;\r\n            this.updateRunButtons = function() {\r\n                if ($('.blocklySelectBreakpointC').length == 0) {\r\n                    triesUpdateRunButtons++;\r\n                    if (triesUpdateRunButtons > triesUpdateRunButtonsLimits) {\r\n                        triesUpdateRunButtons = 0;\r\n                        VPLUtil.log('Giving up to tries of updateRunButtons');\r\n                        return;\r\n                    }\r\n                    VPLUtil.longDelay('updateRunButtons', self.updateRunButtons);\r\n                    return;\r\n                }\r\n                VPLUtil.log('updateRunButtons');\r\n                triesUpdateRunButtons = 0;\r\n                var dimmed = 'vpl_dimmed';\r\n                if (self.isSelectingBreakpoint()) {\r\n                    $('.blocklySelectBreakpointC').removeClass(dimmed);\r\n                } else {\r\n                    $('.blocklySelectBreakpointC').addClass(dimmed);\r\n                }\r\n                if (self.getBreakpoint() === null) {\r\n                    $('.blocklyRemoveBreakpointC').addClass(dimmed);\r\n                } else {\r\n                    $('.blocklyRemoveBreakpointC').removeClass(dimmed);\r\n                }\r\n                switch (self.executionState) {\r\n                    case self.RUNSTATE: {\r\n                        $('.blocklyStartC').addClass(dimmed);\r\n                        $('.blocklyStartAnimateC').addClass(dimmed);\r\n                        $('.blocklyStopC').removeClass(dimmed);\r\n                        $('.blocklyPauseC').removeClass(dimmed);\r\n                        $('.blocklyResumeC').addClass(dimmed);\r\n                        $('.blocklyStepC').addClass(dimmed);\r\n                        break;\r\n                    }\r\n                    case self.STEPSTATE: {\r\n                        $('.blocklyStartC').addClass(dimmed);\r\n                        $('.blocklyStartAnimateC').addClass(dimmed);\r\n                        $('.blocklyStopC').removeClass(dimmed);\r\n                        $('.blocklyPauseC').addClass(dimmed);\r\n                        $('.blocklyResumeC').removeClass(dimmed);\r\n                        $('.blocklyStepC').removeClass(dimmed);\r\n                        break;\r\n                    }\r\n                    case self.STOPSTATE: {\r\n                        $('.blocklyStartC').removeClass(dimmed);\r\n                        $('.blocklyStartAnimateC').removeClass(dimmed);\r\n                        $('.blocklyStopC').addClass(dimmed);\r\n                        $('.blocklyPauseC').addClass(dimmed);\r\n                        $('.blocklyResumeC').addClass(dimmed);\r\n                        $('.blocklyStepC').removeClass(dimmed);\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            this.setToolbox = function() {\r\n                var ext = VPLUtil.fileExtension(this.getFileName());\r\n                var toolboxname = ext + 'Toolbox';\r\n                if (self[toolboxname] === false) {\r\n                    $.ajax({\r\n                        url: '../editor/blocklytoolboxes/' + toolboxname + '.xml',\r\n                        dataType: 'text',\r\n                        success: function(data) {\r\n                            self[toolboxname] = self.blocklyIn18(data);\r\n                            self.setToolbox();\r\n                        },\r\n                    });\r\n                    return;\r\n                }\r\n                var addUpdateButtons = function(func) {\r\n                    return function() {\r\n                        func();\r\n                        self.updateRunButtons();\r\n                    };\r\n                };\r\n                var callBacks = {\r\n                    'blocklyStartButton': this.start,\r\n                    'blocklyStartAnimateButton': this.startAnimate,\r\n                    'blocklyStopButton': this.stop,\r\n                    'blocklyPauseButton': this.pause,\r\n                    'blocklyResumeButton': this.resume,\r\n                    'blocklyStepButton': this.step,\r\n                    'blocklySelectBreakpointButton': this.setBreakpoint,\r\n                    'blocklyRemoveBreakpointButton': this.removeBreakpoint,\r\n                };\r\n                var wp = this.workspaceInstance;\r\n                wp.updateToolbox(this[toolboxname]);\r\n                for (var key in callBacks) {\r\n                    wp.registerButtonCallback(key, addUpdateButtons(callBacks[key]));\r\n                }\r\n                this.adjustSize();\r\n            };\r\n            this.open = function() {\r\n                this.showFileName();\r\n                if (self.blocklyNotLoaded) {\r\n                    VPLUtil.loadScript(\r\n                        [\r\n                            '/blockly/blockly_compressed.js',\r\n                            '/blockly/msg/js/en.js',\r\n                            '/blockly/blocks_compressed.js',\r\n                            '/blockly/python_compressed.js',\r\n                            '/blockly/javascript_compressed.js',\r\n                            '/blockly/php_compressed.js',\r\n                            '/blockly/lua_compressed.js',\r\n                            '/blockly/dart_compressed.js',\r\n                            '/acorn/acorn.js',\r\n                            '/acorn/interpreter.js',\r\n                        ],\r\n                        function() {\r\n                            VPLUtil.log('Blocklyloaded', true);\r\n                            adaptBlockly();\r\n                            self.blocklyNotLoaded = false;\r\n                            self.open();\r\n                        }\r\n                    );\r\n                    return false;\r\n                }\r\n                var code = this.getContent();\r\n                this.setOpen(true);\r\n                var fileName = this.getFileName();\r\n                var horizontalMenu = false;\r\n                if (/.*[0-9]$/.test(VPLUtil.fileExtension(fileName))) {\r\n                    horizontalMenu = true;\r\n                }\r\n                var tid = this.getTId();\r\n                // Workaround to remove jquery-ui theme background color.\r\n                $(tid).removeClass('ui-widget-content ui-tabs-panel');\r\n                $(tid).addClass('ui-corner-bottom');\r\n                this.bdiv = 'bkdiv' + this.getId();\r\n                $(tid).html('<div id=\"' + this.bdiv + '\" style=\"height: 480px; width: 600px;\"></div>');\r\n                var options = {\r\n                    toolbox: '<xml><category name=\"\" colour=\"330\"><block type=\"math_number\"></block></category></xml>',\r\n                    media: '../editor/blockly/media/',\r\n                    horizontalLayout: horizontalMenu,\r\n                    zoom: {\r\n                        controls: true,\r\n                        wheel: true,\r\n                        startScale: 1.0,\r\n                        maxScale: 3,\r\n                        minScale: 0.2,\r\n                        scaleSpeed: 1.05\r\n                    }\r\n                };\r\n                this.workspaceInstance = Blockly.inject(this.bdiv, options);\r\n                this.setToolbox();\r\n                this.firstContent = code > '';\r\n                self.workspaceInstance.addChangeListener(self.changeCode);\r\n                this.setContent(code);\r\n                VPLUtil.adjustBlockly(self.workspaceInstance, 10, 10);\r\n                self.workspaceInstance.scrollX = 0;\r\n                self.workspaceInstance.scrollY = 0;\r\n                Blockly.svgResize(self.workspaceInstance);\r\n                Blockly.resizeSvgContents(self.workspaceInstance);\r\n                self.setFileName(self.getFileName());\r\n                self.adjustSize();\r\n                // Must return false. Do not change it.\r\n                return false;\r\n            };\r\n            var getContentOld = this.getContent;\r\n            this.getContent = function() {\r\n                if (!this.isOpen()) {\r\n                    return getContentOld.call(this);\r\n                }\r\n                var xml = Blockly.Xml.workspaceToDom(this.workspaceInstance);\r\n                var xmlText = Blockly.Xml.domToPrettyText(xml);\r\n                return xmlText;\r\n            };\r\n            var setContentOld = this.setContent;\r\n            this.setContent = function(c) {\r\n                setContentOld.call(this, c);\r\n                if (c.length > 0 && this.isOpen()) {\r\n                    this.workspaceInstance.clear();\r\n                    var xml = Blockly.Xml.textToDom(c);\r\n                    Blockly.Xml.domToWorkspace(xml, this.workspaceInstance);\r\n                }\r\n            };\r\n            this.close = function() {\r\n                if (this.isOpen()) {\r\n                    setContentOld.call(this, this.getContent());\r\n                    this.workspaceInstance.dispose();\r\n                    this.workspaceInstance = false;\r\n                    this.setOpen(false);\r\n                }\r\n            };\r\n            this.blocklyNotLoaded = true;\r\n            this.blocklyToolbox = false;\r\n            this.blockly0Toolbox = false;\r\n            this.blockly1Toolbox = false;\r\n            this.blockly2Toolbox = false;\r\n            this.blockly3Toolbox = false;\r\n            this.blocklyStrs = [\r\n                'basic',\r\n                'intermediate',\r\n                'advanced',\r\n                'variables',\r\n                'operatorsvalues',\r\n                'control',\r\n                'inputoutput',\r\n                'functions',\r\n                'lists',\r\n                'math',\r\n                'text',\r\n                'run',\r\n                'start',\r\n                'startanimate',\r\n                'stop',\r\n                'pause',\r\n                'resume',\r\n                'step',\r\n                'breakpoint',\r\n                'selectbreakpoint',\r\n                'removebreakpoint'\r\n            ];\r\n            this.blocklyIn18 = function(data) {\r\n                var l = this.blocklyStrs.length;\r\n                for (var i = 0; i < l; i++) {\r\n                    var str = this.blocklyStrs[i];\r\n                    var reg = new RegExp('\\\\[\\\\[' + str + '\\\\]\\\\]', 'g');\r\n                    var rep = VPLUtil.str(str);\r\n                    data = data.replace(reg, rep);\r\n                }\r\n                return data;\r\n            };\r\n            this.langSelection = function() {\r\n                this.setLang('Blockly');\r\n            };\r\n        };\r\n    }\r\n);\r\n"],"names":["define","$","VPLUtil","self","this","vplIdeInstance","getVPLIDE","firstContent","workspaceInstance","breakpoint","lastSelection","oldAdjustSize","adjustSize","call","editTag","getTId","length","newHeight","parent","height","position","top","bdiv","width","Blockly","svgResize","undo","isOpen","redo","interpreter","animateRun","RUNSTATE","STEPSTATE","STOPSTATE","executionState","goNext","initRun","animate","ter","getTerminal","isConnected","closeLocal","JavaScript","STATEMENT_PREFIX","addReservedWords","code","workspaceToCode","Interpreter","scope","setProperty","createNativeFunction","text","toString","createPrimitive","writeLocal","createAsyncFunction","callback","setDataCallback","t","id","getBreakpoint","updateRunButtons","setMessage","str","highlightBlock","connectLocal","stop","doNothing","reservedWords","Infinity","Array","Boolean","Date","Error","EvalError","Function","JSON","Math","NaN","Number","Object","RangeError","ReferenceError","RegExp","String","SyntaxError","TypeError","URIError","alert","arguments","constructor","eval","isFinite","isNaN","parseFloat","parseInt","prompt","window","setBreakpoint","removeBreakpoint","setLastSelection","selection","isSelectingBreakpoint","getVarValue","val","HTML","undefined","type","sanitizeText","class","ar","properties","i","getVariables","proname","pro","getParameters","args","showStack","sn","stack","stateStack","lastFunc","level","node","callee","name","arguments_","setResult","variables","runLoop","step","setTimeout","start","startAnimate","pause","resume","hasUndo","hasRedo","oldSetFileName","setFileName","generatorMap","py","dart","js","lua","php","generator","newName","oldFileName","getFileName","oldExt","fileExtension","log","ext2","exec","fn2","generatedFilename","updateGeneratedCode","afterAll","close","open","blocklyNotLoaded","fileManager","getFileManager","fid","fileNameExists","addFile","contents","fileGenerated","getFile","getContent","setContent","change","gotoLine","setReadOnly","changeCode","event","element","newValue","clearUndo","recordUndo","longDelay","triesUpdateRunButtons","dimmed","removeClass","addClass","setToolbox","toolboxname","addUpdateButtons","func","callBacks","blocklyStartButton","blocklyStartAnimateButton","blocklyStopButton","blocklyPauseButton","blocklyResumeButton","blocklyStepButton","blocklySelectBreakpointButton","blocklyRemoveBreakpointButton","wp","key","updateToolbox","registerButtonCallback","ajax","url","dataType","success","data","blocklyIn18","showFileName","loadScript","PHP","workspaceToCodeOld","workspace","Python","setOpen","fileName","horizontalMenu","test","tid","getId","html","options","toolbox","media","horizontalLayout","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","inject","addChangeListener","adjustBlockly","scrollX","scrollY","resizeSvgContents","getContentOld","xml","Xml","workspaceToDom","domToPrettyText","setContentOld","c","clear","textToDom","domToWorkspace","dispose","blocklyToolbox","blockly0Toolbox","blockly1Toolbox","blockly2Toolbox","blockly3Toolbox","blocklyStrs","l","reg","rep","replace","langSelection","setLang"],"mappings":"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"}