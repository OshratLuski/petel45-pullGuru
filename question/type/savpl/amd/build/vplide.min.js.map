{"version":3,"file":"vplide.min.js","sources":["../src/vplide.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\r\n//\r\n// VPL for Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// VPL for Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * IDE Control\r\n *\r\n * @copyright 2017 Juan Carlos Rodríguez-del-Pino\r\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\r\n */\r\n\r\n/* globals MathJax */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'jqueryui',\r\n        'qtype_savpl/vplutil',\r\n        'qtype_savpl/vplui',\r\n        'qtype_savpl/vplidefile',\r\n        'qtype_savpl/vplidebutton',\r\n        'qtype_savpl/vplterminal',\r\n        'qtype_savpl/vplvnc',\r\n    ],\r\n    function($, jqui, VPLUtil, VPLUI, VPLFile, VPLIDEButtons, VPLTerminal, VPLVNCClient) {\r\n        if (typeof VPLIDE !== 'undefined') {\r\n            return VPLIDE;\r\n        }\r\n        var vplIdeInstance;\r\n        var VPLIDE = function(rootId, options) {\r\n            var self = this;\r\n            var fileManager;\r\n            var adjustTabsTitles;\r\n            var autoResizeTab;\r\n            var showErrorMessage;\r\n            var updateMenu;\r\n            var executionActions;\r\n            var minNumberOfFiles = options.minfiles || 0;\r\n            var maxNumberOfFiles = options.maxfiles || 0;\r\n            var restrictedEdit = options.restrictededitor || options.example;\r\n            var readOnly = options.example;\r\n            var readOnlyFiles = options.readOnlyFiles;\r\n            var isTeacher = options.isTeacher;\r\n            var fullScreen = false;\r\n            var scrollBarWidth = VPLUI.scrollBarWidth();\r\n            var str = VPLUtil.str;\r\n            var rootObj = $('#' + rootId);\r\n            $(\"head\").append('<meta name=\"viewport\" content=\"initial-scale=1\">')\r\n                          .append('<meta name=\"viewport\" width=\"device-width\">')\r\n                          .append('<link rel=\"stylesheet\" href=\"' + M.cfg.wwwroot + '/question/type/savpl/editor/VPLIDE.css\"/>');\r\n            if (typeof rootObj != 'object') {\r\n                throw new Error(\"VPL: constructor tag_id not found\");\r\n            }\r\n            var optionsToCheck = {\r\n                'new': true,\r\n                'rename': true,\r\n                'delete': true,\r\n                'save': true,\r\n                'run': true,\r\n                'edit': true,\r\n                'debug': true,\r\n                'evaluate': true,\r\n                'import': true,\r\n                'resetfiles': true,\r\n                'sort': true,\r\n                'multidelete': true,\r\n                'acetheme': true,\r\n                'console': true,\r\n                'comments': true,\r\n                'saveandeval': true,\r\n            };\r\n            if ((typeof options.loadajaxurl) == 'undefined') {\r\n                options.loadajaxurl = options.ajaxurl;\r\n            }\r\n            (function() {\r\n                var activateModification = (minNumberOfFiles < maxNumberOfFiles);\r\n                options.new = activateModification;\r\n                options.rename = activateModification;\r\n                options.delete = activateModification;\r\n                options.comments = options.comments && !options.example;\r\n                options.console = options.console && !options.example;\r\n                options.acetheme = true;\r\n            })();\r\n            options.sort = (maxNumberOfFiles - minNumberOfFiles >= 2);\r\n            options.multidelete = options.sort;\r\n            options.import = !restrictedEdit;\r\n            options.saveandeval = true;\r\n            var isOptionAllowed = function(op) {\r\n                if (!optionsToCheck[op]) {\r\n                    return true;\r\n                }\r\n                return options[op];\r\n            };\r\n            // PTL-5738 hide/show console from settings\r\n            // options.console = isOptionAllowed('run') || isOptionAllowed('debug');\r\n            if ((typeof options.fontSize) == 'undefined') {\r\n                options.fontSize = 12;\r\n            }\r\n            options.fontSize = parseInt(options.fontSize);\r\n            /**\r\n             * Handler for dragover event.\r\n             * @param {object} e event.\r\n             */\r\n            function dragoverHandler(e) {\r\n                if (restrictedEdit) {\r\n                    e.originalEvent.dataTransfer.dropEffect = 'none';\r\n                } else {\r\n                    e.originalEvent.dataTransfer.dropEffect = 'copy';\r\n                }\r\n                e.preventDefault();\r\n            }\r\n            /**\r\n             * Handler for drop event.\r\n             * @param {object} e event.\r\n             * @returns {boolean}\r\n             */\r\n            function dropHandler(e) {\r\n                if (restrictedEdit) { // No drop allowed.\r\n                    e.stopImmediatePropagation();\r\n                    return false;\r\n                }\r\n                var dt = e.originalEvent.dataTransfer;\r\n                // Drop files.\r\n                if (dt.files.length > 0) {\r\n                    VPLUI.readSelectedFiles(dt.files, function(file) {\r\n                        return fileManager.addFile(file, true, updateMenu, showErrorMessage);\r\n                    },\r\n                    function() {\r\n                        fileManager.fileListVisibleIfNeeded();\r\n                    });\r\n                    e.stopImmediatePropagation();\r\n                    return false;\r\n                }\r\n                return false;\r\n            }\r\n            rootObj.on('drop', dropHandler);\r\n            rootObj.on('dragover', dragoverHandler);\r\n            /**\r\n             * Handler for paste limited by restrictedEdit var.\r\n             * @param {object} e event.\r\n             * @returns {boolean}\r\n             */\r\n            function restrictedPaste(e) {\r\n                if (restrictedEdit) {\r\n                    e.stopPropagation();\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n            // Init editor vars.\r\n            var menu = $('#vpl_menu');\r\n            var menuButtons = new VPLIDEButtons(menu, isOptionAllowed);\r\n            var tr = $('#vpl_tr');\r\n            var fileListContainer = $('#vpl_filelist');\r\n            var fileList = $('#vpl_filelist_header');\r\n            var fileListContent = $('#vpl_filelist_content');\r\n            var tabsUl = $('#vpl_tabs_ul');\r\n            var tabs = $('#vpl_tabs');\r\n            var resultContainer = $('#vpl_results');\r\n            var result = $('#vpl_results_accordion');\r\n            var renameDiretoryAction = VPLUtil.doNothing;\r\n            fileListContainer.vplMinWidth = 80;\r\n            resultContainer.vplMinWidth = 100;\r\n            /**\r\n             * Avoids selecting grade.\r\n             * @param {object} event Unuse.\r\n             * @param {object} ui UI origen.\r\n             * @returns {boolean}\r\n             */\r\n            function avoidSelectGrade(event, ui) {\r\n                if (\"newHeader\" in ui) {\r\n                    if (ui.newHeader.hasClass('vpl_ide_accordion_t_grade')) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            /**\r\n             * Constructor of FileManager objects\r\n             */\r\n            function FileManager() {\r\n                var tabsUl = $('#vpl_tabs_ul');\r\n                $('#vpl_tabs').tabs();\r\n                var tabs = $('#vpl_tabs').tabs(\"widget\");\r\n                var files = [];\r\n                var openFiles = [];\r\n                var modified = true;\r\n                var self = this;\r\n                (function() {\r\n                    var version;\r\n                    self.setVersion = function(v) {\r\n                       version = v;\r\n                    };\r\n                    self.getVersion = function() {\r\n                       return version;\r\n                    };\r\n                })();\r\n                this.updateFileList = function() {\r\n                    self.generateFileList();\r\n                };\r\n                this.fileNameExists = function(name) {\r\n                    var checkName = name.toLowerCase();\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        if (files[i].getFileName().toLowerCase() == checkName) {\r\n                            return i;\r\n                        }\r\n                    }\r\n                    return -1;\r\n                };\r\n                /**\r\n                 * Checks if name is included in current files names\r\n                 * @param {string} name Name of file\r\n                 * @returns {boolean} if found or not found\r\n                 */\r\n                function fileNameIncluded(name) {\r\n                    var checkName = name.toLowerCase() + '/';\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        var nameMod = files[i].getFileName().toLowerCase() + '/';\r\n                        // Check for name as directory existent.\r\n                        if (nameMod.indexOf(checkName) === 0 || checkName.indexOf(nameMod) === 0) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n                /**\r\n                 * Checks if changing file name results in two blovkly files\r\n                 * @param {string} oldname The old file name\r\n                 * @param {string} newname The new file name\r\n                 * @returns {boolean} if results two two blovkly files\r\n                 */\r\n                function twoBlockly(oldname, newname) {\r\n                    if (VPLUtil.isBlockly(oldname)) {\r\n                        return false;\r\n                    }\r\n                    if (VPLUtil.isBlockly(newname)) {\r\n                        for (var i = 0; i < files.length; i++) {\r\n                            if (VPLUtil.isBlockly(files[i].getFileName())) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n                this.restrictedPaste = restrictedPaste;\r\n                this.dropHandler = dropHandler;\r\n                this.dragoverHandler = dragoverHandler;\r\n                this.readOnly = readOnly;\r\n                //TODO readonlyfiles\r\n                this.readOnlyFiles = [];\r\n                this.restrictedEdit = restrictedEdit;\r\n                this.adjustTabsTitles = adjustTabsTitles;\r\n                this.minNumberOfFiles = minNumberOfFiles;\r\n                this.scrollBarWidth = scrollBarWidth;\r\n                var localClipboard = \"\";\r\n                this.setClipboard = function(t) {\r\n                    localClipboard = t;\r\n                };\r\n                this.getClipboard = function() {\r\n                    return localClipboard;\r\n                };\r\n                this.getTabPos = function(fileId) {\r\n                    for (var i = 0; i < openFiles.length; i++) {\r\n                        if (openFiles[i].getId() == fileId) {\r\n                            return i;\r\n                        }\r\n                    }\r\n                    return openFiles.length;\r\n                };\r\n                this.getTheme = function() {\r\n                    return options.theme;\r\n                };\r\n                this.setTheme = function(theme) {\r\n                    options.theme = theme;\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        files[i].setTheme(theme);\r\n                    }\r\n                };\r\n                this.addTab = function(fid) {\r\n                    var hlink = '<a href=\"#vpl_file' + fid + '\"></a>';\r\n                    tabsUl.append('<li id=\"vpl_tab_name' + fid + '\">' + hlink + '</li>');\r\n                    tabs.append('<div id=\"vpl_file' + fid + '\" class=\"vpl_ide_file\"></div>');\r\n                };\r\n                this.removeTab = function(fid) {\r\n                    tabsUl.find('#vpl_tab_name' + fid).remove();\r\n                    tabs.find('#vpl_file' + fid).remove();\r\n                };\r\n                this.isReadOnly = function(fileName) {\r\n                    return this.readOnly || this.readOnlyFiles.indexOf(fileName) != -1;\r\n                };\r\n                this.open = function(pos) {\r\n                    var file;\r\n                    if (typeof pos == 'object') {\r\n                        file = pos;\r\n                    } else {\r\n                        file = files[pos];\r\n                    }\r\n                    if (file.isOpen()) {\r\n                        return;\r\n                    }\r\n                    var fid = file.getId();\r\n                    self.addTab(fid);\r\n                    openFiles.push(file);\r\n                    menuButtons.setGetkeys(file.open());\r\n                    tabs.tabs('refresh');\r\n                    adjustTabsTitles(false);\r\n                    VPLUtil.delay('updateFileList', self.updateFileList);\r\n                    VPLUtil.delay('updateMenu', updateMenu);\r\n                };\r\n                this.closeFile = function(file) {\r\n                    if (!file.isOpen()) {\r\n                        return;\r\n                    }\r\n                    var pos;\r\n                    var fid = file.getId();\r\n                    file.close();\r\n                    VPLUI.hideIDEStatus();\r\n                    self.removeTab(fid);\r\n                    var ptab = self.getTabPos(fid);\r\n                    openFiles.splice(ptab, 1);\r\n                    tabs.tabs('refresh');\r\n                    adjustTabsTitles(false);\r\n                    self.fileListVisible(true);\r\n                    VPLUtil.delay('updateFileList', self.updateFileList);\r\n                    VPLUtil.delay('adjustTabsTitles', adjustTabsTitles, false);\r\n                    if (openFiles.length == ptab) {\r\n                        ptab--;\r\n                    }\r\n                    if (ptab >= 0 && openFiles.length > ptab) {\r\n                        pos = self.getFilePosById(openFiles[ptab].getId());\r\n                        self.gotoFile(pos, 'c');\r\n                        return;\r\n                    }\r\n                };\r\n                this.isClosed = function(pos) {\r\n                    return !files[pos].isOpen();\r\n                };\r\n                this.fileListVisible = function(b) {\r\n                    if (b === fileListContainer.vplVisible) {\r\n                        return;\r\n                    }\r\n                    if (b) {\r\n                        VPLUtil.delay('fileListVisible', function() {\r\n                            fileListContainer.vplVisible = true;\r\n                            self.updateFileList();\r\n                            fileListContainer.show();\r\n                            autoResizeTab();\r\n                         });\r\n                    } else {\r\n                        VPLUtil.delay('fileListVisible', function() {\r\n                            fileListContainer.vplVisible = false;\r\n                            fileListContainer.hide();\r\n                            autoResizeTab();\r\n                         });\r\n                    }\r\n                };\r\n                this.isFileListVisible = function() {\r\n                    return fileListContainer.vplVisible;\r\n                };\r\n                this.fileListVisibleIfNeeded = function() {\r\n                    if (this.isFileListVisible()) {\r\n                        return;\r\n                    }\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        if (!files[i].isOpen()) {\r\n                            this.fileListVisible(true);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                this.setFontSize = function(size) {\r\n                    options.fontSize = size;\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        files[i].setFontSize(size);\r\n                    }\r\n                    terminal.setFontSize(size);\r\n                };\r\n                this.getFontSize = function() {\r\n                    return options.fontSize;\r\n                };\r\n                this.addFile = function(file, replace, ok, showError) {\r\n                    if ((typeof file.name != 'string') || !VPLUtil.validPath(file.name)) {\r\n                        showError(str('incorrect_file_name') + '\\n(' + file.name + ')');\r\n                        return false;\r\n                    }\r\n                    if (replace !== true) {\r\n                        replace = false;\r\n                    }\r\n                    var pos = this.fileNameExists(file.name);\r\n                    if (pos != -1) {\r\n                        if (replace && !files[pos].isReadOnly()) {\r\n                            files[pos].setContent(file.contents);\r\n                            self.setModified();\r\n                            ok();\r\n                            VPLUtil.delay('updateFileList', self.updateFileList);\r\n                            return file;\r\n                        } else {\r\n                            showError(str('filenotadded', file.name));\r\n                            return false;\r\n                        }\r\n                    }\r\n                    if (fileNameIncluded(file.name) || twoBlockly('', file.name)) {\r\n                        showError(str('filenotadded', file.name));\r\n                        return false;\r\n                    }\r\n                    if (files.length >= maxNumberOfFiles) {\r\n                        showError(str('maxfilesexceeded') + '\\n(' + maxNumberOfFiles + ')');\r\n                        return false;\r\n                    }\r\n                    var fid = VPLUtil.getUniqueId();\r\n                    var newfile = new VPLFile(fid, file.name, file.contents, this, vplIdeInstance);\r\n                    if (file.encoding == 1) {\r\n                        newfile.extendToBinary();\r\n                    } else {\r\n                        if (VPLUtil.isBlockly(file.name)) {\r\n                            newfile.extendToBlockly();\r\n                        } else {\r\n                            newfile.extendToCodeEditor();\r\n                        }\r\n                    }\r\n                    newfile.setFileName(file.name);\r\n                    files.push(newfile);\r\n                    self.setModified();\r\n                    if (files.length > 5) {\r\n                        self.fileListVisible(true);\r\n                    }\r\n                    ok();\r\n                    return newfile;\r\n                };\r\n                this.renameFile = function(oldname, newname, showError) {\r\n                    var pos = this.fileNameExists(oldname);\r\n                    try {\r\n                        if (pos == -1) {\r\n                            throw new Error(\"Internal error: File name not found\");\r\n                        }\r\n                        if (files[pos].getId() < this.minNumberOfFiles) {\r\n                            throw new Error(\"Internal error: Renaming requested filename\");\r\n                        }\r\n                        if (files[pos].getFileName() == newname) {\r\n                            return true; // Equals name file.\r\n                        }\r\n                        if (!VPLUtil.validPath(newname) ||\r\n                               fileNameIncluded(newname) ||\r\n                               twoBlockly(oldname, newname)) {\r\n                            throw str('incorrect_file_name');\r\n                        }\r\n                        if (VPLUtil.isBinary(oldname) && VPLUtil.fileExtension(oldname) != VPLUtil.fileExtension(newname)) {\r\n                            throw str('incorrect_file_name');\r\n                        }\r\n                        if (VPLUtil.isBlockly(oldname) != VPLUtil.isBlockly(newname)) {\r\n                            if (files[pos].getContent() > '') {\r\n                                showMessage(str('delete_file_fq', oldname), {\r\n                                    ok: function() {\r\n                                        var file = {\r\n                                            name: newname,\r\n                                            contents: '',\r\n                                            encoding: 0\r\n                                        };\r\n                                        fileManager.deleteFile(oldname, showError);\r\n                                        var fileResult = fileManager.addFile(file, false, updateMenu, showErrorMessage);\r\n                                        if (fileResult) {\r\n                                            fileManager.gotoFileName(newname);\r\n                                        }\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                var file = {\r\n                                    name: newname,\r\n                                    contents: '',\r\n                                    encoding: 0\r\n                                };\r\n                                fileManager.deleteFile(oldname, showError);\r\n                                var fileResult = fileManager.addFile(file, false, updateMenu, showError);\r\n                                if (fileResult) {\r\n                                    fileManager.gotoFileName(newname);\r\n                                }\r\n                            }\r\n                            return true;\r\n                        }\r\n                        files[pos].setFileName(newname);\r\n                    } catch (e) {\r\n                        showError(str('filenotrenamed', oldname) + '\\n' + e);\r\n                        return false;\r\n                    }\r\n                    self.setModified();\r\n                    adjustTabsTitles(false);\r\n                    VPLUtil.delay('updateFileList', self.updateFileList);\r\n                    return true;\r\n                };\r\n                this.directoryExists = function(dirName) {\r\n                    var checkName = dirName.toLowerCase() + '/';\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        if (files[i].getFileName().toLowerCase().startsWith(checkName)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                };\r\n                this.renameDirectory = function(oldName, newName, showError) {\r\n                    if (oldName == newName) {\r\n                        return false;\r\n                    }\r\n                    try {\r\n                        if (!this.directoryExists(oldName)) {\r\n                            throw new Error(\"Trying to rename a directory that doesn't exist: \" + oldName);\r\n                        }\r\n                        if (!VPLUtil.validPath(newName + '/file.txt')) {\r\n                            throw str('incorrect_directory_name');\r\n                        }\r\n                        // Prepare new names\r\n                        var oldNameLength = oldName.length + 1;\r\n                        var checkDirName = oldName.toLowerCase() + '/';\r\n                        var newFileNames = [];\r\n                        var i;\r\n                        for (i = 0; i < files.length; i++) {\r\n                            var fileName = files[i].getFileName();\r\n                            if (fileName.toLowerCase().startsWith(checkDirName)) {\r\n                                if (files[i].getId() < this.minNumberOfFiles) { // Renaming required filename\r\n                                    throw str('incorrect_file_name');\r\n                                }\r\n                                newFileNames[i] = newName + '/' + fileName.substr(oldNameLength);\r\n                            }\r\n                        }\r\n                        if (this.directoryExists(newName)) { // Checks if the merge is possible (no repeated names)\r\n                            var oldNames = [];\r\n                            for (i = 0; i < files.length; i++) {\r\n                                oldNames[files[i].getFileName().toLowerCase()] = true;\r\n                            }\r\n                            for (i = 0; i < files.length; i++) {\r\n                                if (newFileNames[i] && oldNames[newFileNames[i].toLowerCase()]) {\r\n                                    throw str('incorrect_file_name');\r\n                                }\r\n                            }\r\n                        }\r\n                        // Set the new file names\r\n                        for (i = 0; i < newFileNames.length; i++) {\r\n                            if (newFileNames[i]) {\r\n                                files[i].setFileName(newFileNames[i]);\r\n                            }\r\n                        }\r\n                    } catch (e) {\r\n                        showError(str('directory_not_renamed', oldName) + '\\n' + e);\r\n                        return false;\r\n                    }\r\n                    self.setModified();\r\n                    adjustTabsTitles(false);\r\n                    VPLUtil.delay('updateFileList', self.updateFileList);\r\n                    return true;\r\n                };\r\n                this.deleteFile = function(name, showError) {\r\n                    var pos = this.fileNameExists(name);\r\n                    if (pos == -1) {\r\n                        showError(str('filenotdeleted', name));\r\n                        return false;\r\n                    }\r\n                    if (files[pos].getId() < minNumberOfFiles) {\r\n                        showError(str('filenotdeleted', name));\r\n                        return false;\r\n                    }\r\n                    this.setModified();\r\n                    this.closeFile(files[pos]);\r\n                    files.splice(pos, 1);\r\n                    if (openFiles.length == 0) {\r\n                        VPLUI.hideIDEStatus();\r\n                    }\r\n                    VPLUtil.delay('updateFileList', self.updateFileList);\r\n                    return true;\r\n                };\r\n                this.currentFile = function() {\r\n                    var id = tabs.tabs('option', 'active');\r\n                    if (id in openFiles) {\r\n                        var file = openFiles[id];\r\n                        if (arguments.length === 0) {\r\n                            return file;\r\n                        }\r\n                        var action = arguments[0];\r\n                        if (typeof file[action] === 'function') {\r\n                            var fun = file[action];\r\n                            var args = Array.prototype.slice(arguments);\r\n                            args.shift();\r\n                            return fun.apply(file, args);\r\n                        }\r\n                    }\r\n                    return false;\r\n                };\r\n                this.getCurrentFileName = function() {\r\n                    var currentFileName = '';\r\n                    var currentFile = fileManager.currentFile();\r\n                    if (currentFile) {\r\n                        currentFileName = currentFile.name;\r\n                    }\r\n                    return currentFileName;\r\n                };\r\n                this.currentPos = function() {\r\n                    return tabs.tabs('option', 'active');\r\n                };\r\n                this.getFileTab = function(id) {\r\n                    for (var i = 0; i < openFiles.length; i++) {\r\n                        if (openFiles[i].getId() == id) {\r\n                            return i;\r\n                        }\r\n                    }\r\n                    return -1;\r\n                };\r\n                this.getFilePosById = function(id) {\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        if (files[i].getId() == id) {\r\n                            return i;\r\n                        }\r\n                    }\r\n                    return -1;\r\n                };\r\n                this.gotoFile = function(pos, l) {\r\n                    var file = files[pos];\r\n                    self.open(file);\r\n                    tabs.tabs('option', 'active', self.getFileTab(file.getId()));\r\n                    if (l !== 'c') {\r\n                        file.gotoLine(parseInt(l, 10));\r\n                    }\r\n                    file.focus();\r\n                };\r\n                this.gotoFileLink = function(a) {\r\n                    var tag = $(a);\r\n                    var fname = tag.data('file');\r\n                    var fpos = -1;\r\n                    if (fname > '') {\r\n                        fpos = this.fileNameExists(fname);\r\n                    } else {\r\n                        fpos = self.getFilePosById(tag.data('fileid'));\r\n                    }\r\n                    if (fpos >= 0) {\r\n                        var line = tag.data('line');\r\n                        if (typeof line == 'undefined') {\r\n                            line = 'c';\r\n                        }\r\n                        self.gotoFile(fpos, line);\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n                this.gotoFileName = function(fname, line) {\r\n                    var fpos = this.fileNameExists(fname);\r\n                    if (fpos >= 0) {\r\n                        if (typeof line == 'undefined') {\r\n                            line = 'c';\r\n                        }\r\n                        self.gotoFile(fpos, line);\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n                this.getFilesToSave = function() {\r\n                    var ret = [];\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        var file = {};\r\n                        file.name = files[i].getFileName();\r\n                        file.contents = files[i].getContent();\r\n                        file.encoding = files[i].isBinary() ? 1 : 0;\r\n                        ret.push(file);\r\n                    }\r\n                    return ret;\r\n                };\r\n                this.resetModified = function() {\r\n                    modified = false;\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        files[i].resetModified();\r\n                    }\r\n                    VPLUtil.delay('updateMenu', updateMenu);\r\n                    VPLUtil.delay('updateFileList', self.updateFileList);\r\n                };\r\n                this.setModified = function() {\r\n                    modified = true;\r\n                    VPLUtil.delay('updateFileList', self.updateFileList);\r\n                    VPLUtil.delay('updateMenu', updateMenu);\r\n                };\r\n                this.isModified = function() {\r\n                    return modified;\r\n                };\r\n                this.length = function() {\r\n                    return files.length;\r\n                };\r\n                this.clearAnnotations = function() {\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        files[i].clearAnnotations();\r\n                    }\r\n                };\r\n                this.getFile = function(i) {\r\n                    return files[i];\r\n                };\r\n                this.getFiles = function() {\r\n                    return files;\r\n                };\r\n                this.getDirectoryStructure = function() {\r\n                    var structure = {\r\n                        isDir: true,\r\n                        content: {},\r\n                        path: '',\r\n                    };\r\n                    /**\r\n                     * Adds a new file the structure of directories\r\n                     * @param {int} i Index of file to add in the file array\r\n                     */\r\n                    function addFilePath(i) {\r\n                        var file = files[i];\r\n                        var fileName = file.getFileName();\r\n                        var path = fileName.split(\"/\");\r\n                        var curdir = structure;\r\n                        var pathdir = '';\r\n                        for (var p = 0; p < path.length; p++) {\r\n                            var part = path[p];\r\n                            if (p == path.length - 1) { // File.\r\n                                curdir.content[part] = {\r\n                                    isDir: false,\r\n                                    content: file,\r\n                                    pos: i,\r\n                                };\r\n                            } else {\r\n                                pathdir += part;\r\n                                if (!curdir.content[part]) { // New dir.\r\n                                    curdir.content[part] = {\r\n                                        isDir: true,\r\n                                        content: {},\r\n                                        path: pathdir,\r\n                                    };\r\n                                }\r\n                                // Descend Dir.\r\n                                pathdir += '/';\r\n                                curdir = curdir.content[part];\r\n                            }\r\n                        }\r\n                    }\r\n                    for (var i in files) {\r\n                        if (files.hasOwnProperty(i)) {\r\n                            addFilePath(i);\r\n                        }\r\n                    }\r\n                    return structure;\r\n                };\r\n                this.generateFileList = function() {\r\n                    if (!self.isFileListVisible()) {\r\n                        return;\r\n                    }\r\n                    var dirIndent = '<span class=\"vpl_ide_dirindent\"></span>';\r\n                    /**\r\n                     * Generates an array of string with the HTML code to represent the list of IDE files\r\n                     * @param {Object} dir Current directory\r\n                     * @param {int} indent Html code to indent subdirectories\r\n                     * @param {Array} lines Output. Each line contains the HTML to represent an IDE file\r\n                     */\r\n                    function lister(dir, indent, lines) {\r\n                        var name, fd, sname, attrs, dirline, file, path, line;\r\n                        for (name in dir.content) {\r\n                            if (dir.content.hasOwnProperty(name)) {\r\n                                fd = dir.content[name];\r\n                                if (fd.isDir) {\r\n                                    var dirpath = VPLUtil.sanitizeText(fd.path);\r\n                                    attrs = 'href=\"#\" data-dirname=\"' + dirpath + '\" ';\r\n                                    sname = VPLUtil.sanitizeText(name);\r\n                                    dirline = indent;\r\n                                    dirline += VPLUI.iconFolder() + '<a ' + attrs + '>' + sname + '</a>';\r\n                                    lines.push(dirline);\r\n                                    lister(fd, indent + dirIndent, lines);\r\n                                } else {\r\n                                    file = fd.content;\r\n                                    sname = VPLUtil.sanitizeText(name);\r\n                                    path = VPLUtil.sanitizeText(file.getFileName());\r\n                                    if (file.isOpen()) {\r\n                                        sname = '<b>' + sname + '</b>';\r\n                                    }\r\n                                    attrs = 'href=\"#\" data-fileid=\"' + file.getId() + '\" title=\"' + path + '\"';\r\n                                    line = '<a ' + attrs + '>' + sname + '</a>';\r\n                                    if (file.isModified()) {\r\n                                        line = VPLUI.iconModified() + line;\r\n                                    }\r\n                                    if (file.isReadOnly()) {\r\n                                        line = line + VPLUI.iconReadOnly();\r\n                                    } else if (file.getId() < minNumberOfFiles) {\r\n                                        line = line + VPLUI.iconRequired();\r\n                                    }\r\n                                    lines.push(indent + line);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    var structure = self.getDirectoryStructure();\r\n                    var lines = [];\r\n                    var html = '';\r\n                    lister(structure, '', lines);\r\n                    for (var i = 0; i < lines.length; i++) {\r\n                        html += lines[i] + '<br>';\r\n                    }\r\n                    fileListContent.html('<div>' + html + '</div>');\r\n                };\r\n                tabsUl.on('click', 'span.vpl_ide_closeicon', function() {\r\n                    fileManager.closeFile(fileManager.currentFile());\r\n                });\r\n                tabsUl.on('dblclick', 'span.vpl_ide_closeicon', menuButtons.getAction('delete'));\r\n                tabsUl.on('dblclick', 'a', menuButtons.getAction('rename'));\r\n                fileListContent.on('dblclick', 'a[data-fileid]', menuButtons.getAction('rename'));\r\n                fileListContent.on('dblclick', 'a[data-dirname]', renameDiretoryAction);\r\n            }\r\n            this.updateEvaluationNumber = function(res) {\r\n                if (typeof res.nevaluations != 'undefined') {\r\n                    var text = res.nevaluations;\r\n                    if (typeof res.reductionbyevaluation != 'undefined'\r\n                         && res.reductionbyevaluation > ''\r\n                         && res.reductionbyevaluation != 0) {\r\n                        if (res.freeevaluations != 0) {\r\n                            text = text + '/' + res.freeevaluations;\r\n                        }\r\n                        text = text + ' -' + res.reductionbyevaluation;\r\n                    }\r\n                    menuButtons.setExtracontent('evaluate', text);\r\n                    menuButtons.setExtracontent('saveandeval', text);\r\n                }\r\n            };\r\n            this.lastResult = null;\r\n            this.getTerminal = function() {\r\n                return terminal;\r\n            };\r\n            this.setResultGrade = function(content, raw) {\r\n                var name = 'grade';\r\n                var titleclass = 'vpl_ide_accordion_t_' + name;\r\n                var contentclass = 'vpl_ide_accordion_c_' + name;\r\n                if (result.find('.' + contentclass).length == 0) {\r\n                    result.append('<div class=\"' + titleclass + '\"></div>');\r\n                    result.append('<div class=\"' + contentclass + '\"></div>');\r\n                }\r\n                if (typeof raw == 'undefined') {\r\n                    return result.find('h4.' + titleclass).length > 0;\r\n                }\r\n                var titleTag = result.find('.' + titleclass);\r\n                if (content > '') {\r\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + content + '</h4>');\r\n                    return true;\r\n                } else {\r\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\r\n                    return false;\r\n                }\r\n            };\r\n            this.setResultTab = function(name, content, raw) {\r\n                var titleclass = 'vpl_ide_accordion_t_' + name;\r\n                var contentclass = 'vpl_ide_accordion_c_' + name;\r\n                if (result.find('.' + contentclass).length == 0) {\r\n                    result.append('<div class=\"' + titleclass + '\"></div>');\r\n                    result.append('<div class=\"' + contentclass + '\"></div>');\r\n                }\r\n                if (typeof raw == 'undefined') {\r\n                    return result.find('h4.' + titleclass).length > 0;\r\n                }\r\n                var titleTag = result.find('.' + titleclass);\r\n                var contentTag = result.find('.' + contentclass);\r\n                var HTMLcontent = $('<div>' + content + '</div>');\r\n                HTMLcontent.find('h4').replaceWith(function() {\r\n                    return $(\"<h5>\").append($(this).contents());\r\n                });\r\n                if (contentTag.html() == HTMLcontent.html()) {\r\n                    return content > '';\r\n                }\r\n                if (content > '') {\r\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + str(name) + '</h4>');\r\n                    contentTag.replaceWith('<div class=\"ui-widget ' + contentclass + '\">' + HTMLcontent.html() + '</div>');\r\n                    return true;\r\n                } else {\r\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\r\n                    contentTag.replaceWith('<div class=\"' + contentclass + '\"></div>');\r\n                    return false;\r\n                }\r\n            };\r\n            this.setResult = function(res, go) {\r\n                self.updateEvaluationNumber(res);\r\n                var files = fileManager.getFiles();\r\n                var fileNames = [];\r\n                var i;\r\n                for (i = 0; i < files.length; i++) {\r\n                    fileNames[i] = files[i].getFileName();\r\n                    files[i].clearAnnotations();\r\n                }\r\n                var show = false;\r\n                var hasContent;\r\n                var grade = VPLUtil.sanitizeText(res.grade);\r\n                var gradeShow;\r\n                var formated;\r\n                gradeShow = self.setResultGrade(grade, res.grade);\r\n                show = show || gradeShow;\r\n                hasContent = self.setResultTab('variables', res.variables, res.variables);\r\n                show = show || hasContent;\r\n                formated = VPLUtil.processResult(res.compilation, fileNames, files, true, false);\r\n                hasContent = self.setResultTab('compilation', formated, res.compilation);\r\n                show = show || hasContent;\r\n                formated = VPLUtil.processResult(res.evaluation, fileNames, files, false, false);\r\n                hasContent = self.setResultTab('comments', formated, res.evaluation);\r\n                show = show || hasContent;\r\n                formated = VPLUtil.sanitizeText(res.execution);\r\n                hasContent = self.setResultTab('execution', formated, res.execution);\r\n                show = show || hasContent;\r\n                hasContent = self.setResultTab('description', window.VPLDescription, window.VPLDescription);\r\n                if (hasContent && typeof MathJax == 'object') { // MathJax workaround.\r\n                    var math = result.find(\".vpl_ide_accordion_c_description\")[0];\r\n                    MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, math]);\r\n                }\r\n                show = show || hasContent;\r\n                if (show) {\r\n                    resultContainer.show();\r\n                    resultContainer.vplVisible = true;\r\n                    result.accordion(\"refresh\");\r\n                    result.accordion('option', 'active', gradeShow ? 1 : 0);\r\n                    for (i = 0; i < files.length; i++) {\r\n                        var anot = files[i].getAnnotations();\r\n                        for (var j = 0; j < anot.length; j++) {\r\n                            if (go || anot[j].type == 'error') {\r\n                                fileManager.gotoFile(i, anot[j].row + 1);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    $('#vpl_ide_shrightpanel').show();\r\n                } else {\r\n                    resultContainer.hide();\r\n                    resultContainer.vplVisible = false;\r\n                    $('#vpl_ide_shrightpanel').hide();\r\n                }\r\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\r\n            };\r\n\r\n            result.accordion({\r\n                heightStyle: 'fill',\r\n                header: 'h4',\r\n                animate: false,\r\n                beforeActivate: avoidSelectGrade,\r\n            });\r\n            resultContainer.width(2 * resultContainer.vplMinWidth);\r\n            result.on('click', 'a', function(event) {\r\n                if (fileManager.gotoFileLink(event.currentTarget)) {\r\n                    event.preventDefault();\r\n                }\r\n            });\r\n            resultContainer.vplVisible = false;\r\n            resultContainer.hide();\r\n\r\n            fileListContainer.addClass('ui-tabs ui-widget ui-widget-content ui-corner-all');\r\n            fileList.text(str('filelist'));\r\n            fileList.html(VPLUI.iconFolder() + fileList.html());\r\n            fileList.addClass(\"ui-widget-header ui-button-text-only ui-corner-all\");\r\n            fileListContent.addClass(\"ui-widget ui-corner-all\");\r\n            fileListContainer.width(2 * fileListContainer.vplMinWidth);\r\n            fileListContainer.on('click', 'a', function(event) {\r\n                event.preventDefault();\r\n                fileManager.gotoFileLink(event.currentTarget);\r\n            });\r\n            fileListContainer.vplVisible = false;\r\n            fileListContainer.hide();\r\n            var tabsAir = false;\r\n            /**\r\n             * Returns separation space\r\n             * @returns {int} size in pixels\r\n             */\r\n            function getTabsAir() {\r\n                if (tabsAir === false) {\r\n                    tabsAir = (tabs.outerWidth(true) - tabs.width()) / 2;\r\n                }\r\n                return tabsAir;\r\n            }\r\n            /**\r\n             * Resize tab width\r\n             * @param {Event} e Unused\r\n             * @param {Object} ui UI object\r\n             */\r\n            function resizeTabWidth(e, ui) {\r\n                var diffLeft = ui.position.left - ui.originalPosition.left;\r\n                var maxWidth;\r\n                if (diffLeft !== 0) {\r\n                    maxWidth = tabs.width() + fileListContainer.width() - fileListContainer.vplMinWidth;\r\n                    tabs.resizable('option', 'maxWidth', maxWidth);\r\n                    fileListContainer.width(fileListContainer.vplOriginalWidth + diffLeft);\r\n                } else {\r\n                    maxWidth = tabs.width() + resultContainer.width() - resultContainer.vplMinWidth;\r\n                    tabs.resizable('option', 'maxWidth', maxWidth);\r\n                    var diffWidth = ui.size.width - ui.originalSize.width;\r\n                    resultContainer.width(resultContainer.vplOriginalWidth - diffWidth);\r\n                }\r\n                fileManager.currentFile('adjustSize');\r\n            }\r\n            var resizableOptions = {\r\n                containment: 'parent',\r\n                resize: resizeTabWidth,\r\n                start: function() {\r\n                    $(window).off('resize', autoResizeTab);\r\n                    tabs.resizable('option', 'minWidth', 100);\r\n                    if (resultContainer.vplVisible) {\r\n                        resultContainer.vplOriginalWidth = resultContainer.width();\r\n                    }\r\n                    if (fileListContainer.vplVisible) {\r\n                        fileListContainer.vplOriginalWidth = fileListContainer.width();\r\n                    }\r\n                },\r\n                stop: function(e, ui) {\r\n                    resizeTabWidth(e, ui);\r\n                    tabs.resizable('option', 'maxWidth', 100000);\r\n                    tabs.resizable('option', 'minWidth', 0);\r\n                    autoResizeTab();\r\n                    $(window).on('resize', autoResizeTab);\r\n                },\r\n                handles: \"\"\r\n            };\r\n            tabs.resizable(resizableOptions);\r\n             /**\r\n              * Updates handles for internal IDE resize\r\n              */\r\n            function updateTabsHandles() {\r\n                var handles = ['e', 'w', 'e', 'e, w'];\r\n                var index = 0;\r\n                index += fileListContainer.vplVisible ? 1 : 0;\r\n                index += resultContainer.vplVisible ? 2 : 0;\r\n                tabs.resizable('destroy');\r\n                resizableOptions.handles = handles[index];\r\n                resizableOptions.disable = index === 0;\r\n                tabs.resizable(resizableOptions);\r\n            }\r\n            /**\r\n             * Resize the IDE height\r\n             */\r\n            function resizeHeight() {\r\n                var newHeight = $(window).outerHeight();\r\n                newHeight -= menu.offset().top + menu.height() + (fullScreen ? getTabsAir() : 20);\r\n                if (newHeight < 250) {\r\n                    newHeight = 250;\r\n                }\r\n                tr.height(newHeight);\r\n                var panelHeight = newHeight - 3 * getTabsAir();\r\n                tabs.height(panelHeight);\r\n                if (resultContainer.vplVisible) {\r\n                    resultContainer.height(panelHeight + getTabsAir());\r\n                    result.accordion('refresh');\r\n                }\r\n                if (fileListContainer.vplVisible) {\r\n                    fileListContent.height(panelHeight - (fileList.outerHeight() + getTabsAir()));\r\n                    fileListContainer.height(panelHeight);\r\n                }\r\n            }\r\n            adjustTabsTitles = function(center) {\r\n                var newWidth = tabs.width();\r\n                var tabsUlWidth = 0;\r\n                tabsUl.width(100000);\r\n                var last = tabsUl.children('li:visible').last();\r\n                if (last.length) {\r\n                    var parentScrollLeft = tabsUl.parent().scrollLeft();\r\n                    tabsUlWidth = parentScrollLeft + last.position().left + last.width() + tabsAir;\r\n                    tabsUl.width(tabsUlWidth);\r\n                    var file = fileManager.currentFile();\r\n                    if (file && center) {\r\n                        var fileTab = $(file.getTabNameId());\r\n                        var scroll = parentScrollLeft + fileTab.position().left;\r\n                        scroll -= (newWidth - fileTab.outerWidth()) / 2;\r\n                        if (scroll < 0) {\r\n                            scroll = 0;\r\n                        }\r\n                        tabsUl.parent().finish().animate({\r\n                            scrollLeft: scroll\r\n                        }, 'slow');\r\n                    }\r\n                }\r\n                if (tabsUlWidth < newWidth) {\r\n                    tabsUl.width('');\r\n                }\r\n            };\r\n            autoResizeTab = function() {\r\n                var oldWidth = tabs.width();\r\n                var newWidth = menu.width();\r\n                var planb = false;\r\n                updateTabsHandles();\r\n                tr.width(menu.outerWidth());\r\n                if (fileListContainer.vplVisible) {\r\n                    var left = fileListContainer.outerWidth() + tabsAir;\r\n                    oldWidth += left;\r\n                    if (left >= 100) {\r\n                        newWidth -= left;\r\n                        tabs.css('left', left);\r\n                    } else {\r\n                        planb = true;\r\n                    }\r\n                } else {\r\n                    tabs.css('left', 0);\r\n                }\r\n                if (resultContainer.vplVisible) {\r\n                    var right = resultContainer.outerWidth() + tabsAir;\r\n                    oldWidth += right;\r\n                    newWidth -= right;\r\n                    if (newWidth < 100) {\r\n                        planb = true;\r\n                    }\r\n                }\r\n                if (planb) {\r\n                    var rel = menu.width() / oldWidth;\r\n                    var wfl = 0;\r\n                    if (fileListContainer.vplVisible) {\r\n                        wfl = fileListContainer.width() * rel;\r\n                        fileListContainer.width(wfl - tabsAir);\r\n                        wfl += tabsAir;\r\n                        tabs.css('left', wfl);\r\n                    }\r\n                    tabs.width(tabs.width() * rel);\r\n                    if (resultContainer.vplVisible) {\r\n                        resultContainer.width(menu.width() - (wfl + tabs.width() + tabsAir));\r\n                    }\r\n                } else {\r\n                    tabs.width(newWidth);\r\n                }\r\n                adjustTabsTitles(true);\r\n                resizeHeight();\r\n                fileManager.currentFile('adjustSize');\r\n            };\r\n            /**\r\n             * Transfer focus to current file\r\n             */\r\n            function focusCurrentFile() {\r\n                fileManager.currentFile('focus');\r\n            }\r\n            var dialogbaseOptions = $.extend({}, {\r\n                close: focusCurrentFile\r\n            }, VPLUI.dialogbaseOptions);\r\n            /**\r\n             * Shows a dialog with a message.\r\n             * @param {string} message\r\n             * @param {Object} options icon, title, actions handler (ok, yes, no, close)\r\n             * @returns {JQuery} JQueryUI Dialog object already open\r\n             */\r\n            function showMessage(message, options) {\r\n                return VPLUI.showMessage(message, $.extend({}, dialogbaseOptions, options));\r\n            }\r\n            showErrorMessage = function(message) {\r\n                return VPLUI.showErrorMessage(message, {\r\n                    close: focusCurrentFile\r\n                });\r\n            };\r\n\r\n            var dialogNew = $('#vpl_ide_dialog_new');\r\n            /**\r\n             * The event handler for the new file action\r\n             * @param {Object} event\r\n             * @return {boolean}\r\n             */\r\n            function newFileHandler(event) {\r\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\r\n                    return true;\r\n                }\r\n                dialogNew.dialog('close');\r\n                var file = {\r\n                    name: $('#vpl_ide_input_newfilename').val(),\r\n                    contents: '',\r\n                    encoding: 0\r\n                };\r\n                var newfile = fileManager.addFile(file, false, updateMenu, showErrorMessage);\r\n                if (newfile) {\r\n                    fileManager.open(newfile);\r\n                    tabs.tabs('option', 'active', fileManager.getTabPos(newfile.getId()));\r\n                    newfile.focus();\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n\r\n            var dialogButtons = {};\r\n            dialogButtons[str('ok')] = newFileHandler;\r\n            dialogButtons[str('cancel')] = function() {\r\n                $(this).dialog('close');\r\n            };\r\n            dialogNew.find('input').on('keypress', newFileHandler);\r\n            dialogNew.dialog($.extend({}, dialogbaseOptions, {\r\n                title: str('create_new_file'),\r\n                buttons: dialogButtons\r\n            }));\r\n            VPLUI.setDialogTitleIcon(dialogNew, 'new');\r\n\r\n            var dialogRename = $('#vpl_ide_dialog_rename');\r\n            /**\r\n             * The event handler for the rename current file action\r\n             * @param {Object} event\r\n             */\r\n            function renameHandler(event) {\r\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\r\n                    return;\r\n                }\r\n                dialogRename.dialog('close');\r\n                fileManager.renameFile(fileManager.currentFile('getFileName'),\r\n                        $('#vpl_ide_input_renamefilename').val(), showErrorMessage);\r\n                event.preventDefault();\r\n            }\r\n            dialogRename.find('input').on('keypress', renameHandler);\r\n            dialogButtons[str('ok')] = renameHandler;\r\n            dialogRename.dialog($.extend({}, dialogbaseOptions, {\r\n                open: function() {\r\n                    $('#vpl_ide_input_renamefilename').val(fileManager.currentFile('getFileName'));\r\n                },\r\n                title: str('rename_file'),\r\n                buttons: dialogButtons\r\n            }));\r\n            VPLUI.setDialogTitleIcon(dialogRename, 'rename');\r\n\r\n            var dialogRenameDirectory = $('#vpl_ide_dialog_renamedir');\r\n            /**\r\n             * The event handler for rename a directory\r\n             * @param {Object} event\r\n             */\r\n            function renameDirectoryHandler(event) {\r\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\r\n                    return;\r\n                }\r\n                dialogRenameDirectory.dialog('close');\r\n                fileManager.renameDirectory($('#vpl_ide_input_olddirectoryname').val(),\r\n                        $('#vpl_ide_input_renamedirectory').val(), showErrorMessage);\r\n                event.preventDefault();\r\n            }\r\n            dialogRenameDirectory.find('input').on('keypress', renameDirectoryHandler);\r\n            dialogButtons[str('ok')] = renameDirectoryHandler;\r\n            dialogRenameDirectory.dialog($.extend({}, dialogbaseOptions, {\r\n                title: str('rename_directory'),\r\n                buttons: dialogButtons\r\n            }));\r\n            VPLUI.setDialogTitleIcon(dialogRenameDirectory, 'filelist');\r\n            renameDiretoryAction = function(event) {\r\n                if (event.target.hasAttribute('data-dirname')) {\r\n                    var dirname = event.target.getAttribute('data-dirname');\r\n                    $('#vpl_ide_input_olddirectoryname').val(dirname);\r\n                    $('#vpl_ide_input_renamedirectory').val(dirname);\r\n                    dialogRenameDirectory.dialog('open');\r\n                }\r\n            };\r\n            var dialogComments = $('#vpl_ide_dialog_comments');\r\n            var oldStudentComments = '';\r\n            dialogButtons[str('ok')] = function() {\r\n                if (oldStudentComments != $('#vpl_ide_input_comments').val()) {\r\n                    fileManager.setModified();\r\n                }\r\n                $(this).dialog('close');\r\n            };\r\n            dialogComments.dialog($.extend({}, dialogbaseOptions, {\r\n                open: function() {\r\n                    oldStudentComments = $('#vpl_ide_input_comments').val();\r\n                },\r\n                title: str('comments'),\r\n                width: '40em',\r\n                buttons: dialogButtons\r\n            }));\r\n            VPLUI.setDialogTitleIcon(dialogComments, 'comments');\r\n\r\n            $('#vpl_ide_input_comments').width('30em');\r\n            var aboutDialog = $('#vpl_ide_dialog_about');\r\n            var OKButtons = {};\r\n            OKButtons[str('ok')] = function() {\r\n                $(this).dialog('close');\r\n            };\r\n            var shortcutDialog = $('#vpl_ide_dialog_shortcuts');\r\n            shortcutDialog.dialog($.extend({}, dialogbaseOptions, {\r\n                open: function() {\r\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\r\n                    $('#vpl_ide_dialog_shortcuts').html(html);\r\n                },\r\n                title: str('shortcuts'),\r\n                width: 400,\r\n                height: 300,\r\n                buttons: OKButtons\r\n            }));\r\n            shortcutDialog.dialog('option', 'height', 300);\r\n            VPLUI.setDialogTitleIcon(shortcutDialog, 'shortcuts');\r\n\r\n            OKButtons[str('shortcuts')] = function() {\r\n                $(this).dialog('close');\r\n                shortcutDialog.dialog('open');\r\n            };\r\n            aboutDialog.dialog($.extend({}, dialogbaseOptions, {\r\n                open: function() {\r\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\r\n                    aboutDialog.next().find(\"button\").filter(\r\n                        function() {\r\n                            return $(this).text() == str('shortcuts');\r\n                        }\r\n                  ).button(html != '' ? 'enable' : 'disable');\r\n                },\r\n                title: str('about'),\r\n                width: 400,\r\n                height: 300,\r\n                buttons: OKButtons\r\n            }));\r\n            aboutDialog.dialog('option', 'height', 300);\r\n            VPLUI.setDialogTitleIcon(aboutDialog, 'about');\r\n\r\n            var dialogSort = $('#vpl_ide_dialog_sort');\r\n            var dialogSortButtons = {};\r\n            dialogSortButtons[str('ok')] = function() {\r\n                var files = fileManager.getFiles();\r\n                var regNoNumber = /[^\\d]*/;\r\n                var sorted = [];\r\n                var i = 0;\r\n                var newOrder = $('#vpl_sort_list li');\r\n                if (newOrder.length != files.length) {\r\n                    return;\r\n                }\r\n                newOrder.each(function() {\r\n                    var orig = parseInt(this.id.replace(regNoNumber, ''));\r\n                    sorted.push(files[orig]);\r\n                });\r\n                for (i = 0; i < newOrder.length; i++) {\r\n                    files[i] = sorted[i];\r\n                }\r\n                fileManager.setModified();\r\n                $(this).dialog('close');\r\n            };\r\n            dialogSortButtons[str('cancel')] = function() {\r\n                $(this).dialog('close');\r\n            };\r\n            dialogSort.dialog($.extend({}, dialogbaseOptions, {\r\n                title: str('sort'),\r\n                buttons: dialogSortButtons,\r\n                open: function() {\r\n                    var list = $('#vpl_sort_list');\r\n                    list.html('');\r\n                    var files = fileManager.getFiles();\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        var file = $('<li id=\"vpl_fsort_' + i + '\"class=\"ui-widget-content\"></li>');\r\n                        if (files[i].getId() < minNumberOfFiles) {\r\n                            file.addClass('ui-state-disabled');\r\n                        }\r\n                        file.text((i + 1) + '-' + files[i].getFileName());\r\n                        list.append(file);\r\n                    }\r\n                    list.sortable({\r\n                        items: \"li:not(.ui-state-disabled)\",\r\n                        placeholder: \"ui-state-highlight\",\r\n                        start: function(event, ui) {\r\n                            ui.item.addClass('ui-state-highlight');\r\n                        },\r\n                        stop: function(event, ui) {\r\n                            ui.item.removeClass('ui-state-highlight');\r\n                        },\r\n                    });\r\n                    list.disableSelection();\r\n                },\r\n                maxHeight: 400\r\n            }));\r\n            VPLUI.setDialogTitleIcon(dialogSort, 'sort');\r\n\r\n            var dialogMultidelete = $('#vpl_ide_dialog_multidelete');\r\n            var dialogMultideleteButtons = {};\r\n            dialogMultideleteButtons[str('selectall')] = function() {\r\n                $(this).find('input').prop(\"checked\", true);\r\n            };\r\n            dialogMultideleteButtons[str('deselectall')] = function() {\r\n                $(this).find('input').prop(\"checked\", false);\r\n            };\r\n            dialogMultideleteButtons[str('deleteselected')] = function() {\r\n                var files = fileManager.getFiles();\r\n                var toDeleteList = [];\r\n                var labelList = $('#vpl_multidelete_list label');\r\n                labelList.each(function() {\r\n                    var label = $(this);\r\n                    if (label.find('input').prop('checked')) {\r\n                        var id = label.data('fileid');\r\n                        toDeleteList.push(files[id].getFileName());\r\n                    }\r\n                });\r\n                for (var i = 0; i < toDeleteList.length; i++) {\r\n                    fileManager.deleteFile(toDeleteList[i], showErrorMessage);\r\n                }\r\n                VPLUtil.delay('updateMenu', updateMenu);\r\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\r\n                $(this).dialog('close');\r\n            };\r\n            dialogMultideleteButtons[str('cancel')] = function() {\r\n                $(this).dialog('close');\r\n            };\r\n            dialogMultidelete.dialog($.extend({}, dialogbaseOptions, {\r\n                title: str('multidelete'),\r\n                buttons: dialogMultideleteButtons,\r\n                open: function() {\r\n                    var list = $('#vpl_multidelete_list');\r\n                    list.html('');\r\n                    var files = fileManager.getFiles();\r\n                    for (var i = minNumberOfFiles; i < files.length; i++) {\r\n                        var name = VPLUtil.sanitizeText(files[i].getFileName());\r\n                        var file = $('<label><input type=\"checkbox\"> ' + name + '</label>');\r\n                        file.data('fileid', i);\r\n                        list.append(file);\r\n                        list.append('<br>');\r\n                    }\r\n                    list.find('label').button();\r\n                },\r\n                maxHeight: 400,\r\n                maxWidth: 400\r\n            }));\r\n            VPLUI.setDialogTitleIcon(dialogMultidelete, 'multidelete');\r\n\r\n            var dialogFontsize = $('#vpl_ide_dialog_fontsize');\r\n            var fontsizeSlider = $('#vpl_ide_dialog_fontsize .vpl_fontsize_slider');\r\n            var dialogFontFizeButtons = {};\r\n            dialogFontFizeButtons[str('ok')] = function() {\r\n                var value = fontsizeSlider.slider(\"value\");\r\n                fileManager.setFontSize(value);\r\n                $(this).dialog('close');\r\n                $.ajax({\r\n                    async: true,\r\n                    type: \"POST\",\r\n                    url: M.cfg.wwwroot + '/question/type/savpl/editor/userpreferences.json.php',\r\n                    'data': JSON.stringify({fontSize: value}),\r\n                    contentType: \"application/json; charset=utf-8\",\r\n                    dataType: \"json\"\r\n                });\r\n            };\r\n            dialogFontFizeButtons[str('cancel')] = function() {\r\n                fileManager.setFontSize(fontsizeSlider.data(\"vpl_fontsize\"));\r\n                $(this).dialog('close');\r\n            };\r\n            dialogFontFizeButtons[str('reset')] = function() {\r\n                fontsizeSlider.slider('value', 12);\r\n            };\r\n            dialogFontsize.dialog($.extend({}, dialogbaseOptions, {\r\n                title: str('fontsize'),\r\n                buttons: dialogFontFizeButtons,\r\n                open: function() {\r\n                    fontsizeSlider.data(\"vpl_fontsize\", fileManager.getFontSize());\r\n                    fontsizeSlider.slider('value', fileManager.getFontSize());\r\n                },\r\n            }));\r\n            fontsizeSlider.slider({\r\n                min: 1,\r\n                max: 48,\r\n                change: function() {\r\n                    var value = fontsizeSlider.slider(\"value\");\r\n                    fileManager.setFontSize(value);\r\n                    dialogFontsize.find('.vpl_fontsize_slider_value').text(value);\r\n                }\r\n            });\r\n            VPLUI.setDialogTitleIcon(dialogFontsize, 'fontsize');\r\n\r\n            var dialogAceTheme = $('#vpl_ide_dialog_acetheme');\r\n            var acethemeSelect = $('#vpl_ide_dialog_acetheme select');\r\n            var dialogAceThemeButtons = {};\r\n            dialogAceThemeButtons[str('ok')] = function() {\r\n                fileManager.setTheme(acethemeSelect.val());\r\n                $(this).dialog('close');\r\n                VPLUtil.setUserPreferences({aceTheme: acethemeSelect.val()});\r\n            };\r\n            dialogAceThemeButtons[str('cancel')] = function() {\r\n                fileManager.setTheme(acethemeSelect.data(\"acetheme\"));\r\n                $(this).dialog('close');\r\n            };\r\n            dialogAceThemeButtons[str('reset')] = function() {\r\n                acethemeSelect.val(acethemeSelect.data(\"acetheme\"));\r\n                fileManager.setTheme(acethemeSelect.val());\r\n            };\r\n            dialogAceTheme.dialog($.extend({}, dialogbaseOptions, {\r\n                title: str('theme'),\r\n                buttons: dialogAceThemeButtons,\r\n                modal: false,\r\n                open: function() {\r\n                    acethemeSelect.data(\"acetheme\", fileManager.getTheme());\r\n                    acethemeSelect.val(fileManager.getTheme());\r\n                },\r\n            }));\r\n            acethemeSelect.on('change', function() {\r\n                    fileManager.setTheme(acethemeSelect.val());\r\n            });\r\n            VPLUI.setDialogTitleIcon(dialogAceTheme, 'theme');\r\n\r\n            var terminal = new VPLTerminal('vpl_dialog_terminal', 'vpl_terminal', str);\r\n            var VNCClient = new VPLVNCClient('vpl_dialog_vnc', str);\r\n            var lastConsole = terminal;\r\n            var fileSelect = $('#vpl_ide_input_file');\r\n            var fileSelectHandler = function() {\r\n                VPLUI.readSelectedFiles(this.files, function(file) {\r\n                    return fileManager.addFile(file, true, updateMenu, showErrorMessage);\r\n                },\r\n                function() {\r\n                    fileManager.fileListVisibleIfNeeded();\r\n                });\r\n            };\r\n            fileSelect.on('change', fileSelectHandler);\r\n            // Menu acctions.\r\n            menuButtons.add({\r\n                name: 'filelist',\r\n                originalAction: function() {\r\n                    fileManager.fileListVisible(!fileManager.isFileListVisible());\r\n                    VPLUtil.delay('updateMenu', updateMenu);\r\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\r\n                    VPLUtil.delay('updateFileList', fileManager.updateFileList);\r\n                },\r\n                bindKey: {\r\n                    win: 'Ctrl-L',\r\n                    mac: 'Ctrl-L'\r\n                }\r\n            });\r\n\r\n            menuButtons.add({\r\n                name: 'new',\r\n                originalAction: function() {\r\n                    if (fileManager.length() < maxNumberOfFiles) {\r\n                        dialogNew.dialog('open');\r\n                    }\r\n                },\r\n                bindKey: {\r\n                    win: 'Alt-N',\r\n                    mac: 'Option-N'\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'rename',\r\n                originalAction: function() {\r\n                    var file = fileManager.currentFile();\r\n                    if (file && file.getId() >= minNumberOfFiles) {\r\n                        dialogRename.dialog('open');\r\n                    }\r\n                },\r\n                bindKey: {\r\n                    win: 'Ctrl-R',\r\n                    mac: 'Ctrl-R'\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'delete',\r\n                originalAction: function() {\r\n                    var file = fileManager.currentFile();\r\n                    if (!file) {\r\n                        return;\r\n                    }\r\n                    var filename = file.getFileName();\r\n                    var message = str('delete_file_fq', filename);\r\n                    showMessage(message, {\r\n                        ok: function() {\r\n                            fileManager.deleteFile(filename, showErrorMessage);\r\n                        },\r\n                        title: str('delete_file_q'),\r\n                        icon: 'trash'\r\n                    });\r\n                },\r\n                bindKey: {\r\n                    win: 'Ctrl-D',\r\n                    mac: 'Ctrl-D'\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'close',\r\n                originalAction: function() {\r\n                    var file = fileManager.currentFile();\r\n                    if (!file) {\r\n                        return;\r\n                    }\r\n                    fileManager.closeFile(file);\r\n                },\r\n                bindKey: {\r\n                    win: 'Alt-W',\r\n                    mac: 'Option-W'\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'import',\r\n                originalAction: function() {\r\n                    fileSelect.val('');\r\n                    fileSelect.trigger('click');\r\n                },\r\n                bindKey: {\r\n                    win: 'Ctrl-I',\r\n                    mac: 'Ctrl-I'\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'sort',\r\n                originalAction: function() {\r\n                    dialogSort.dialog('open');\r\n                },\r\n                bindKey: {\r\n                    win: 'Ctrl-O',\r\n                    mac: 'Ctrl-O'\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'multidelete',\r\n                originalAction: function() {\r\n                    dialogMultidelete.dialog('open');\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'fontsize',\r\n                originalAction: function() {\r\n                    dialogFontsize.dialog('open');\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'theme',\r\n                originalAction: function() {\r\n                    dialogAceTheme.dialog('open');\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'print',\r\n                originalAction: function() {\r\n                    window.print();\r\n                },\r\n                bindKey: {\r\n                    win: 'Alt-P',\r\n                    mac: 'Command-P'\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'undo',\r\n                originalAction: function() {\r\n                    fileManager.currentFile('undo');\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'redo',\r\n                originalAction: function() {\r\n                    fileManager.currentFile('redo');\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'select_all',\r\n                editorName: 'selectall',\r\n                originalAction: function() {\r\n                    fileManager.currentFile('selectAll');\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'find',\r\n                originalAction: function() {\r\n                    fileManager.currentFile('find');\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'find_replace',\r\n                editorName: 'replace',\r\n                originalAction: function() {\r\n                    fileManager.currentFile('replace');\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'next',\r\n                editorName: 'findnext',\r\n                originalAction: function() {\r\n                    fileManager.currentFile('next');\r\n                }\r\n            });\r\n\r\n            menuButtons.add({\r\n                name: 'fullscreen',\r\n                originalAction: function() {\r\n                    if (fullScreen) {\r\n                        rootObj.removeClass('vpl_ide_root_fullscreen');\r\n                        $('body').removeClass('vpl_body_fullscreen');\r\n                        menuButtons.setText('fullscreen', 'fullscreen');\r\n                        $('#vpl_ide_user').hide();\r\n                        fullScreen = false;\r\n                    } else {\r\n                        $('body').addClass('vpl_body_fullscreen').scrollTop(0);\r\n                        rootObj.addClass('vpl_ide_root_fullscreen');\r\n                        menuButtons.setText('fullscreen', 'regularscreen');\r\n                        if (options.username) {\r\n                            $('#vpl_ide_user').show();\r\n                        }\r\n                        fullScreen = true;\r\n                    }\r\n                    focusCurrentFile();\r\n                    setTimeout(autoResizeTab, 10);\r\n                },\r\n                bindKey: {\r\n                    win: 'Alt-F',\r\n                    mac: 'Ctrl-F'\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'download',\r\n                originalAction: function() {\r\n                    window.location = options.download;\r\n                }\r\n            });\r\n            /**\r\n             * Reset files action\r\n             */\r\n            function resetFiles() {\r\n                VPLUI.requestAction('resetfiles', '', {}, options.ajaxurl)\r\n                .done(function(response) {\r\n                    var files = response.files;\r\n                    for (var fileName in files) {\r\n                        if (files.hasOwnProperty(fileName)) {\r\n                            fileManager.addFile(files[fileName], true, VPLUtil.doNothing, showErrorMessage);\r\n                        }\r\n                    }\r\n                    fileManager.fileListVisibleIfNeeded();\r\n                    VPLUtil.delay('updateMenu', updateMenu);\r\n                }).fail(showErrorMessage);\r\n            }\r\n            menuButtons.add({\r\n                name: 'resetfiles',\r\n                originalAction: function() {\r\n                    showMessage(str('sureresetfiles'), {\r\n                        title: str('resetfiles'),\r\n                        ok: resetFiles,\r\n                        icon: 'resetfiles'\r\n                    });\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'save',\r\n                originalAction: function() {\r\n                    var data = {\r\n                        files: fileManager.getFilesToSave(),\r\n                        comments: $('#vpl_ide_input_comments').val(),\r\n                        version: fileManager.getVersion()\r\n                    };\r\n                    if (JSON.stringify(data).length > options.postMaxSize) {\r\n                        showErrorMessage(str('maxpostsizeexceeded'));\r\n                        return;\r\n                    }\r\n                    /**\r\n                     * Save action\r\n                     */\r\n                    function doSave() {\r\n                        VPLUI.requestAction('save', 'saving', data, options.ajaxurl)\r\n                        .done(function(response) {\r\n                            if (response.requestsconfirmation) {\r\n                                showMessage(response.question, {\r\n                                    title: str('saving'),\r\n                                    icon: 'alert',\r\n                                    yes: function() {\r\n                                        data.version = 0;\r\n                                        doSave();\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                fileManager.resetModified();\r\n                                fileManager.setVersion(response.version);\r\n                                menuButtons.setTimeLeft(response);\r\n                                VPLUtil.delay('updateMenu', updateMenu);\r\n                                if (VPLUI.monitorRunning()) {\r\n                                    data.processid = VPLUtil.getProcessId();\r\n                                    VPLUI.requestAction('update', 'updating', data, options.ajaxurl);\r\n                                }\r\n                            }\r\n                        }).fail(showErrorMessage);\r\n                    }\r\n                    doSave();\r\n                },\r\n                bindKey: {\r\n                    win: 'Ctrl-S',\r\n                    mac: 'Command-S'\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Launches the action\r\n             *\r\n             * @param {string} action Action 'run', 'debug', 'evaluate'\r\n             * @param {string} acting I18n for the action in progress\r\n             * @param {string} data Data attached to the action\r\n             */\r\n            function executionRequest(action, acting, data) {\r\n                if (!data) {\r\n                    data = {};\r\n                }\r\n                if (!lastConsole.isConnected()) {\r\n                    VPLUI.requestAction(action, '', data, options.ajaxurl)\r\n                    .done(function(response) {\r\n                        VPLUI.webSocketMonitor(response, action, acting, executionActions);\r\n                    })\r\n                    .fail(showErrorMessage);\r\n                }\r\n            }\r\n            /**\r\n             * Launches the run action\r\n             */\r\n            function runAction() {\r\n                executionRequest('run', 'running', {\r\n                    XGEOMETRY: VNCClient.getCanvasSize(),\r\n                    currentFileName: fileManager.getCurrentFileName(),\r\n                });\r\n            }\r\n            menuButtons.add({\r\n                name: 'run',\r\n                originalAction: function() {\r\n                    executionActions.setLastAction(runAction);\r\n                    runAction();\r\n                },\r\n                bindKey: {\r\n                    win: 'Ctrl-F11',\r\n                    mac: 'Command-U'\r\n                }\r\n            });\r\n            /**\r\n             * Launches the debug action\r\n             */\r\n            function debugAction() {\r\n                executionRequest('debug', 'debugging', {\r\n                    XGEOMETRY: VNCClient.getCanvasSize(),\r\n                    currentFileName: fileManager.getCurrentFileName(),\r\n                });\r\n            }\r\n            menuButtons.add({\r\n                name: 'debug',\r\n                originalAction: function() {\r\n                    executionActions.setLastAction(debugAction);\r\n                    debugAction();\r\n                },\r\n                bindKey: {\r\n                    win: 'Alt-F11',\r\n                    mac: 'Option-U'\r\n                }\r\n            });\r\n            /**\r\n             * Launches the evaluate action\r\n             */\r\n            function evaluateAction() {\r\n                executionRequest('evaluate', 'evaluating');\r\n            }\r\n            menuButtons.add({\r\n                name: 'evaluate',\r\n                originalAction: function() {\r\n                    executionActions.setLastAction(evaluateAction);\r\n                    evaluateAction();\r\n                },\r\n                bindKey: {\r\n                    win: 'Shift-F11',\r\n                    mac: 'Command-Option-U'\r\n                }\r\n            });\r\n\r\n            /** **********Save and redirect*************/\r\n            menuButtons.add({\r\n                name: 'saveandeval',\r\n                icon: 'save',\r\n                originalAction: function() {\r\n                    var data = {\r\n                        files: fileManager.getFilesToSave(),\r\n                        comments: $('#vpl_ide_input_comments').val(),\r\n                        version: fileManager.getVersion()\r\n                    };\r\n                    if (JSON.stringify(data).length > options.postMaxSize) {\r\n                        showErrorMessage(str('maxpostsizeexceeded'));\r\n                        return;\r\n                    }\r\n                    /**\r\n                     * Save action\r\n                     */\r\n                    function doSaveAndEval() {\r\n                        VPLUtil.requestAction('save', 'saving', data, options.ajaxurl)\r\n                            .done(function(response) {\r\n                                if (response.requestsconfirmation) {\r\n                                    showMessage(response.question, {\r\n                                        title: str('saving'),\r\n                                        icon: 'alert',\r\n                                        yes: function() {\r\n                                            data.version = response.version;\r\n                                            doSaveAndEval();\r\n                                        }\r\n                                    });\r\n                                } else {\r\n                                    fileManager.resetModified();\r\n                                    fileManager.setVersion(response.version);\r\n                                    menuButtons.setTimeLeft(response);\r\n                                    VPLUtil.delay('updateMenu', updateMenu);\r\n                                    if (VPLUtil.monitorRunning()) {\r\n                                        data.processid = VPLUtil.getProcessId();\r\n                                        VPLUtil.requestAction('update', 'updating', data, options.ajaxurl).done(function(response) {\r\n                                            window.location.href = options.redirecturl;\r\n                                        });\r\n                                    } else {\r\n                                        window.location.href = options.redirecturl;\r\n                                    }\r\n                                }\r\n                            }).fail(showErrorMessage);\r\n                    }\r\n                    doSaveAndEval();\r\n                },\r\n                bindKey: {\r\n                    win: 'Ctrl-E',\r\n                    mac: 'Command-E'\r\n                }\r\n            });\r\n            /** ****************************************/\r\n\r\n            menuButtons.add({\r\n                name: 'comments',\r\n                originalAction: function() {\r\n                    dialogComments.dialog('open');\r\n                },\r\n            });\r\n            menuButtons.add({\r\n                name: 'console',\r\n                originalAction: function() {\r\n                    if (lastConsole.isOpen()) {\r\n                        lastConsole.close();\r\n                    } else {\r\n                        lastConsole.show();\r\n                    }\r\n                }\r\n            });\r\n            menuButtons.add({name: 'user'});\r\n            menuButtons.add({\r\n                name: 'about',\r\n                originalAction: function() {\r\n                    aboutDialog.dialog('open');\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'timeleft',\r\n                originalAction: function() {\r\n                    menuButtons.toggleTimeLeft();\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'more',\r\n                originalAction: function() {\r\n                    var tag = $('#vpl_ide_menuextra');\r\n                    if (tag.is(\":visible\")) {\r\n                        menuButtons.setText('more', 'more', VPLUtil.str('more'));\r\n                        tag.hide();\r\n                    } else {\r\n                        menuButtons.setText('more', 'less', VPLUtil.str('less'));\r\n                        tag.show();\r\n                    }\r\n                    VPLUtil.delay('updateMenu', updateMenu);\r\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\r\n                }\r\n            });\r\n            menuButtons.add({\r\n                name: 'shrightpanel',\r\n                icon: 'close-rightpanel',\r\n                originalAction: function() {\r\n                    if (resultContainer.vplVisible) {\r\n                        resultContainer.hide();\r\n                        resultContainer.vplVisible = false;\r\n                        menuButtons.setText('shrightpanel', 'open-rightpanel', VPLUtil.str('shrightpanel'));\r\n                    } else {\r\n                        menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\r\n                        resultContainer.show();\r\n                        resultContainer.vplVisible = true;\r\n                    }\r\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\r\n                },\r\n                bindKey: {\r\n                    win: 'Ctrl-M',\r\n                    mac: 'Ctrl-M'\r\n                }\r\n            });\r\n            var rightpanelstyle = \"position:absolute;right:0;top:60px;z-index:100;margin:3px\";\r\n            tr.append('<span style=\"' + rightpanelstyle + '\">' + menuButtons.getHTML('shrightpanel') + '</span>');\r\n            var rightPanelButton = $('#vpl_ide_shrightpanel');\r\n            menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\r\n\r\n            rightPanelButton.button();\r\n            rightPanelButton.css('padding', '0');\r\n            $('#vpl_ide_shrightpanel.ui-button-text').css('padding', '0');\r\n            rightPanelButton.on('click', function() {\r\n                menuButtons.launchAction('shrightpanel');\r\n            });\r\n            rightPanelButton.hide();\r\n            menu.addClass(\"ui-widget-header ui-corner-all\");\r\n            var menuHtml = \"\";\r\n            menuHtml += menuButtons.getHTML('more');\r\n            menuHtml += menuButtons.getHTML('save');\r\n            menuHtml += \"<span id='vpl_ide_mexecution'>\";\r\n            menuHtml += menuButtons.getHTML('run');\r\n            menuHtml += menuButtons.getHTML('debug');\r\n            menuHtml += menuButtons.getHTML('evaluate');\r\n            menuHtml += menuButtons.getHTML('comments');\r\n            menuHtml += menuButtons.getHTML('console');\r\n            menuHtml += \"</span> \";\r\n            menuHtml += \"<span id='vpl_ide_menuextra'>\";\r\n            menuHtml += \"<span id='vpl_ide_file'>\";\r\n            // TODO autosave not implemented.\r\n            menuHtml += menuButtons.getHTML('filelist');\r\n            menuHtml += menuButtons.getHTML('new');\r\n            menuHtml += menuButtons.getHTML('rename');\r\n            menuHtml += menuButtons.getHTML('delete');\r\n            menuHtml += menuButtons.getHTML('import');\r\n            menuHtml += menuButtons.getHTML('download');\r\n            menuHtml += menuButtons.getHTML('resetfiles');\r\n            menuHtml += menuButtons.getHTML('sort');\r\n            menuHtml += menuButtons.getHTML('multidelete');\r\n            menuHtml += menuButtons.getHTML('fontsize');\r\n            menuHtml += menuButtons.getHTML('theme');\r\n            menuHtml += \"</span> \";\r\n            // TODO print still not implemented.\r\n            menuHtml += \"<span id='vpl_ide_edit'>\";\r\n            menuHtml += menuButtons.getHTML('undo');\r\n            menuHtml += menuButtons.getHTML('redo');\r\n            menuHtml += menuButtons.getHTML('select_all');\r\n            menuHtml += menuButtons.getHTML('find');\r\n            menuHtml += menuButtons.getHTML('find_replace');\r\n            menuHtml += menuButtons.getHTML('next');\r\n            menuHtml += menuButtons.getHTML('saveandeval');\r\n            menuHtml += \"</span> \";\r\n            menuHtml += \"</span> \";\r\n            menuHtml += menuButtons.getHTML('fullscreen') + ' ';\r\n            menuHtml += menuButtons.getHTML('about') + ' ';\r\n            menuHtml += menuButtons.getHTML('user') + ' ';\r\n            menuHtml += menuButtons.getHTML('timeleft');\r\n            menuHtml += '<div class=\"clearfix\"></div>';\r\n            menu.append(menuHtml);\r\n            $('#vpl_ide_more').button();\r\n            $('#vpl_ide_save').button();\r\n            $('#vpl_ide_menuextra').hide();\r\n            $('#vpl_ide_file').controlgroup();\r\n            $('#vpl_ide_edit').controlgroup();\r\n            $('#vpl_ide_mexecution').controlgroup();\r\n            $('#vpl_ide_fullscreen').button();\r\n            $('#vpl_ide_acetheme').button();\r\n            $('#vpl_ide_about').button();\r\n            $('#vpl_ide_user').button().css('float', 'right').hide();\r\n            $('#vpl_ide_timeleft').button().css('float', 'right').hide();\r\n            $('#vpl_menu .ui-button').css('padding', '6px');\r\n            $('#vpl_menu .ui-button-text').css('padding', '0');\r\n            var alwaysActive = ['filelist', 'more', 'fullscreen', 'about', 'resetfiles',\r\n                                'download', 'comments', 'console', 'import',\r\n                                'fontsize', 'timeleft'];\r\n            for (var i = 0; i < alwaysActive.length; i++) {\r\n                menuButtons.enable(alwaysActive[i], true);\r\n            }\r\n            menuButtons.setExtracontent('user', options.username);\r\n            menuButtons.setTimeLeft(options);\r\n            updateMenu = function() {\r\n                var i;\r\n                var file = fileManager.currentFile();\r\n                var nfiles = fileManager.length();\r\n                if (nfiles) {\r\n                    tabs.show();\r\n                } else {\r\n                    tabs.hide();\r\n                }\r\n                if (fileManager.isFileListVisible()) {\r\n                    menuButtons.setText('filelist', 'filelistclose', VPLUtil.str('filelist'));\r\n                } else {\r\n                    menuButtons.setText('filelist', 'filelist', VPLUtil.str('filelist'));\r\n                }\r\n                var modified = fileManager.isModified();\r\n                menuButtons.enable('save', modified);\r\n                var running = VPLUI.monitorRunning();\r\n                if (running) {\r\n                    menuButtons.setText('run', 'running');\r\n                } else {\r\n                    menuButtons.setText('run', 'run');\r\n                }\r\n                menuButtons.enable('run', !running && (!modified || options.example) && isOptionAllowed('run'));\r\n                menuButtons.enable('debug', !running && (!modified || options.example) && isOptionAllowed('debug'));\r\n                menuButtons.enable('evaluate', !running && (!modified || options.example) && isOptionAllowed('evaluate'));\r\n                menuButtons.enable('saveandeval', !running && (!modified || options.example) && isOptionAllowed('evaluate'));\r\n                menuButtons.enable('download', !modified);\r\n                menuButtons.enable('new', nfiles < maxNumberOfFiles);\r\n                menuButtons.enable('sort', nfiles - minNumberOfFiles > 1);\r\n                menuButtons.enable('multidelete', nfiles - minNumberOfFiles > 1);\r\n                menuButtons.enable('theme', true);\r\n                var sel;\r\n                if (!file || nfiles === 0) {\r\n                    sel = ['rename', 'delete', 'undo', 'redo', 'select_all', 'find', 'find_replace', 'next'];\r\n                    for (i = 0; i < sel.length; i++) {\r\n                        menuButtons.enable(sel[i], false);\r\n                    }\r\n                    return;\r\n                }\r\n                menuButtons.enable('rename', file.getId() >= minNumberOfFiles && nfiles !== 0);\r\n                menuButtons.enable('delete', file.getId() >= minNumberOfFiles && nfiles !== 0);\r\n                menuButtons.enable('undo', file.hasUndo());\r\n                menuButtons.enable('redo', file.hasRedo());\r\n                menuButtons.enable('select_all', file.hasSelectAll());\r\n                menuButtons.enable('find', file.hasFind());\r\n                menuButtons.enable('find_replace', file.hasFindReplace());\r\n                menuButtons.enable('next', file.hasNext());\r\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\r\n            };\r\n\r\n            executionActions = {\r\n                'open': updateMenu,\r\n                'close': updateMenu,\r\n                'getConsole': function() {\r\n                    return lastConsole;\r\n                },\r\n                'setResult': self.setResult,\r\n                'ajaxurl': options.ajaxurl,\r\n                'run': function(content, coninfo, ws) {\r\n                    var parsed = /^([^:]*):?(.*)/.exec(content);\r\n                    var type = VPLUtil.sanitizeText(parsed[1]);\r\n                    console.log('VPLIDE terminaltype');\r\n                    console.log(type);\r\n                    if (type == 'terminal' || type == 'webterminal') {\r\n                        if (lastConsole && lastConsole.isOpen()) {\r\n                            lastConsole.close();\r\n                        }\r\n                        lastConsole = terminal;\r\n                        terminal.connect(coninfo.executionURL, function() {\r\n                            ws.close();\r\n                            focusCurrentFile();\r\n                        });\r\n                        if (type == 'webterminal') {\r\n                            var URLfavicon = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse;\r\n                            URLfavicon += \"/favicon.ico\";\r\n                            var imgFavicon = $('<img>');\r\n                            imgFavicon.attr('src', URLfavicon);\r\n                            imgFavicon.attr('style', 'display:none');\r\n                            $('body').append(imgFavicon);\r\n                        }\r\n                    } else if (type == 'vnc') {\r\n                        if (lastConsole && lastConsole.isOpen()) {\r\n                            lastConsole.close();\r\n                        }\r\n                        lastConsole = VNCClient;\r\n                        VNCClient.connect(coninfo.secure, coninfo.server, coninfo.portToUse, coninfo.VNCpassword,\r\n                                coninfo.executionPath, function() {\r\n                                    ws.close();\r\n                                    focusCurrentFile();\r\n                                });\r\n                    } else if (type == \"browser\") {\r\n                        var URL = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse + \"/\";\r\n                        URL += VPLUtil.sanitizeText(parsed[2]) + \"/httpPassthrough\";\r\n                        if (isTeacher) {\r\n                            URL += \"?private\";\r\n                        }\r\n                        var message = '<a href=\"' + URL + '\" target=\"_blank\">';\r\n                        message += VPLUtil.str('open') + '</a>';\r\n                        var options = {\r\n                            width: 200,\r\n                            icon: 'run',\r\n                            title: VPLUtil.str('run'),\r\n                        };\r\n                        showMessage(message, options);\r\n                    } else {\r\n                        VPLUtil.log(\"Type of run error \" + content, true);\r\n                    }\r\n                },\r\n                'lastAction': false,\r\n                'getLastAction': function() {\r\n                    var ret = this.lastAction;\r\n                    this.lastAction = false;\r\n                    return ret;\r\n                },\r\n                'setLastAction': function(action) {\r\n                    this.lastAction = action;\r\n                }\r\n            };\r\n\r\n            tabs.on(\"tabsactivate\", function() {\r\n                fileManager.currentFile('focus');\r\n                VPLUtil.delay('updateMenu', updateMenu);\r\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\r\n            });\r\n\r\n            // VPLIDE resize view control.\r\n            var jw = $(window);\r\n            jw.on('resize', autoResizeTab);\r\n            // Save? before exit.\r\n            if (!options.example) {\r\n                jw.on('beforeunload', function() {\r\n                    if (fileManager.isModified()) {\r\n                        return str('changesNotSaved');\r\n                    }\r\n                    return undefined;\r\n                });\r\n            }\r\n            fileManager = new FileManager();\r\n\r\n            autoResizeTab();\r\n            // Checks menu width every 1 sec as it can change without event.\r\n            (function() {\r\n                var oldMenuWidth = menu.width();\r\n                /**\r\n                 * Checks menu width change\r\n                 */\r\n                function checkMenuWidth() {\r\n                    var newMenuWidth = menu.width();\r\n                    if (oldMenuWidth != newMenuWidth) {\r\n                        oldMenuWidth = newMenuWidth;\r\n                        autoResizeTab();\r\n                    }\r\n                }\r\n                checkMenuWidth();\r\n                setInterval(checkMenuWidth, 1000);\r\n            }());\r\n            fileManager.resetModified();\r\n            VPLUI.requestAction('load', 'loading', options, options.loadajaxurl)\r\n            .done(function(response) {\r\n                var allOK = true;\r\n                var files = response.files;\r\n                var showFileList = false;\r\n                for (var i = 0; i < files.length; i++) {\r\n                    var file = files[i];\r\n                    var r = fileManager.addFile(file, false, updateMenu, showErrorMessage);\r\n                    if (r) {\r\n                        r.resetModified();\r\n                        if (i < minNumberOfFiles || files.length <= 5) {\r\n                            fileManager.open(r);\r\n                        } else {\r\n                            showFileList = true;\r\n                        }\r\n                    } else {\r\n                        allOK = false;\r\n                    }\r\n                }\r\n                tabs.tabs('option', 'active', 0);\r\n\r\n                if (response.compilationexecution) {\r\n                    self.setResult(response.compilationexecution, false);\r\n                }\r\n                menuButtons.setTimeLeft(response);\r\n                if (response.comments > '') {\r\n                    $('#vpl_ide_input_comments').val(response.comments);\r\n                }\r\n                if (allOK) {\r\n                    fileManager.resetModified();\r\n                } else {\r\n                    fileManager.setModified();\r\n                }\r\n                if (fileManager.length() === 0 && maxNumberOfFiles > 0) {\r\n                    menuButtons.getAction('new')();\r\n                } else if (!options.saved) {\r\n                    fileManager.setModified();\r\n                }\r\n                fileManager.setFontSize(options.fontSize);\r\n                fileManager.setVersion(response.version);\r\n                fileManager.fileListVisible(showFileList);\r\n                VPLUtil.afterAll('AfterLoadFiles', function() {\r\n                    updateMenu();\r\n                    autoResizeTab();\r\n                    adjustTabsTitles(true);\r\n                });\r\n            })\r\n            .fail(showErrorMessage);\r\n        };\r\n        window.VPLIDE = VPLIDE;\r\n        return {\r\n            init: function(rootId, options) {\r\n                vplIdeInstance = new VPLIDE(rootId, options);\r\n            }\r\n        };\r\n    }\r\n);\r\n"],"names":["define","$","jqui","VPLUtil","VPLUI","VPLFile","VPLIDEButtons","VPLTerminal","VPLVNCClient","VPLIDE","vplIdeInstance","rootId","options","fileManager","adjustTabsTitles","autoResizeTab","showErrorMessage","updateMenu","executionActions","self","this","minNumberOfFiles","minfiles","maxNumberOfFiles","maxfiles","restrictedEdit","restrictededitor","example","readOnly","isTeacher","readOnlyFiles","fullScreen","scrollBarWidth","str","rootObj","append","M","cfg","wwwroot","Error","activateModification","optionsToCheck","loadajaxurl","ajaxurl","new","rename","delete","comments","console","acetheme","sort","multidelete","import","saveandeval","isOptionAllowed","op","dragoverHandler","e","originalEvent","dataTransfer","dropEffect","preventDefault","dropHandler","stopImmediatePropagation","dt","files","length","readSelectedFiles","file","addFile","fileListVisibleIfNeeded","restrictedPaste","stopPropagation","fontSize","parseInt","on","menu","menuButtons","tr","fileListContainer","fileList","fileListContent","tabsUl","tabs","resultContainer","result","renameDiretoryAction","doNothing","vplMinWidth","updateEvaluationNumber","res","nevaluations","text","reductionbyevaluation","freeevaluations","setExtracontent","lastResult","getTerminal","terminal","setResultGrade","content","raw","titleclass","find","titleTag","replaceWith","setResultTab","name","contentclass","contentTag","HTMLcontent","contents","html","setResult","go","i","getFiles","fileNames","getFileName","clearAnnotations","hasContent","gradeShow","formated","show","grade","sanitizeText","variables","processResult","compilation","evaluation","execution","window","VPLDescription","MathJax","math","Hub","Queue","vplVisible","accordion","anot","getAnnotations","j","type","gotoFile","row","hide","delay","heightStyle","header","animate","beforeActivate","event","ui","newHeader","hasClass","width","gotoFileLink","currentTarget","addClass","iconFolder","tabsAir","getTabsAir","outerWidth","resizeTabWidth","maxWidth","diffLeft","position","left","originalPosition","resizable","vplOriginalWidth","diffWidth","size","originalSize","currentFile","resizableOptions","containment","resize","start","off","stop","handles","focusCurrentFile","center","newWidth","tabsUlWidth","last","children","parentScrollLeft","parent","scrollLeft","fileTab","getTabNameId","scroll","finish","index","oldWidth","planb","disable","css","right","rel","wfl","newHeight","outerHeight","offset","top","height","panelHeight","resizeHeight","dialogbaseOptions","extend","close","showMessage","message","dialogNew","newFileHandler","keyCode","dialog","val","encoding","newfile","open","getTabPos","getId","focus","dialogButtons","title","buttons","setDialogTitleIcon","dialogRename","renameHandler","renameFile","dialogRenameDirectory","renameDirectoryHandler","renameDirectory","target","hasAttribute","dirname","getAttribute","dialogComments","oldStudentComments","setModified","aboutDialog","OKButtons","shortcutDialog","getShortcuts","next","filter","button","dialogSort","dialogSortButtons","regNoNumber","sorted","newOrder","each","orig","id","replace","push","list","sortable","items","placeholder","item","removeClass","disableSelection","maxHeight","dialogMultidelete","dialogMultideleteButtons","prop","toDeleteList","label","data","deleteFile","updateFileList","dialogFontsize","fontsizeSlider","dialogFontFizeButtons","value","slider","setFontSize","ajax","async","url","JSON","stringify","contentType","dataType","getFontSize","min","max","change","dialogAceTheme","acethemeSelect","dialogAceThemeButtons","setTheme","setUserPreferences","aceTheme","modal","getTheme","VNCClient","lastConsole","fileSelect","resetFiles","requestAction","done","response","fileName","hasOwnProperty","fail","executionRequest","action","acting","isConnected","webSocketMonitor","runAction","XGEOMETRY","getCanvasSize","currentFileName","getCurrentFileName","debugAction","evaluateAction","add","originalAction","fileListVisible","isFileListVisible","bindKey","win","mac","filename","ok","icon","closeFile","trigger","print","editorName","setText","scrollTop","username","setTimeout","location","download","getFilesToSave","version","getVersion","postMaxSize","doSave","requestsconfirmation","question","yes","resetModified","setVersion","setTimeLeft","monitorRunning","processid","getProcessId","setLastAction","doSaveAndEval","href","redirecturl","isOpen","toggleTimeLeft","tag","is","getHTML","rightPanelButton","launchAction","menuHtml","controlgroup","alwaysActive","enable","nfiles","modified","isModified","sel","running","hasUndo","hasRedo","hasSelectAll","hasFind","hasFindReplace","hasNext","coninfo","ws","parsed","exec","log","connect","executionURL","URLfavicon","secure","server","portToUse","imgFavicon","attr","VNCpassword","executionPath","URL","ret","lastAction","jw","openFiles","fileNameIncluded","checkName","toLowerCase","nameMod","indexOf","twoBlockly","oldname","newname","isBlockly","v","generateFileList","fileNameExists","localClipboard","setClipboard","t","getClipboard","fileId","theme","addTab","fid","hlink","removeTab","remove","isReadOnly","pos","setGetkeys","hideIDEStatus","ptab","splice","getFilePosById","isClosed","b","showError","validPath","setContent","getUniqueId","extendToBinary","extendToBlockly","extendToCodeEditor","setFileName","isBinary","fileExtension","getContent","gotoFileName","directoryExists","dirName","startsWith","oldName","newName","oldNameLength","checkDirName","newFileNames","substr","oldNames","arguments","fun","args","Array","prototype","slice","shift","apply","currentPos","getFileTab","l","gotoLine","a","fname","fpos","line","getFile","getDirectoryStructure","structure","isDir","path","addFilePath","split","curdir","pathdir","p","part","lines","lister","dir","indent","fd","sname","attrs","dirline","iconModified","iconReadOnly","iconRequired","getAction","oldMenuWidth","checkMenuWidth","newMenuWidth","setInterval","allOK","showFileList","r","compilationexecution","saved","afterAll","init"],"mappings":"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"}