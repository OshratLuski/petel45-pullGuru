{"version":3,"file":"vplutil.min.js","sources":["../src/vplutil.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\r\n//\r\n// VPL for Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// VPL for Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tools for the VPL IDE\r\n *\r\n * @copyright 2016 Juan Carlos Rodríguez-del-Pino\r\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\r\n */\r\n\r\n/* globals Blockly */\r\n/* globals ace */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'core/log',\r\n    ],\r\n    function($, log) {\r\n        var VPLUtil = {};\r\n        VPLUtil.doNothing = $.noop;\r\n        VPLUtil.returnFalse = function() {\r\n            return false;\r\n        };\r\n        VPLUtil.returnTrue = function() {\r\n            return true;\r\n        };\r\n        var debugMode = false;\r\n        VPLUtil.log = function(m, forced) {\r\n            if (debugMode || forced) {\r\n                log.debug(m);\r\n            }\r\n        };\r\n        VPLUtil.setUserPreferences = function(pref) {\r\n            $.ajax({\r\n                async: true,\r\n                type: \"POST\",\r\n                url: M.cfg.wwwroot + '/question/type/savpl/editor/userpreferences.json.php',\r\n                'data': JSON.stringify(pref),\r\n                contentType: \"application/json; charset=utf-8\",\r\n                dataType: \"json\"\r\n            });\r\n        };\r\n        VPLUtil.getUserPreferences = function(func) {\r\n            $.ajax({\r\n                async: true,\r\n                type: \"POST\",\r\n                url: M.cfg.wwwroot + '/question/type/savpl/editor/userpreferences.json.php',\r\n                'data': JSON.stringify({getPreferences: true}),\r\n                contentType: \"application/json; charset=utf-8\",\r\n                dataType: \"json\"\r\n            }).done(func);\r\n        };\r\n        VPLUtil.sanitizeHTML = function(t) {\r\n            if (typeof t == 'undefined' || t.replace(/^\\s+$/g, '') == '') {\r\n                return '';\r\n            }\r\n            return $('<div>' + t + '</div>').html();\r\n        };\r\n        VPLUtil.sanitizeText = function(s) {\r\n            if (typeof s == 'undefined' || s.replace(/^\\s+$/g, '') == '') {\r\n                return '';\r\n            }\r\n            return s.replace(/&/g, \"&amp;\")\r\n                    .replace(/</g, \"&lt;\")\r\n                    .replace(/>/g, \"&gt;\")\r\n                    .replace(/\"/g, \"&quot;\")\r\n                    .replace(/'/g, \"&#39;\");\r\n        };\r\n\r\n        VPLUtil.setProtocol = function(coninfo) {\r\n            var secure;\r\n            if (coninfo.securePort == 0 || coninfo.port == 0) {\r\n                secure = coninfo.port == 0;\r\n            } else {\r\n                switch (coninfo.wsProtocol) {\r\n                    case 'always_use_wss':\r\n                        secure = true;\r\n                        break;\r\n                    case 'always_use_ws':\r\n                        secure = false;\r\n                        break;\r\n                    default:\r\n                        secure = window.location.protocol == 'https:';\r\n                }\r\n            }\r\n            var URLBase = (secure ? 'wss://' : 'ws://') + coninfo.server;\r\n            coninfo.secure = secure;\r\n            coninfo.portToUse = secure ? coninfo.securePort : coninfo.port;\r\n            URLBase += ':' + coninfo.portToUse + '/';\r\n            coninfo.monitorURL = URLBase + coninfo.monitorPath;\r\n            coninfo.executionURL = URLBase + coninfo.executionPath;\r\n        };\r\n        VPLUtil.ArrayBuffer2String = function(data) {\r\n            var view = new Uint8Array(data);\r\n            var chunks = [];\r\n            var chunkSize = 32000;\r\n            var i, len;\r\n            for (i = 0, len = view.length; i < len; i += chunkSize) {\r\n                chunks.push(String.fromCharCode.apply(String, view.subarray(i, Math.min(i + chunkSize, len))));\r\n            }\r\n            return chunks.join('');\r\n        };\r\n        VPLUtil.String2ArrayBuffer = function(data) {\r\n            var len = data.length;\r\n            var ret = new ArrayBuffer(len);\r\n            var u8 = new Uint8Array(ret);\r\n            for (var i = 0; i < len; i++) {\r\n                u8[i] = data.charCodeAt(i);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        (function() {\r\n            var fileUniqueId = 0;\r\n            VPLUtil.getUniqueId = function() {\r\n                return fileUniqueId++;\r\n            };\r\n        })();\r\n        (function() {\r\n            var regExt = /\\.([^.]*)$/;\r\n            var regImg = /^(gif|jpg|jpeg|png|ico)$/i;\r\n            var regBin = /^(zip|jar|pdf|tar|bin|7z|arj|deb|gzip|rar|rpm|dat|db|dll|rtf|doc|docx|odt|exe|com)$/i;\r\n            var regBlk = /^blockly[0123]?$/;\r\n            VPLUtil.fileExtension = function(fileName) {\r\n                var res = regExt.exec(fileName);\r\n                return res !== null ? res[1] : '';\r\n            };\r\n            VPLUtil.isImage = function(fileName) {\r\n                return regImg.test(VPLUtil.fileExtension(fileName));\r\n            };\r\n            VPLUtil.isBinary = function(fileName) {\r\n                return VPLUtil.isImage(fileName) || regBin.test(VPLUtil.fileExtension(fileName));\r\n            };\r\n            VPLUtil.isBlockly = function(fileName) {\r\n                return regBlk.test(VPLUtil.fileExtension(fileName));\r\n            };\r\n            var regInvalidFileName = /[\\cA-\\cZ]|[:-@]|[{-~]|\\\\|\\[|\\]|[/^`´]|^-|^ | $|\\.\\./;\r\n            VPLUtil.validFileName = function(fileName) {\r\n                if (fileName.length < 1) {\r\n                    return false;\r\n                }\r\n                if (fileName.length > 128) {\r\n                    return false;\r\n                }\r\n                return !(regInvalidFileName.test(fileName));\r\n            };\r\n        })();\r\n        VPLUtil.getCurrentTime = function() {\r\n            return parseInt((new Date()).valueOf() / 1000);\r\n        };\r\n        VPLUtil.encodeBinary = function(name, data) {\r\n            if (!VPLUtil.isBinary(name)) {\r\n                return btoa(unescape(encodeURIComponent(data)));\r\n            }\r\n            return btoa(VPLUtil.ArrayBuffer2String(data));\r\n        };\r\n\r\n        VPLUtil.decodeBinary = function(name, data) {\r\n            var decoded = atob(data);\r\n            if (!VPLUtil.isBinary(name)) {\r\n                return decodeURIComponent(escape(decoded));\r\n            }\r\n            return VPLUtil.String2ArrayBuffer(decoded);\r\n        };\r\n\r\n        VPLUtil.validPath = function(path) {\r\n            if (path.length > 256) {\r\n                return false;\r\n            }\r\n            var dirs = path.split(\"/\");\r\n            for (var i = 0; i < dirs.length; i++) {\r\n                if (!VPLUtil.validFileName(dirs[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        VPLUtil.getFileName = function(path) {\r\n            var dirs = path.split(\"/\");\r\n            return dirs[dirs.length - 1];\r\n        };\r\n        VPLUtil.dataFromURLData = function(data) {\r\n            return data.substr(data.indexOf(',') + 1);\r\n        };\r\n\r\n        (function() {\r\n            var MIME = {\r\n                'gif': 'image/gif',\r\n                'jpg': 'image/jpeg',\r\n                'jpeg': 'image/jpeg',\r\n                'png': 'image/png',\r\n                'ico': 'image/vnd.microsoft.icon',\r\n                'pdf': 'application/pdf'\r\n            };\r\n            VPLUtil.getMIME = function(fileName) {\r\n                var ext = VPLUtil.fileExtension(fileName);\r\n                if (ext in MIME) {\r\n                    return MIME[ext];\r\n                }\r\n                return 'application/octet-stream';\r\n            };\r\n            VPLUtil.getTimeLeft = function(timeLeft) {\r\n                var res = '';\r\n                var minute = 60;\r\n                var hour = 60 * minute;\r\n                var day = 24 * hour;\r\n                if (timeLeft < 0) {\r\n                    res += '-';\r\n                    timeLeft = -timeLeft;\r\n                }\r\n                var timePending = timeLeft;\r\n                var days = parseInt(timePending / day);\r\n                timePending -= days * day;\r\n                if (days !== 0) {\r\n                    res += days + 'T';\r\n                }\r\n                var hours = parseInt(timePending / hour);\r\n                timePending -= hours * hour;\r\n                var minutes = parseInt(timePending / minute);\r\n                timePending -= minutes * minute;\r\n                var seconds = parseInt(timePending);\r\n                res += ('00' + hours).substr(-2) + ':';\r\n                res += ('00' + minutes).substr(-2);\r\n                if (timeLeft < hour) {\r\n                    res += ':' + ('00' + seconds).substr(-2);\r\n                }\r\n                return res;\r\n            };\r\n        })();\r\n        (function() {\r\n            var maplang = {\r\n                'Abap': 'abap',\r\n                'ABC': 'abc',\r\n                'Ada': 'ada',\r\n                'ActionScript': 'actionscript',\r\n                'x86 assembly': 'assembly_x86',\r\n                'Bash': 'sh',\r\n                'Batch': 'batchfile',\r\n                'C': 'c_cpp',\r\n                'C++': 'c_cpp',\r\n                'VPL cases': 'cases',\r\n                'Cobol': 'cobol',\r\n                'CoffeeScript': 'coffee',\r\n                'Clojure': 'clojure',\r\n                'C#': 'csharp',\r\n                'C# project': 'xml',\r\n                'CSS': 'css',\r\n                'D': 'd',\r\n                'Dart': 'dart',\r\n                'Eiffel': 'eiffel',\r\n                'Erlang': 'erlang',\r\n                'F#': 'fsharp',\r\n                'F# project': 'xml',\r\n                'Fortran': 'fortran',\r\n                'Go': 'golang',\r\n                'Groovy': 'groovy',\r\n                'Dot': 'dot',\r\n                'Haskell': 'haskell',\r\n                'HTML': 'html',\r\n                'Haxe': 'haxe',\r\n                'Java': 'java',\r\n                'Julia': 'julia',\r\n                'JavaScript': 'javascript',\r\n                'JSON': 'json',\r\n                'JSP': 'jsp',\r\n                'JSX': 'jsx',\r\n                'Kotlin': 'kotlin',\r\n                'Matlab': 'matlab',\r\n                'Markdown': 'markdown',\r\n                'Less': 'less',\r\n                'LISP': 'lisp',\r\n                'Lua': 'lua',\r\n                'Pascal': 'pascal',\r\n                'Perl': 'perl',\r\n                'PHP': 'php',\r\n                'Prolog': 'prolog',\r\n                'PSeInt': 'pseint',\r\n                'Python': 'python',\r\n                'R': 'r',\r\n                'Ruby': 'ruby',\r\n                'Rust': 'rust',\r\n                'SASS': 'sass',\r\n                'Scala': 'scala',\r\n                'Scheme': 'scheme',\r\n                'SCSS': 'scss',\r\n                'Bash/shell': 'sh',\r\n                'Swift': 'swift',\r\n                'SQL': 'sql',\r\n                'SVG': 'svg',\r\n                'TeX': 'tex',\r\n                'tcl': 'tcl',\r\n                'TypeScript': 'typescript',\r\n                'Twig': 'twig',\r\n                'VBScript': 'vbscript',\r\n                'Verilog': 'verilog',\r\n                'VisualBasic': 'vbscript',\r\n                'VisualBasic project': 'xml',\r\n                'VHDL': 'vhdl',\r\n                'XML': 'xml',\r\n                'Yaml': 'yaml'\r\n            };\r\n            var mapname = {\r\n                'abap': 'Abap',\r\n                'abc': 'ABC',\r\n                'ada': 'Ada', 'ads': 'Ada', 'adb': 'Ada',\r\n                'as': 'ActionScript', 'as3': 'ActionScript',\r\n                'asm': 'x86 assembly',\r\n                'bash': 'Bash',\r\n                'bat': 'Batch',\r\n                'c': 'C', 'C': 'C++', 'cc': 'C++', 'cpp': 'C++', 'c++': 'C++',\r\n                'hxx': 'C++', 'h': 'C', 'H': 'C++',\r\n                'cases': 'VPL cases',\r\n                'cbl': 'Cobol', 'cob': 'Cobol',\r\n                'coffee': 'CoffeeScript',\r\n                'clj': 'Clojure',\r\n                'cs': 'C#',\r\n                'csproj': 'C# project',\r\n                'css': 'CSS',\r\n                'd': 'D',\r\n                'dart': 'Dart',\r\n                'e': 'Eiffel',\r\n                'erl': 'Erlang', 'hrl': 'Erlang',\r\n                'f': 'Fortran', 'f77': 'Fortran', 'f90': 'Fortran', 'for': 'Fortran',\r\n                'fs': 'F#',\r\n                'fsproj': 'F# project',\r\n                'go': 'Go',\r\n                'groovy': 'Groovy',\r\n                'gv': 'Dot',\r\n                'hs': 'Haskell',\r\n                'htm': 'HTML', 'html': 'HTML',\r\n                'hx': 'Haxe',\r\n                'java': 'Java',\r\n                'jl': 'Julia',\r\n                'js': 'JavaScript',\r\n                'json': 'JSON',\r\n                'jsp': 'JSP',\r\n                'jsx': 'JSX',\r\n                'kt': 'Kotlin', 'kts': 'Kotlin',\r\n                'm': 'Matlab',\r\n                'md': 'Markdown',\r\n                'less': 'Less',\r\n                'lisp': 'LISP', 'lsp': 'LISP',\r\n                'lua': 'Lua',\r\n                'pas': 'Pascal', 'p': 'Pascal',\r\n                'perl': 'Perl', 'prl': 'Perl',\r\n                'php': 'PHP',\r\n                'pro': 'Prolog', 'pl': 'Prolog',\r\n                'psc': 'pseint',\r\n                'py': 'Python',\r\n                'R': 'R', 'r': 'R',\r\n                'rb': 'Ruby', 'ruby': 'Ruby',\r\n                'rs': 'Rust',\r\n                's': 'x86 assembly',\r\n                'sass': 'SASS',\r\n                'scala': 'Scala',\r\n                'scm': 'Scheme',\r\n                'scss': 'SCSS',\r\n                'sh': 'Bash/shell',\r\n                'swift': 'Swift',\r\n                'sql': 'SQL',\r\n                'svg': 'SVG',\r\n                'tex': 'TeX',\r\n                'tcl': 'TCL',\r\n                'ts': 'TypeScript',\r\n                'twig': 'Twig',\r\n                'vb': 'VisualBasic',\r\n                'vbproj': 'VisualBasic project',\r\n                'vbs': 'VBSscript',\r\n                'v': 'Verilog', 'vh': 'Verilog',\r\n                'vhd': 'VHDL', 'vhdl': 'VHDL',\r\n                'xml': 'XML',\r\n                'yaml': 'YAML'\r\n            };\r\n            VPLUtil.getLangNames = function() {\r\n                return Object.assign({}, mapname);\r\n            };\r\n            VPLUtil.langType = function(ext) {\r\n                if (ext in mapname) {\r\n                    return maplang[mapname[ext]];\r\n                }\r\n                return 'plain_text';\r\n            };\r\n            VPLUtil.langName = function(ext) {\r\n                if (ext in mapname) {\r\n                    return mapname[ext];\r\n                }\r\n                return 'Plain text';\r\n            };\r\n        })();\r\n        (function() {\r\n            var i18n = {};\r\n            var strreg = /\\{\\\\*\\$a\\\\*}/g;\r\n            VPLUtil.str = function(key, parm) {\r\n                if (!i18n[key]) {\r\n                    return '{' + key + '}';\r\n                }\r\n                if (typeof parm != 'undefined') {\r\n                    return i18n[key].replace(strreg, parm);\r\n                } else {\r\n                    return i18n[key];\r\n                }\r\n            };\r\n            VPLUtil.setStr = function(newi18n) {\r\n                for (var key in newi18n) {\r\n                    if (newi18n.hasOwnProperty(key)) {\r\n                        i18n[key] = newi18n[key];\r\n                    }\r\n                }\r\n            };\r\n            VPLUtil.setStr(window.VPLi18n);\r\n        })();\r\n        (function() {\r\n            var delayedActions = {};\r\n            var afterAllActions = {};\r\n            var shortTimeout = 20;\r\n            var longTimeout = 100;\r\n            var numberDelayed = 0;\r\n            var internalDelay = function(timeout, id, func, arg1, arg2) {\r\n                if (typeof delayedActions[id] != 'undefined') {\r\n                    clearTimeout(delayedActions[id]);\r\n                    numberDelayed--;\r\n                }\r\n                numberDelayed++;\r\n                delayedActions[id] = setTimeout(function() {\r\n                    numberDelayed--;\r\n                    func(arg1, arg2);\r\n                    delete delayedActions[id];\r\n                }, timeout);\r\n            };\r\n            VPLUtil.delay = function(id, func, arg1, arg2) {\r\n                internalDelay(shortTimeout, id, func, arg1, arg2);\r\n            };\r\n            VPLUtil.longDelay = function(id, func, arg1, arg2) {\r\n                internalDelay(longTimeout, id, func, arg1, arg2);\r\n            };\r\n            var setAfterTimeout = function(id, func, arg1, arg2) {\r\n                if (typeof afterAllActions[id] != 'undefined') {\r\n                    clearTimeout(afterAllActions[id]);\r\n                }\r\n                afterAllActions[id] = setTimeout(function() {\r\n                        if (numberDelayed > 0) {\r\n                            afterAllActions[id] = setAfterTimeout(id, func, arg1, arg2);\r\n                        } else {\r\n                             func(arg1, arg2);\r\n                             delete afterAllActions[id];\r\n                        }\r\n                    }, longTimeout);\r\n            };\r\n            VPLUtil.afterAll = function(id, func, arg1, arg2) {\r\n                setAfterTimeout(id, func, arg1, arg2);\r\n            };\r\n        })();\r\n        VPLUtil.supportWebSocket = function() {\r\n            if (\"WebSocket\" in window) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        VPLUtil.isAndroid = function() {\r\n            return window.navigator.userAgent.indexOf('Android') > -1;\r\n        };\r\n        VPLUtil.isFirefox = function() {\r\n            return window.navigator.userAgent.indexOf('Firefox') > -1;\r\n        };\r\n        VPLUtil.isMac = function() {\r\n            return window.navigator.userAgent.indexOf('Mac') > -1;\r\n        };\r\n        (function() {\r\n            var lastProccessID = -1;\r\n            VPLUtil.setProcessId = function(id) {\r\n                lastProccessID = id;\r\n            };\r\n            VPLUtil.getProcessId = function() {\r\n                return lastProccessID;\r\n            };\r\n        })();\r\n\r\n        /**\r\n         * Run a command in a execution server with input/output using a WebSocket\r\n         * @param {string} URL to VPL editor services in Moodle server\r\n         * @param {string} command Command to run in execution server\r\n         * @param {array.<{name: string, contents: string, encoding: number}>} files\r\n         *         array of objects name, contents and encoding 0 => UTF-8, 1 => Base64\r\n         * @returns {object} deferred.\r\n         *         Use done() to set handler to receive the WebSocket. Use fail to set error handler.\r\n         */\r\n        VPLUtil.directRun = function(URL, command, files) {\r\n            var deferred = $.Deferred();\r\n            $.ajax({\r\n                async: true,\r\n                type: \"POST\",\r\n                url: URL + 'directrun',\r\n                'data': JSON.stringify({\"command\": command, \"files\": files}),\r\n                contentType: \"application/json; charset=utf-8\",\r\n                dataType: \"json\"\r\n            }).done(function(result) {\r\n                if (!result.success) {\r\n                    deferred.reject(result.error);\r\n                } else {\r\n                    var response = result.response;\r\n                    VPLUtil.setProtocol(response);\r\n                    var ws = new WebSocket(response.executionURL);\r\n                    log.debug('Conecting with:' + response.executionURL);\r\n                    deferred.resolve({processid: response.processid, homepath: response.homepath, connection: ws});\r\n                }\r\n            }).fail(function(jqXHR, textStatus, errorThrown) {\r\n                var message = 'Connection fail' + ': ' + textStatus;\r\n                if (errorThrown.message != undefined) {\r\n                    message += ': ' + errorThrown.message;\r\n                }\r\n                log.debug(message);\r\n                deferred.reject(message);\r\n            });\r\n            return deferred;\r\n        };\r\n        /**\r\n         * Function to experiment with Direct run.\r\n         * Limits: one data send and 10 messages received and 10 minutes connected\r\n         * @param {string} URL to server\r\n         * @param {string} command Command to prepare direct run. Execution of command must generate vpl_execution\r\n         * @param {object} data to send to server\r\n         */\r\n         VPLUtil.directRunTest = function(URL, command, data) {\r\n            var files = [{name: 'a.c', contents: 'int main(){return 0;}', encoding: 0},\r\n                         {name: 'b.c', contents: 'int f(){return 1;}', encoding: 0}];\r\n            VPLUtil.directRun(URL, command, files)\r\n                .done(function(result) {\r\n                    var mcount = 0;\r\n                    result.connection.onopen = function() {\r\n                        log.debug(\"Ws open \" + result.homepath + \" processid \" + result.processid);\r\n                        if (data != undefined) {\r\n                            result.connection.send(data);\r\n                        }\r\n                        setTimeout(function() { //  Close test if open for more than 10 minutes.\r\n                            result.connection.close();\r\n                        }, 60 * 10 * 1000);\r\n                    };\r\n                    result.connection.onmessage = function(event) {\r\n                        log.debug(\"WS Message (\" + ++mcount + \"): \" + event.data);\r\n                        if (mcount >= 10) {\r\n                            result.connection.close();\r\n                        }\r\n                    };\r\n                    result.connection.onerror = function(event) {\r\n                        log.debug(\"WS error: \" + event);\r\n                    };\r\n                    result.connection.onclose = function(event) {\r\n                        log.debug(\"WS close: \" + event.code + \" \" + event.reason);\r\n                    };\r\n                })\r\n                .fail(function(message) {\r\n                    log.debug(\"Direct run fail. URL: \" + URL + \" command: \" + command + \" message: \" + message);\r\n                });\r\n        };\r\n        VPLUtil.processResult = function(text, filenames, sh, noFormat, folding) {\r\n            if (typeof text == 'undefined' || text.replace(/^\\s+$/gm, '') == '') {\r\n                return '';\r\n            }\r\n            /**\r\n             * Adds escape to the text\r\n             * @param {string} t text to escape\r\n             * @returns {string} result\r\n             */\r\n            function escReg(t) {\r\n                return t.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/, \"\\\\$&\");\r\n            }\r\n            var regtitgra = /\\([-]?[\\d]+[.]?[\\d]*\\)\\s*$/;\r\n            var regtit = /^-.*/;\r\n            var regcas = /^\\s*>/;\r\n            // TODO adds error? use first anotation for icon.\r\n            var regError = new RegExp('\\\\[err\\\\]|error|' + escReg(VPLUtil.str('error')), 'i');\r\n            var regWarning = new RegExp('\\\\[warn\\\\]|warning|note|' + escReg(VPLUtil.str('warning')), 'i');\r\n            var regInformation = new RegExp('\\\\[info\\\\]|information', 'i');\r\n            var state = '';\r\n            var html = '';\r\n            var comment = '';\r\n            var case_ = '';\r\n            var lines = text.split(/\\r\\n|\\n|\\r/);\r\n            var regFiles = [];\r\n            var lastAnotation = false;\r\n            var lastAnotationFile = false;\r\n            var afterTitle = false;\r\n            /**\r\n             * Generate attribute href for the editor in sh\r\n             * @param {int} i Index of sh\r\n             * @return {string} href\r\n             */\r\n            function getHref(i) {\r\n                if (typeof sh[i].getTagId === 'undefined') {\r\n                    return 'href=\"#\" ';\r\n                } else {\r\n                    return 'href=\"#' + sh[i].getTagId() + '\" ';\r\n                }\r\n            }\r\n            (function() {\r\n                for (var i = 0; i < filenames.length; i++) {\r\n                    var regf = escReg(filenames[i]);\r\n                    // Filename:N, filename(N), filename N, filename line N, filename on line N.\r\n                    // N=#|#:#|#,#.\r\n                    var reg = \"(^| |/)\" + regf + \"( on line | line |:|\\\\()(\\\\d+)(:|,)?(\\\\d+)?(\\\\))?\";\r\n                    regFiles[i] = new RegExp(reg, 'm');\r\n                }\r\n            })();\r\n            /**\r\n             * Generate the file links in the comments to point to the files\r\n             * @param {string} line Line to modify\r\n             * @param {string} rawline Text to include in annotation\r\n             * @returns {string} The line modified\r\n             */\r\n            function genFileLinks(line, rawline) {\r\n                var used = false;\r\n                for (var i = 0; i < regFiles.length; i++) {\r\n                    var reg = regFiles[i];\r\n                    var match;\r\n                    while ((match = reg.exec(line)) !== null) {\r\n                        var anot = sh[i].getAnnotations();\r\n                        // Annotation format {row:,column:,raw:,type:error,warning,info;text} .\r\n                        lastAnotationFile = i;\r\n                        used = true;\r\n                        var type;\r\n                        if (line.search(regError) > -1) {\r\n                            type = 'error';\r\n                        } else if (line.search(regWarning) > -1) {\r\n                            type = 'warning';\r\n                        } else if (line.search(regInformation) > -1) {\r\n                            type = 'info';\r\n                        } else {\r\n                            type = 'error';\r\n                        }\r\n                        lastAnotation = {\r\n                            'row': (match[3] - 1),\r\n                            'column': match[5],\r\n                            'type': type,\r\n                            'text': rawline,\r\n                        };\r\n                        anot.push(lastAnotation);\r\n                        var fileName = filenames[i];\r\n                        var href = getHref(i);\r\n                        var lt = VPLUtil.sanitizeText(fileName);\r\n                        var data = 'data-file=\"' + fileName + '\" data-line=\"' + match[3] + '\"';\r\n                        line = line.replace(reg, '$1<a ' + href + ' class=\"vpl_fl\" ' + data + '>' + lt + '$2$3$4$5$6</a>');\r\n                        sh[i].setAnnotations(anot);\r\n                    }\r\n                }\r\n                if (!used && lastAnotation) {\r\n                    if (rawline !== '') {\r\n                        lastAnotation.text += \"\\n\" + rawline;\r\n                        sh[lastAnotationFile].setAnnotations(sh[lastAnotationFile].getAnnotations());\r\n                    } else {\r\n                        lastAnotation = false;\r\n                    }\r\n                }\r\n                return line;\r\n            }\r\n            /**\r\n             * Generates HTML for title line\r\n             * @param {string} line The line to process\r\n             * @returns {string} Line in HTML format\r\n             */\r\n            function getTitle(line) {\r\n                lastAnotation = false;\r\n                line = line.substr(1);\r\n                var end = regtitgra.exec(line);\r\n                if (end !== null) {\r\n                    line = line.substr(0, line.length - end[0].length);\r\n                }\r\n                var html = '';\r\n                if (folding) {\r\n                    html += '<a href=\"javascript:void(0)\" onclick=\"VPLUtil.showHideDiv(this)\">[+]</a>';\r\n                }\r\n                html += '<b class=\"ui-widget-header ui-corner-all\">' + VPLUtil.sanitizeText(line) + '</b><br>';\r\n                html = genFileLinks(html, line);\r\n                return html;\r\n            }\r\n            /**\r\n             * Returns comment that has been saved\r\n             * @returns {string}\r\n             */\r\n            function getComment() {\r\n                lastAnotation = false;\r\n                var ret = comment;\r\n                comment = '';\r\n                return ret;\r\n            }\r\n            /**\r\n             * Adds a new comment in HTML\r\n             * @param {string} rawline  Comment to add\r\n             */\r\n            function addComment(rawline) {\r\n                var line = VPLUtil.sanitizeText(rawline);\r\n                comment += genFileLinks(line, rawline) + '<br>';\r\n            }\r\n            /**\r\n             * Adds a new case\r\n             * @param {*} rawline Text to add\r\n             */\r\n            function addCase(rawline) {\r\n                var line = VPLUtil.sanitizeText(rawline);\r\n                case_ += genFileLinks(line, rawline) + \"\\n\";\r\n            }\r\n            /**\r\n             * Returns cases saved in HTML\r\n             * @returns {string}\r\n             */\r\n            function getCase() {\r\n                lastAnotation = false;\r\n                var ret = case_;\r\n                case_ = '';\r\n                return '<pre><i>' + ret + '</i></pre>';\r\n            }\r\n\r\n            for (var i = 0; i < lines.length; i++) {\r\n                var line = lines[i];\r\n                if (noFormat) {\r\n                    html += genFileLinks(VPLUtil.sanitizeText(line), line) + \"\\n\";\r\n                    continue;\r\n                }\r\n                var match = regcas.exec(line);\r\n                var regcasv = regcas.test(line);\r\n                if ((match !== null) != regcasv) {\r\n                    VPLUtil.log('error');\r\n                }\r\n                if (regtit.test(line)) {\r\n                    switch (state) {\r\n                        case 'comment':\r\n                            html += getComment();\r\n                            break;\r\n                        case 'case':\r\n                            html += getCase();\r\n                            break;\r\n                    }\r\n                    if (afterTitle) {\r\n                        html += '</div>';\r\n                    }\r\n                    html += getTitle(line);\r\n                    html += folding ? '<div style=\"display:none\">' : '<div>';\r\n                    afterTitle = true;\r\n                    state = '';\r\n                } else if (regcasv) {\r\n                    if (state == 'comment') {\r\n                        html += getComment();\r\n                    }\r\n                    addCase(line.substr(match[0].length));\r\n                    state = 'case';\r\n                } else {\r\n                    if (state == 'case') {\r\n                        html += getCase();\r\n                    }\r\n                    addComment(line);\r\n                    state = 'comment';\r\n                }\r\n            }\r\n            switch (state) {\r\n                case 'comment':\r\n                    html += getComment();\r\n                    break;\r\n                case 'case':\r\n                    html += getCase();\r\n                    break;\r\n            }\r\n            if (afterTitle) {\r\n                html += '</div>';\r\n            }\r\n            return html;\r\n        };\r\n        (function() {\r\n            var scriptsLoaded = [];\r\n            VPLUtil.loadScript = function(scripts, end) {\r\n                if (scripts.length == 0) {\r\n                    end();\r\n                    return;\r\n                }\r\n                var scriptURL = scripts[0];\r\n                if (typeof scriptsLoaded[scriptURL] == 'undefined') {\r\n                    scripts.shift();\r\n                    scriptsLoaded[scriptURL] = 1;\r\n                    var script = document.createElement('script');\r\n                    script.type = 'text/javascript';\r\n                    script.src = VPLUtil.options.scriptPath + scriptURL;\r\n                    script.onload = function() {\r\n                        scriptsLoaded[scriptURL] = 2;\r\n                        VPLUtil.loadScript(scripts, end);\r\n                    };\r\n                    document.head.appendChild(script);\r\n                } else if (scriptsLoaded[scriptURL] == 2) {\r\n                    scripts.shift();\r\n                    VPLUtil.loadScript(scripts, end);\r\n                } else {\r\n                    var fullScriptPath = VPLUtil.options.scriptPath + scriptURL;\r\n                    VPLUtil.log('Loading js ' + fullScriptPath + ' (state ' + scriptsLoaded[scriptURL] + ')');\r\n                    setTimeout(function() {\r\n                                  VPLUtil.loadScript(scripts, end);\r\n                               }, 50);\r\n                }\r\n            };\r\n            VPLUtil.isScriptLoading = function(scriptURL) {\r\n                if (typeof scriptsLoaded[scriptURL] == 'undefined') {\r\n                    return false;\r\n                }\r\n                return scriptsLoaded[scriptURL] == 1;\r\n            };\r\n            VPLUtil.isScriptLoaded = function(scriptURL) {\r\n                if (typeof scriptsLoaded[scriptURL] == 'undefined') {\r\n                    return false;\r\n                }\r\n                return scriptsLoaded[scriptURL] == 2;\r\n            };\r\n        })();\r\n        (function() {\r\n            var files = [];\r\n            var results = [];\r\n            var shs = [];\r\n            var nFileGroupHighlighter = 0;\r\n            /**\r\n             * Constructor for submission highlighter\r\n             * @param {Array} files Files to show highlighted\r\n             * @param {Array} results Output\r\n             */\r\n            function FileGroupHighlighter(files, results) {\r\n                this.files = files;\r\n                this.results = results;\r\n                this.shFiles = [];\r\n                this.shFileNames = [];\r\n                this.fileGroupId = nFileGroupHighlighter;\r\n                nFileGroupHighlighter++;\r\n                this.highlight();\r\n            }\r\n\r\n            FileGroupHighlighter.prototype.highlightBlockly = function(preid) {\r\n                VPLUtil.loadScript(['/blockly/blockly_compressed.js',\r\n                    '/blockly/msg/js/en.js',\r\n                    '/blockly/blocks_compressed.js']\r\n                , function() {\r\n                    var tag = $('#' + preid);\r\n                    var c = tag.html();\r\n                    $('#' + preid + 'load').remove();\r\n                    tag.html('');\r\n                    tag.show();\r\n                    c = $('<div />').html(c).text().replace(/\\n/g, \"\");\r\n                    var xml = Blockly.Xml.textToDom(c);\r\n                    tag.html('').height(300).width(tag.parent().width());\r\n                    var options = {\r\n                        toolbox: '',\r\n                        readOnly: true,\r\n                        media: '../editor/blockly/media/',\r\n                    };\r\n                    var work = Blockly.inject(preid, options);\r\n                    Blockly.Xml.domToWorkspace(xml, work);\r\n                    var hg = VPLUtil.adjustBlockly(work, 10, 10);\r\n                    tag.height(hg);\r\n                    tag.width('100%');\r\n                    Blockly.svgResize(work);\r\n                    Blockly.resizeSvgContents(work);\r\n                    var h = tag.html();\r\n                    work.dispose();\r\n                    tag.html(h);\r\n                });\r\n            };\r\n\r\n            FileGroupHighlighter.prototype.highlight = function() {\r\n                var self = this;\r\n                var needAce = false;\r\n                var files = this.files;\r\n                for (let i = 0; i < files.length; i++) {\r\n                    let file = files[i];\r\n                    if (VPLUtil.isBinary(file.fileName) || VPLUtil.isBlockly(file.fileName)) {\r\n                        continue;\r\n                    } else {\r\n                        needAce = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (needAce && typeof ace === 'undefined') {\r\n                    VPLUtil.loadScript(['/ace9/ace.js'],\r\n                        function() {\r\n                           self.highlight();\r\n                        });\r\n                    return;\r\n                }\r\n                VPLUtil.delay(\"FFGH.\" + self.fileGroupId, function() {\r\n                    self.highlightStep(0);\r\n                });\r\n            };\r\n\r\n            FileGroupHighlighter.prototype.highlightStep = function(pos) {\r\n                if (pos >= this.files.length) {\r\n                    this.resultStep(0);\r\n                    return;\r\n                }\r\n                let file = this.files[pos];\r\n                let preid = 'code' + file.tagId;\r\n                if (VPLUtil.isBlockly(file.fileName)) {\r\n                    this.highlightBlockly(preid);\r\n                } else {\r\n                    var ext = VPLUtil.fileExtension(file.fileName);\r\n                    var lang = VPLUtil.langType(ext);\r\n                    $('#' + preid).show();\r\n                    $('#' + preid + 'load').remove();\r\n                    var sh = ace.edit(preid);\r\n                    sh.setTheme('ace/theme/' + file.theme);\r\n                    sh.getSession().setMode('ace/mode/' + lang);\r\n                    sh.renderer.setShowGutter(file.showln);\r\n                    sh.setReadOnly(true);\r\n                    sh.setHighlightActiveLine(false);\r\n                    sh.setAutoScrollEditorIntoView(true);\r\n                    sh.setOption('maxLines', file.nl);\r\n                    sh.getAnnotations = function() {\r\n                        return this.getSession().getAnnotations();\r\n                    };\r\n                    sh.setAnnotations = function(a) {\r\n                        return this.getSession().setAnnotations(a);\r\n                    };\r\n                    sh.getTagId = function() {\r\n                        return this.vplTagId;\r\n                    };\r\n                    sh.vplTagId = file.tagId;\r\n                    this.shFiles.push(sh);\r\n                    this.shFileNames.push(file.fileName);\r\n                    shs[file.tagId] = sh;\r\n                }\r\n                var self = this;\r\n                VPLUtil.delay(preid + \".next\", function() {\r\n                    self.highlightStep(pos + 1);\r\n                });\r\n            };\r\n\r\n            FileGroupHighlighter.prototype.resultStep = function(pos) {\r\n                if (pos >= this.results.length) {\r\n                    return;\r\n                }\r\n                var self = this;\r\n                var result = this.results[pos];\r\n                var tag = document.getElementById(result.tagId);\r\n                var text = tag.textContent || tag.innerText;\r\n                tag.innerHTML = VPLUtil.processResult(text, this.shFileNames, this.shFiles,\r\n                    result.noFormat, result.folding);\r\n                VPLUtil.delay(result.tagId + \".next\", function() {\r\n                    self.resultStep(pos + 1);\r\n                });\r\n            };\r\n\r\n            VPLUtil.addResults = function(tagId, noFormat, folding) {\r\n                results.push({'tagId': tagId, 'noFormat': noFormat, 'folding': folding});\r\n            };\r\n            VPLUtil.syntaxHighlightFile = function(tagId, fileName, theme, showln, nl) {\r\n                files.push({\r\n                    'tagId': tagId,\r\n                    'fileName': fileName,\r\n                    'theme': theme,\r\n                    'showln': showln,\r\n                    'nl': nl\r\n                 });\r\n            };\r\n            VPLUtil.syntaxHighlight = function() {\r\n                var groupFiles = files;\r\n                var groupResults = results;\r\n                files = [];\r\n                results = [];\r\n                new FileGroupHighlighter(groupFiles, groupResults);\r\n            };\r\n            VPLUtil.flEventHandler = function(event) {\r\n                var tag = event.target.getAttribute('href').substring(1);\r\n                var line = event.target.getAttribute('data-line');\r\n                var sh = shs[tag];\r\n                sh.gotoLine(line, 0);\r\n                sh.scrollToLine(line, true);\r\n            };\r\n            VPLUtil.setflEventHandler = function() {\r\n                var links = document.getElementsByClassName(\"vpl_fl\");\r\n                for (var i = 0; i < links.length; i++) {\r\n                    links[i].onclick = VPLUtil.flEventHandler;\r\n                }\r\n            };\r\n            VPLUtil.showHideDiv = function(a) {\r\n                var text = a;\r\n                var div = a;\r\n                if (!div.nextSibling) {\r\n                    div = div.parentNode;\r\n                }\r\n                div = div.nextSibling;\r\n                while (div.nodeName != 'DIV' && div.nodeName != 'PRE') {\r\n                    div = div.nextSibling;\r\n                    if (!div) {\r\n                        return;\r\n                    }\r\n                }\r\n                if (text) {\r\n                    if (text.innerHTML == '[+]') {\r\n                        if (div.savedDisplay) {\r\n                            div.style.display = div.savedDisplay;\r\n                        } else {\r\n                            div.style.display = '';\r\n                        }\r\n                        text.innerHTML = '[-]';\r\n                    } else {\r\n                        div.savedDisplay = div.style.display;\r\n                        div.style.display = 'none';\r\n                        text.innerHTML = '[+]';\r\n                    }\r\n                }\r\n            };\r\n            VPLUtil.adjustBlockly = function(work, offx, offy) {\r\n                var blocks = work.getAllBlocks();\r\n                var miy = 20000;\r\n                var may = -20000;\r\n                var mix = 20000;\r\n                var max = -20000;\r\n                for (var i = 0; i < blocks.length; i++) {\r\n                    var xy = blocks[i].getRelativeToSurfaceXY();\r\n                    miy = Math.min(miy, xy.y);\r\n                    may = Math.max(may, xy.y);\r\n                    mix = Math.min(mix, xy.x);\r\n                    max = Math.max(max, xy.x);\r\n                }\r\n                blocks = work.getTopBlocks();\r\n                for (var j = 0; j < blocks.length; j++) {\r\n                    blocks[j].moveBy(offx - mix, offy - miy);\r\n                }\r\n                return may - miy + 100 + offy;\r\n            };\r\n        })();\r\n        VPLUtil.options = {\r\n            scriptPath: ''\r\n        };\r\n        if (typeof window.VPLDebugMode != 'undefined') {\r\n            debugMode = window.VPLDebugMode;\r\n        }\r\n        VPLUtil.init = function(options) {\r\n            VPLUtil.options = {\r\n                scriptPath: ''\r\n            };\r\n            $.extend(VPLUtil.options, options);\r\n            if (typeof window.VPLDebugMode != 'undefined') {\r\n                debugMode = window.VPLDebugMode;\r\n            }\r\n            VPLUtil.log(VPLUtil.options);\r\n        };\r\n        // Needs global use of VPLUtil for view source.\r\n        window.VPLUtil = VPLUtil;\r\n        return VPLUtil;\r\n    }\r\n);\r\n"],"names":["define","$","log","VPLUtil","doNothing","noop","returnFalse","returnTrue","fileUniqueId","MIME","maplang","mapname","i18n","strreg","lastProccessID","scriptsLoaded","debugMode","m","forced","debug","setUserPreferences","pref","ajax","async","type","url","M","cfg","wwwroot","JSON","stringify","contentType","dataType","getUserPreferences","func","getPreferences","done","sanitizeHTML","t","replace","html","sanitizeText","s","setProtocol","coninfo","secure","securePort","port","wsProtocol","window","location","protocol","URLBase","server","portToUse","monitorURL","monitorPath","executionURL","executionPath","ArrayBuffer2String","data","i","len","view","Uint8Array","chunks","length","push","String","fromCharCode","apply","subarray","Math","min","join","String2ArrayBuffer","ret","ArrayBuffer","u8","charCodeAt","getUniqueId","regExt","regImg","regBin","regBlk","fileExtension","fileName","res","exec","isImage","test","isBinary","isBlockly","regInvalidFileName","validFileName","getCurrentTime","parseInt","Date","valueOf","encodeBinary","name","btoa","unescape","encodeURIComponent","decodeBinary","decoded","atob","decodeURIComponent","escape","validPath","path","dirs","split","getFileName","dataFromURLData","substr","indexOf","getMIME","ext","getTimeLeft","timeLeft","timePending","days","hours","minutes","seconds","getLangNames","Object","assign","langType","langName","str","key","parm","setStr","newi18n","hasOwnProperty","VPLi18n","delayedActions","afterAllActions","numberDelayed","internalDelay","timeout","id","arg1","arg2","clearTimeout","setTimeout","delay","longDelay","setAfterTimeout","afterAll","supportWebSocket","isAndroid","navigator","userAgent","isFirefox","isMac","setProcessId","getProcessId","directRun","URL","command","files","deferred","Deferred","result","success","response","ws","WebSocket","resolve","processid","homepath","connection","reject","error","fail","jqXHR","textStatus","errorThrown","message","undefined","directRunTest","contents","encoding","mcount","onopen","send","close","onmessage","event","onerror","onclose","code","reason","processResult","text","filenames","sh","noFormat","folding","escReg","regtitgra","regtit","regcas","regError","RegExp","regWarning","regInformation","state","comment","case_","lines","regFiles","lastAnotation","lastAnotationFile","afterTitle","getHref","getTagId","genFileLinks","line","rawline","used","match","reg","anot","getAnnotations","search","href","lt","setAnnotations","getTitle","end","getComment","addComment","addCase","getCase","regcasv","loadScript","scripts","scriptURL","shift","script","document","createElement","src","options","scriptPath","onload","head","appendChild","fullScriptPath","isScriptLoading","isScriptLoaded","results","shs","nFileGroupHighlighter","FileGroupHighlighter","shFiles","shFileNames","fileGroupId","highlight","prototype","highlightBlockly","preid","tag","c","remove","show","xml","Blockly","Xml","textToDom","height","width","parent","work","inject","toolbox","readOnly","media","domToWorkspace","hg","adjustBlockly","svgResize","resizeSvgContents","h","dispose","self","this","needAce","file","ace","highlightStep","pos","resultStep","tagId","lang","edit","setTheme","theme","getSession","setMode","renderer","setShowGutter","showln","setReadOnly","setHighlightActiveLine","setAutoScrollEditorIntoView","setOption","nl","a","vplTagId","getElementById","textContent","innerText","innerHTML","addResults","syntaxHighlightFile","syntaxHighlight","groupFiles","groupResults","flEventHandler","target","getAttribute","substring","gotoLine","scrollToLine","setflEventHandler","links","getElementsByClassName","onclick","showHideDiv","div","nextSibling","parentNode","nodeName","savedDisplay","style","display","offx","offy","blocks","getAllBlocks","miy","may","mix","max","xy","getRelativeToSurfaceXY","y","x","getTopBlocks","j","moveBy","VPLDebugMode","init","extend"],"mappings":"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"}