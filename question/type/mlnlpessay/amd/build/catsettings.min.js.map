{"version":3,"file":"catsettings.min.js","sources":["../src/catsettings.js"],"sourcesContent":["\n\nimport Ajax from \"core/ajax\";\nimport Notification, {saveCancelPromise} from \"core/notification\";\nimport Tabulator from \"qtype_mlnlpessay/tabulatorlib\";\nimport Modal from \"core/modal\";\nimport ModalEvents from \"core/modal_events\";\nimport {get_string as getString} from \"core/str\";\nimport Templates from \"core/templates\";\nimport Fragment from \"core/fragment\";\nimport $ from \"jquery\";\n\nconst SELECTORS = {\n    CATCONTAINER: '.mlnlpessay-categories-wrapper',\n    LANGCONTAINER: '.mlnlpessay-lang-wrapper',\n    ADDEDITTRIGGER: 'qtype-mlnlpessay-settingaddedit',\n    TOPICCONTAINER: '.mlnlpessay-topics-wrapper',\n    SUBTOPICCONTAINER: '.mlnlpessay-subtopics-wrapper',\n    MODALCONTAINER: '.mlnlpessay-modal',\n    DELETETRIGGER: 'qtype-mlnlpessay-settingdelete',\n    VISIBILITYTRIGGER: 'qtype-mlnlpessay-settingvisibilitytoggle',\n    CSVUPLOADTRIGGER: 'qtype-mlnlpessay-csvupload',\n    CSVVERIFYTRIGGER: 'qtype-mlnlpessay-csverify',\n    CSVCANCELTRIGGER: 'qtype-mlnlpessay-csvcancel',\n};\n\nconst getData = async(item) => {\n    let data = [];\n    let response = await Ajax.call([{\n        methodname: \"qtype_mlnlpessay_get_\" + item, args: {}\n    }])[0];\n\n    if (response.status) {\n        data = response.response;\n    }\n\n    return data;\n};\n\n// Global state for CSV modal\nwindow.qtypeMlnlpessayCsvModalState = {\n    step: 'upload', // 'upload', 'precheck', 'result'\n    precheckData: null,\n    formData: null,\n};\n\nexport const init = async(contextid) => {\n    const tables = {\n        categoriestable: new Tabulator(SELECTORS.CATCONTAINER, {\n            data: await getData('categories'), // Load row data from array\n            layout: \"fitColumns\", // Fit columns to width of table\n            responsiveLayout: \"hide\", // Hide columns that don't fit on the table\n            addRowPos: \"top\", // When adding a new row, add it to the top of the table\n            history: true, // Allow undo and redo actions on the table\n            pagination: \"local\", // Paginate the data\n            paginationSize: 7, // Allow 7 rows per page of data\n            paginationSizeSelector:true,\n            paginationCounter: \"rows\", // Display count of paginated rows in footer\n            movableColumns: true, // Allow column order to be changed\n            initialSort: [ // Set the initial sort order of the data\n                {column: \"id\", dir: \"asc\"},\n            ],\n            columnDefaults: {\n                tooltip: true, // Show tool tips on cells\n            },\n            columns: [ // Define the table columns\n                {title: M.util.get_string('catid', 'qtype_mlnlpessay'), field: \"id\"},\n                {\n                    title: M.util.get_string('categoryname', 'qtype_mlnlpessay'), field: \"name\",\n                    headerFilter: \"input\",\n                    headerFilterLiveFilter: true,\n                },\n                {\n                    title: M.util.get_string('modelid', 'qtype_mlnlpessay'), field: \"modelid\",\n                    headerFilter: \"input\",\n                    headerFilterLiveFilter: true,\n                },\n                {\n                    title: M.util.get_string('modelname', 'qtype_mlnlpessay'), field: \"model\",\n                    headerFilter: \"input\",\n                    headerFilterLiveFilter: true,\n                },\n                {\n                    title: M.util.get_string('categorytag', 'qtype_mlnlpessay'), field: \"tag\",\n                    headerFilter: \"input\",\n                    headerFilterLiveFilter: true,\n                },\n                {\n                    title: M.util.get_string('descriptioncategory', 'qtype_mlnlpessay'), field: \"description\",\n                    headerFilter: \"input\",\n                    headerFilterLiveFilter: true,\n                },\n                {\n                    title: M.util.get_string('catlang', 'qtype_mlnlpessay'), field: \"lang\",\n                    headerFilter: \"input\",\n                    headerFilterLiveFilter: true,\n                },\n                {\n                    title: M.util.get_string('cattopic', 'qtype_mlnlpessay'), field: \"topic\",\n                    headerFilter: \"input\",\n                    headerFilterLiveFilter: true,\n                },\n                {\n                    title: M.util.get_string('catsubtopic', 'qtype_mlnlpessay'), field: \"subtopic\",\n                    headerFilter: \"input\",\n                    headerFilterLiveFilter: true,\n                },\n                {title: M.util.get_string('catstatus', 'qtype_mlnlpessay'), field: \"active\", formatter: \"html\"},\n                {title: M.util.get_string('catdisabled', 'qtype_mlnlpessay'), field: \"disabled\"},\n                {title: M.util.get_string('catactions', 'qtype_mlnlpessay'), field: \"catactions\", formatter: \"html\"},\n            ],\n        }),\n        langstable: new Tabulator(SELECTORS.LANGCONTAINER, {\n            data: await getData('langs'), // Load row data from array\n            layout: \"fitColumns\", // Fit columns to width of table\n            responsiveLayout: \"hide\", // Hide columns that don't fit on the table\n            addRowPos: \"top\", // When adding a new row, add it to the top of the table\n            history: true, // Allow undo and redo actions on the table\n            pagination: \"local\", // Paginate the data\n            paginationSize: 7, // Allow 7 rows per page of data\n            paginationSizeSelector:true,\n            paginationCounter: \"rows\", // Display count of paginated rows in footer\n            movableColumns: true, // Allow column order to be changed\n            initialSort: [ // Set the initial sort order of the data\n                {column: \"id\", dir: \"asc\"},\n            ],\n            columnDefaults: {\n                tooltip: true, // Show tool tips on cells\n            },\n            columns: [ // Define the table columns\n                {title: M.util.get_string('langid', 'qtype_mlnlpessay'), field: \"id\"},\n                {title: M.util.get_string('langcode', 'qtype_mlnlpessay'), field: \"code\"},\n                {title: M.util.get_string('langname', 'qtype_mlnlpessay'), field: \"name\"},\n                {title: M.util.get_string('langactive', 'qtype_mlnlpessay'), field: \"active\", formatter: \"html\"},\n                {title: M.util.get_string('langactions', 'qtype_mlnlpessay'), field: \"langactions\", formatter: \"html\"},\n            ],\n        }),\n        topicstable: new Tabulator(SELECTORS.TOPICCONTAINER, {\n            data: await getData('topics'), // Load row data from array\n            layout: \"fitColumns\", // Fit columns to width of table\n            responsiveLayout: \"hide\", // Hide columns that don't fit on the table\n            addRowPos: \"top\", // When adding a new row, add it to the top of the table\n            history: true, // Allow undo and redo actions on the table\n            pagination: \"local\", // Paginate the data\n            paginationSize: 7, // Allow 7 rows per page of data\n            paginationSizeSelector:true,\n            paginationCounter: \"rows\", // Display count of paginated rows in footer\n            movableColumns: true, // Allow column order to be changed\n            initialSort: [ // Set the initial sort order of the data\n                {column: \"id\", dir: \"asc\"},\n            ],\n            columnDefaults: {\n                tooltip: true, // Show tool tips on cells\n            },\n            columns: [ // Define the table columns\n                {title: M.util.get_string('topicid', 'qtype_mlnlpessay'), field: \"id\"},\n                {title: M.util.get_string('topicname', 'qtype_mlnlpessay'), field: \"name\"},\n                {title: M.util.get_string('topicactive', 'qtype_mlnlpessay'), field: \"active\", formatter: \"html\"},\n                {title: M.util.get_string('topicactions', 'qtype_mlnlpessay'), field: \"topicactions\", formatter: \"html\"},\n            ],\n        }),\n        subtopicstable: new Tabulator(SELECTORS.SUBTOPICCONTAINER, {\n            data: await getData('subtopics'), // Load row data from array\n            layout: \"fitColumns\", // Fit columns to width of table\n            responsiveLayout: \"hide\", // Hide columns that don't fit on the table\n            addRowPos: \"top\", // When adding a new row, add it to the top of the table\n            history: true, // Allow undo and redo actions on the table\n            pagination: \"local\", // Paginate the data\n            paginationSize: 7, // Allow 7 rows per page of data\n            paginationSizeSelector:true,\n            paginationCounter: \"rows\", // Display count of paginated rows in footer\n            movableColumns: true, // Allow column order to be changed\n            initialSort: [ // Set the initial sort order of the data\n                {column: \"id\", dir: \"asc\"},\n            ],\n            columnDefaults: {\n                tooltip: true, // Show tool tips on cells\n            },\n            columns: [ // Define the table columns\n                {title: M.util.get_string('subtopicid', 'qtype_mlnlpessay'), field: \"id\"},\n                {title: M.util.get_string('subtopicname', 'qtype_mlnlpessay'), field: \"name\"},\n                {title: M.util.get_string('subtopicactive', 'qtype_mlnlpessay'), field: \"active\", formatter: \"html\"},\n                {title: M.util.get_string('subtopicactions', 'qtype_mlnlpessay'), field: \"subtopicactions\", formatter: \"html\"},\n            ],\n        })\n    };\n\n    document.addEventListener('click', async function(e) {\n        if (e.target.classList.contains(SELECTORS.ADDEDITTRIGGER)) {\n            e.preventDefault();\n            let action = e.target.getAttribute('data-action');\n            const modal = await Modal.create({\n                title: await getString('modal' + action + 'title', 'qtype_mlnlpessay'),\n                body: await Templates.render('qtype_mlnlpessay/modal', {\"action\": action}),\n            });\n            modal.show();\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                modal.destroy();\n            });\n            let fragmentargs = {action: action};\n            if (e.target.getAttribute('data-id')) {\n                fragmentargs.id = e.target.getAttribute('data-id');\n            }\n            Fragment.loadFragment('qtype_mlnlpessay', 'settingsform', contextid,\n                fragmentargs\n            ).done(async function(html, js) {\n                Templates.replaceNodeContents($(SELECTORS.MODALCONTAINER), html, js);\n                $(SELECTORS.MODALCONTAINER).find('form').on('submit', function(e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    Notification.saveCancelPromise(\n                        M.util.get_string('saveconfirm', 'qtype_mlnlpessay'),\n                        M.util.get_string('savewarning', 'qtype_mlnlpessay')\n                    ).then(() => {\n                        e.preventDefault();\n                        let formdata = $(this).serialize();\n                        Ajax.call([{\n                            methodname: \"qtype_mlnlpessay_save_settings\", args: {action: action, formdata: formdata}\n                        }])[0].done(async function(response) {\n                            if (response.status) {\n                                Notification.addNotification({\n                                    message: M.util.get_string('savesuccess', 'qtype_mlnlpessay'),\n                                    type: 'info'\n                                });\n                                modal.hide();\n                                let actiontable = action + 'table';\n                                tables[actiontable].replaceData(await getData(action));\n                            } else {\n                                Notification.addNotification({\n                                    message: M.util.get_string('saveerror', 'qtype_mlnlpessay'),\n                                    type: 'error'\n                                });\n                            }\n                        }).fail(Notification.exception);\n                    });\n                });\n            });\n        }\n        if (e.target.classList.contains(SELECTORS.DELETETRIGGER)) {\n            e.preventDefault();\n            let action = e.target.getAttribute('data-action');\n            let id = e.target.getAttribute('data-id');\n            Notification.deleteCancelPromise(\n                M.util.get_string('deleteconfirm', 'qtype_mlnlpessay'),\n                M.util.get_string('deletewarning', 'qtype_mlnlpessay')\n            ).then(() => {\n                Ajax.call([{\n                    methodname: \"qtype_mlnlpessay_delete_setting\", args: {action: action, id: id}\n                }])[0].done(async function(response) {\n                    if (response.status) {\n                        Notification.addNotification({\n                            message: M.util.get_string('deletesuccess', 'qtype_mlnlpessay'),\n                            type: 'info'\n                        });\n                        let actiontable = action + 'table';\n                        tables[actiontable].replaceData(await getData(action));\n                    } else {\n                        Notification.addNotification({\n                            message: M.util.get_string('saveerror', 'qtype_mlnlpessay'),\n                            type: 'error'\n                        });\n                    }\n                }).fail(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n\n        if (e.target.classList.contains(SELECTORS.VISIBILITYTRIGGER)) {\n            e.preventDefault();\n            let action = e.target.getAttribute('data-action');\n            let id = e.target.getAttribute('data-id');\n            Ajax.call([{\n                methodname: \"qtype_mlnlpessay_toggle_visible\", args: {action: action, id: id}\n            }])[0].done(async function(response) {\n                if (response.status) {\n                    let actiontable = action + 'table';\n                    tables[actiontable].replaceData(await getData(action));\n                } else {\n                    Notification.addNotification({\n                        message: M.util.get_string('saveerror', 'qtype_mlnlpessay'),\n                        type: 'error'\n                    });\n                }\n            }).fail(Notification.exception);\n        }\n\n        if (e.target.classList.contains(SELECTORS.CSVUPLOADTRIGGER)) {\n            e.preventDefault();\n            window.qtypeMlnlpessayCsvModalState = {step: 'upload', precheckData: null, formData: null};\n            const modal = await Modal.create({\n                title: await getString('modalcsvuploadtitle', 'qtype_mlnlpessay'),\n                body: await Templates.render('qtype_mlnlpessay/modal', {}),\n            });\n            modal.show();\n            modal.getRoot().on(ModalEvents.hidden, async function() {\n                modal.destroy();\n                if (tables && tables.categoriestable) {\n                    const newData = await getData('categories');\n                    tables.categoriestable.replaceData(newData);\n                }\n                // Clear state on close\n                window.qtypeMlnlpessayCsvModalState = {step: 'upload', precheckData: null, formData: null};\n            });\n            Fragment.loadFragment('qtype_mlnlpessay', 'csvuploadform', contextid, [])\n                .done(async function(html, js) {\n                    Templates.replaceNodeContents($(SELECTORS.MODALCONTAINER), html, js);\n                    // Restore file selection if going back\n                    if (window.qtypeMlnlpessayCsvModalState.formData) {\n                        // Try to restore file input (not always possible for security reasons)\n                        // Optionally, show a message to reselect file if needed\n                    }\n                    $(SELECTORS.MODALCONTAINER).find('form').on('submit', async function(e) {\n                        e.preventDefault();\n                        Notification.saveCancelPromise(\n                            M.util.get_string('csvconfirm', 'qtype_mlnlpessay'),\n                            M.util.get_string('csvwarning', 'qtype_mlnlpessay'),\n                            M.util.get_string('csvproceed', 'qtype_mlnlpessay'),\n                        ).then(async () => {\n                            let formdata = $(this).serialize();\n                            // Show loading indicator\n                            Templates.replaceNodeContents($(SELECTORS.MODALCONTAINER), '<div class=\"text-center p-3\"><span class=\"spinner-border\" role=\"status\"></span></div>', '');\n                            let response = await Ajax.call([{\n                                methodname: \"qtype_mlnlpessay_csv_upload\", args: {formdata: formdata}\n                            }])[0];\n                            if (!response.status || !response.response || !response.response.rows || response.response.rows.length === 0) {\n                                Notification.addNotification({\n                                    message: M.util.get_string('csvuploaderror', 'qtype_mlnlpessay'),\n                                    type: 'error'\n                                });\n                                // Go back to upload form\n                                Fragment.loadFragment('qtype_mlnlpessay', 'csvuploadform', contextid, [])\n                                    .done(function(html, js) {\n                                        Templates.replaceNodeContents($(SELECTORS.MODALCONTAINER), html, js);\n                                    });\n                                return;\n                            }\n                            // Store precheck data for back button\n                            window.qtypeMlnlpessayCsvModalState = {step: 'precheck', precheckData: response.response, formData: formdata};\n                            let html = await Templates.render('qtype_mlnlpessay/csvuploadprecheck', response.response);\n                            Templates.replaceNodeContents($(SELECTORS.MODALCONTAINER), html, '');\n                            // Disable perform upload if no rows\n                            if (!response.response.rows || response.response.rows.length === 0) {\n                                $(SELECTORS.MODALCONTAINER).find('.qtype-mlnlpessay-csvprocess').prop('disabled', true);\n                            }\n                        });\n                    });\n                });\n        }\n\n        // Handle Back button in CSV modal (precheck/result)\n        if (e.target.classList.contains('qtype-mlnlpessay-csvback')) {\n            e.preventDefault();\n            if (window.qtypeMlnlpessayCsvModalState.step === 'result') {\n                // Go back to precheck step\n                window.qtypeMlnlpessayCsvModalState.step = 'precheck';\n                if (window.qtypeMlnlpessayCsvModalState.precheckData) {\n                    Templates.render('qtype_mlnlpessay/csvuploadprecheck', window.qtypeMlnlpessayCsvModalState.precheckData)\n                        .then(function(html) {\n                            Templates.replaceNodeContents($(SELECTORS.MODALCONTAINER), html, '');\n                        });\n                }\n            } else if (window.qtypeMlnlpessayCsvModalState.step === 'precheck') {\n                // Go back to upload form\n                window.qtypeMlnlpessayCsvModalState.step = 'upload';\n                Fragment.loadFragment('qtype_mlnlpessay', 'csvuploadform', contextid, [])\n                    .done(function(html, js) {\n                        Templates.replaceNodeContents($(SELECTORS.MODALCONTAINER), html, js);\n                        // Optionally restore form data\n                    });\n            }\n        }\n\n        // Handle Perform Upload (CSV Import) button in precheck modal\n        if (e.target.classList.contains('qtype-mlnlpessay-csvprocess')) {\n            e.preventDefault();\n            let form = $(SELECTORS.MODALCONTAINER).find('form');\n            let formdata = window.qtypeMlnlpessayCsvModalState.formData || (form.length ? form.serialize() : '');\n            if (!formdata) {\n                Notification.addNotification({\n                    message: 'Could not find CSV file data to upload.',\n                    type: 'error'\n                });\n                return;\n            }\n            // Show loading indicator\n            Templates.replaceNodeContents($(SELECTORS.MODALCONTAINER), '<div class=\"text-center p-3\"><span class=\"spinner-border\" role=\"status\"></span></div>', '');\n            Ajax.call([{\n                methodname: \"qtype_mlnlpessay_csv_upload_perform\", args: {formdata: formdata}\n            }])[0].done(async function(response) {\n                if (response.status) {\n                    window.qtypeMlnlpessayCsvModalState.step = 'result';\n                    let html = await Templates.render('qtype_mlnlpessay/csvuploadresult', response.response);\n                    Templates.replaceNodeContents($(SELECTORS.MODALCONTAINER), html, '');\n                } else {\n                    Notification.addNotification({\n                        message: response.message || 'CSV import failed.',\n                        type: 'error'\n                    });\n                }\n            }).fail(Notification.exception);\n        }\n\n        // Handle Undo button in CSV result step\n        if (e.target.classList.contains('qtype-mlnlpessay-csvundo')) {\n            e.preventDefault();\n            let importid = e.target.getAttribute('data-importid');\n            if (!importid) {\n                return;\n            }\n            // Disable button during AJAX\n            e.target.disabled = true;\n            Ajax.call([{\n                methodname: \"qtype_mlnlpessay_csv_upload_undo\", args: {importid: importid}\n            }])[0].done(function(response) {\n                if (response.status) {\n                    Notification.addNotification({\n                        message: M.util.get_string('csvundodone', 'qtype_mlnlpessay'),\n                        type: 'info'\n                    });\n                    // Optionally close modal or refresh categories table\n                    $(SELECTORS.MODALCONTAINER).closest('.modal').modal('hide');\n                } else {\n                    Notification.addNotification({\n                        message: response.message || 'Undo failed.',\n                        type: 'error'\n                    });\n                }\n            }).fail(Notification.exception).always(function() {\n                e.target.disabled = false;\n            });\n        }\n    });\n\n    // Custom search for categories table\n    $(document).on('keydown', '.mlnlpessay-categories-search', function(e) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            e.stopPropagation();\n            const query = $(this).val().toLowerCase();\n            if (!query) {\n                tables.categoriestable.clearFilter();\n                return;\n            }\n            tables.categoriestable.setFilter(function(data) {\n                return Object.values(data).some(val =>\n                    (val !== null && val !== undefined && (val + '').includes(query))\n                );\n            });\n        }\n    });\n};"],"names":["_interopRequireDefault","e","__esModule","default","_ajax","_notification","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_interopRequireWildcard","_tabulatorlib","_modal","_modal_events","_templates","_fragment","_jquery","SELECTORS","getData","async","data","response","Ajax","methodname","item","args","status","window","qtypeMlnlpessayCsvModalState","step","precheckData","formData","_exports","init","tables","categoriestable","Tabulator","layout","responsiveLayout","addRowPos","history","pagination","paginationSize","paginationSizeSelector","paginationCounter","movableColumns","initialSort","column","dir","columnDefaults","tooltip","columns","title","M","util","get_string","field","headerFilter","headerFilterLiveFilter","formatter","langstable","topicstable","subtopicstable","document","addEventListener","target","classList","contains","preventDefault","action","getAttribute","modal","Modal","create","getString","body","Templates","render","show","getRoot","on","ModalEvents","hidden","destroy","fragmentargs","id","Fragment","loadFragment","contextid","done","html","js","replaceNodeContents","$","find","stopPropagation","Notification","saveCancelPromise","then","formdata","this","serialize","addNotification","message","type","hide","replaceData","fail","exception","deleteCancelPromise","catch","newData","rows","length","prop","form","importid","disabled","closest","always","key","query","val","toLowerCase","clearFilter","setFilter","values","some","includes"],"mappings":"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"}