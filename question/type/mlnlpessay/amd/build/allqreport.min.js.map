{"version":3,"file":"allqreport.min.js","sources":["../src/allqreport.js"],"sourcesContent":["/* eslint-disable promise/catch-or-return */\n/* eslint-disable camelcase */\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable require-jsdoc */\n/* eslint-disable promise/always-return */\n/* eslint-disable no-unused-vars */\n/* eslint-disable babel/object-curly-spacing */\n/* eslint-disable space-before-function-paren */\n/* eslint-disable capitalized-comments */\n/* eslint-disable promise/catch-or-return */\n/* eslint-disable camelcase */\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable require-jsdoc */\n/* eslint-disable promise/always-return */\n/* eslint-disable no-unused-vars */\n/* eslint-disable babel/object-curly-spacing */\n/* eslint-disable space-before-function-paren */\n/* eslint-disable capitalized-comments */\ndefine([\n    \"jquery\",\n    \"https://unpkg.com/tabulator-tables/dist/js/tabulator.min.js\"\n], function ($, Tabulator) {\n    return {\n        init: function (data) {\n            var searchInput = $(\"#searchInput\");\n            var searchQuestionNumber = $(\"#searchQuestionNumber\");\n            var table;\n            var baseColumns = [\n                { title: \"Attempt ID\", field: \"qattid\", sorter: \"number\" },\n                { title: \"Question ID\", field: \"qid\", formatter: \"html\" },\n                { title: \"Question Number\", field: \"qnumber\" },\n                { title: \"Question Name\", field: \"questionname\", formatter: \"html\" },\n                { title: \"Quiz Name\", field: \"quizname\", formatter: \"html\" },\n                { title: \"User ID\", field: \"quizattuserid\", sorter: \"number\" },\n                { title: \"Attempt Number\", field: \"quizattattempt\", sorter: \"number\" },\n                { title: \"Response Summary\", field: \"qattresponsesummary\" },\n                { title: \"Attempt Time\", field: \"attempttime\" }, \n                { title: \"Course Name\", field: \"coursename\", formatter: \"html\" } \n            ];\n\n            try {\n                table = new Tabulator(\"#questionattempts\", {\n                    layout: \"fitColumns\",\n                    pagination: true,\n                    paginationMode: \"remote\",\n                    paginationSize: 20,\n                    paginationSizeSelector: [20, 40, 100, 1000],\n                    ajaxURL: M.cfg.wwwroot + \"/question/type/mlnlpessay/allreportajax.php\",\n                    ajaxContentType: \"json\",\n                    columns: baseColumns,\n                    ajaxResponse: function (url, params, response) {\n                        var dynamicColumns = [...baseColumns];\n                        \n                        for (var i = 10; i < response.coltitles.length; i++) { \n                            dynamicColumns.push({ \n                                title: response.coltitles[i], \n                                field: \"cat\" + (i - 10),\n                                sorter: \"string\" \n                            });\n                        }\n                    \n                        table.setColumns(dynamicColumns);\n                    \n                        return {\n                            data: response.attempts.map(function (row) {\n                                var rowData = {\n                                    qattid: row[0],\n                                    qid: row[1],\n                                    qnumber: row[2],\n                                    questionname: row[3],\n                                    quizname: row[4],\n                                    quizattuserid: row[5],\n                                    quizattattempt: row[6],\n                                    qattresponsesummary: row[7],\n                                    attempttime: row[8], \n                                    coursename: row[9] \n                                };\n                                for (var i = 10; i < row.length; i++) { \n                                    rowData[\"cat\" + (i - 10)] = row[i]; \n                                }\n                                return rowData;\n                            }),\n                            last_page: response.last_page\n                        };\n                    },\n                    ajaxURLGenerator: function (url, config, params) {\n                        url = M.cfg.wwwroot + \"/question/type/mlnlpessay/allreportajax.php\";\n                        url += \"?limit=\" + params.size + \"&offset=\" + ((params.page - 1) * params.size);\n                        if (params.sort && params.sort.length > 0) {\n                            url += \"&sort=\" + params.sort[0].dir + \"&col=\" + params.sort[0].field;\n                        }\n                        if (searchInput.val()) {\n                            url += \"&search=\" + encodeURIComponent(searchInput.val());\n                        }\n                        if (searchQuestionNumber.val()) {\n                            url += \"&questionnumber=\" + encodeURIComponent(searchQuestionNumber.val());\n                        }\n                        return url;\n                    },\n                    initialSort: [{ column: \"qattid\", dir: \"asc\" }]\n                });\n\n                searchInput.on(\"keyup\", function () {\n                    table.setData();\n                });\n\n                searchQuestionNumber.on(\"keyup\", function () {\n                    var selectedValue = $(this).val();\n                    if (selectedValue) {\n                        var newUrl = new URL(window.location);\n                        newUrl.searchParams.set('qidnumber', selectedValue);\n                        window.history.pushState({}, '', newUrl);\n                    } else {\n                        var newUrl = new URL(window.location);\n                        newUrl.searchParams.delete('qidnumber');\n                        window.history.pushState({}, '', newUrl);\n                    }\n                    table.setData();\n                });\n\n                var urlParams = new URLSearchParams(window.location.search);\n                if (urlParams.has('qidnumber')) {\n                    var initialQid = urlParams.get('qidnumber');\n                    searchQuestionNumber.val(initialQid);\n                }\n\n                $(\"#downloadFullDataButton\").click(function () {\n                    fetch(M.cfg.wwwroot + \"/question/type/mlnlpessay/allreportajax.php?limit=0\")\n                        .then(response => response.json())\n                        .then(data => {\n                            exportDataAsCsv(data);\n                        })\n                        .catch(error => console.error('Download error:', error));\n                });\n\n            } catch (error) {\n                console.error('Table initialization error:', error);\n            }\n\n            function exportDataAsCsv(data) {\n                const colTitles = data.coltitles;\n                const attempts = data.attempts;\n                let csv = colTitles.map(title => `\"${title}\"`).join(\",\") + \"\\n\";\n                attempts.forEach(attempt => {\n                    csv += attempt.map(field => {\n                        if (field === null || field === undefined) return '\"\"';\n                        return `\"${field.toString().replace(/\"/g, '\"\"')}\"`;\n                    }).join(\",\") + \"\\n\";\n                });\n\n                const blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\n                const link = document.createElement(\"a\");\n                link.href = window.URL.createObjectURL(blob);\n                link.download = \"all_questions_data.csv\";\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            }\n        }\n    };\n});"],"names":["define","$","Tabulator","init","data","table","searchInput","searchQuestionNumber","baseColumns","title","field","sorter","formatter","layout","pagination","paginationMode","paginationSize","paginationSizeSelector","ajaxURL","M","cfg","wwwroot","ajaxContentType","columns","ajaxResponse","url","params","response","dynamicColumns","i","coltitles","length","push","setColumns","attempts","map","row","rowData","qattid","qid","qnumber","questionname","quizname","quizattuserid","quizattattempt","qattresponsesummary","attempttime","coursename","last_page","ajaxURLGenerator","config","size","page","sort","dir","val","encodeURIComponent","initialSort","column","on","setData","newUrl","selectedValue","this","URL","window","location","searchParams","set","history","pushState","delete","urlParams","URLSearchParams","search","has","initialQid","get","click","fetch","then","json","colTitles","csv","join","forEach","attempt","toString","replace","blob","Blob","type","link","document","createElement","href","createObjectURL","download","body","appendChild","removeChild","exportDataAsCsv","catch","error","console"],"mappings":"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"}