define("mod_learningmap/renderer",["exports","core/ajax","core/log","core/pending"],(function(_exports,_ajax,_log,_pending){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Renderer module for the learningmap.
   *
   * @module     mod_learningmap/renderer
   * @copyright 2021-2024, ISB Bayern
   * @author     Philipp Memmel
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.selectors=_exports.renderLearningmap=_exports.init=void 0,_ajax=_interopRequireDefault(_ajax),_log=_interopRequireDefault(_log),_pending=_interopRequireDefault(_pending);const selectors={LEARNINGMAP_RENDER_CONTAINER_PREFIX:"learningmap-render-container-"};_exports.selectors=selectors;_exports.init=cmId=>{const rendererPendingPromise=new _pending.default("mod_learningmap/renderer-"+cmId);renderLearningmap(cmId),rendererPendingPromise.resolve()};const renderLearningmap=cmId=>{_ajax.default.call([{methodname:"mod_learningmap_get_learningmap",args:{cmId:cmId}}])[0].then((data=>(document.getElementById(selectors.LEARNINGMAP_RENDER_CONTAINER_PREFIX+cmId).innerHTML=data.content,document.querySelectorAll("a.external-link").forEach((link=>{link.addEventListener("click",(function(){!function(linkElement){const circleElement=linkElement.querySelector("circle"),placeId=circleElement?circleElement.getAttribute("id"):null,titleElement=linkElement.querySelector("text"),linkText=titleElement?titleElement.textContent:null;if(!placeId||completedPlaces.includes(placeId))return;completedPlaces.push({placeId:placeId,linkText:linkText});_ajax.default.call([{methodname:"mod_learningmap_set_externallinkcompleted",args:{completedPlaces:completedPlaces}}])[0].then((response=>{console.log("Server response:",response),response.sessionData&&console.log("Session Data from Server:",response.sessionData)})).catch((error=>{console.error("Error object:",error);try{console.error("Parsed Error:",JSON.stringify(error,null,2))}catch(e){console.error("Error is not JSON:",error)}}))}(this)}))})),!0))).catch((error=>(_log.default.error(error),!1)))};_exports.renderLearningmap=renderLearningmap;let completedPlaces=[]}));

//# sourceMappingURL=renderer.min.js.map