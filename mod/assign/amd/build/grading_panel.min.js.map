{"version":3,"file":"grading_panel.min.js","sources":["../src/grading_panel.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript controller for the \"Grading\" panel at the right of the page.\r\n *\r\n * @module     mod_assign/grading_panel\r\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      3.1\r\n */\r\ndefine([\r\n    'jquery',\r\n    'core/yui',\r\n    'core/notification',\r\n    'core/templates',\r\n    'core/fragment',\r\n    'core/ajax',\r\n    'core/str',\r\n    'mod_assign/grading_form_change_checker',\r\n    'mod_assign/grading_events',\r\n    'core_form/events',\r\n    'core/toast',\r\n    'core_form/changechecker',\r\n    'local_teamwork/rubric_export'\r\n], function(\r\n    $,\r\n    Y,\r\n    notification,\r\n    templates,\r\n    fragment,\r\n    ajax,\r\n    str,\r\n    checker,\r\n    GradingEvents,\r\n    FormEvents,\r\n    Toast,\r\n    FormChangeChecker,\r\n    RubricExport\r\n) {\r\n\r\n    /**\r\n     * GradingPanel class.\r\n     *\r\n     * @class mod_assign/grading_panel\r\n     * @param {String} selector The selector for the page region containing the user navigation.\r\n     */\r\n    var GradingPanel = function(selector) {\r\n        this._regionSelector = selector;\r\n        this._region = $(selector);\r\n        this._userCache = [];\r\n\r\n        this.registerEventListeners();\r\n    };\r\n\r\n    /** @property {String} Selector for the page region containing the user navigation. */\r\n    GradingPanel.prototype._regionSelector = null;\r\n\r\n    /** @property {Integer} Remember the last user id to prevent unnessecary reloads. */\r\n    GradingPanel.prototype._lastUserId = 0;\r\n\r\n    /** @property {Integer} Remember the last attempt number to prevent unnessecary reloads. */\r\n    GradingPanel.prototype._lastAttemptNumber = -1;\r\n\r\n    /** @property {JQuery} JQuery node for the page region containing the user navigation. */\r\n    GradingPanel.prototype._region = null;\r\n\r\n     /** @property {Integer} The id of the next user in the grading list */\r\n    GradingPanel.prototype.nextUserId = null;\r\n\r\n     /** @property {Boolean} Next user exists in the grading list */\r\n    GradingPanel.prototype.nextUser = false;\r\n\r\n    /**\r\n     * Fade the dom node out, update it, and fade it back.\r\n     *\r\n     * @private\r\n     * @method _niceReplaceNodeContents\r\n     * @param {JQuery} node\r\n     * @param {String} html\r\n     * @param {String} js\r\n     * @return {Deferred} promise resolved when the animations are complete.\r\n     */\r\n    GradingPanel.prototype._niceReplaceNodeContents = function(node, html, js) {\r\n        var promise = $.Deferred();\r\n\r\n        node.fadeOut(\"fast\", function() {\r\n            templates.replaceNodeContents(node, html, js);\r\n            node.fadeIn(\"fast\", function() {\r\n                promise.resolve();\r\n            });\r\n        });\r\n\r\n        return promise.promise();\r\n    };\r\n\r\n    /**\r\n     * Make sure all form fields have the latest saved state.\r\n     * @private\r\n     * @method _saveFormState\r\n     */\r\n    GradingPanel.prototype._saveFormState = function() {\r\n        // Copy data from notify students checkbox which was moved out of the form.\r\n        var checked = $('[data-region=\"grading-actions-form\"] [name=\"sendstudentnotifications\"]').prop(\"checked\");\r\n        $('.gradeform [name=\"sendstudentnotifications\"]').val(checked);\r\n    };\r\n\r\n    /**\r\n     * Make form submit via ajax.\r\n     *\r\n     * @private\r\n     * @param {Object} event\r\n     * @param {Integer} nextUserId\r\n     * @param {Boolean} nextUser optional. Load next user in the grading list.\r\n     * @method _submitForm\r\n     * @fires event:formSubmittedByJavascript\r\n     */\r\n    GradingPanel.prototype._submitForm = function(event, nextUserId, nextUser) {\r\n        // If the form has data in comment-area, then we need to save that comment\r\n        var commentAreaElement = document.querySelector('.comment-area');\r\n        if (commentAreaElement) {\r\n            var commentTextAreaElement = commentAreaElement.querySelector('.db > textarea');\r\n            if (commentTextAreaElement.value !== '') {\r\n                var commentActionPostElement = commentAreaElement.querySelector('.fd a[id^=\"comment-action-post-\"]');\r\n                commentActionPostElement.click();\r\n            }\r\n        }\r\n\r\n        // The form was submitted - send it via ajax instead.\r\n        var form = $(this._region.find('form.gradeform'));\r\n\r\n        $('[data-region=\"overlay\"]').show();\r\n\r\n        // Mark the form as submitted in the change checker.\r\n        FormChangeChecker.markFormSubmitted(form[0]);\r\n\r\n        // We call this, so other modules can update the form with the latest state.\r\n        form.trigger('save-form-state');\r\n\r\n        // Tell all form fields we are about to submit the form.\r\n        FormEvents.notifyFormSubmittedByJavascript(form[0]);\r\n\r\n        // Now we get all the current values from the form.\r\n        var data = form.serialize();\r\n        var assignmentid = this._region.attr('data-assignmentid');\r\n\r\n        // Now we can continue...\r\n        ajax.call([{\r\n            methodname: 'mod_assign_submit_grading_form',\r\n            args: {assignmentid: assignmentid, userid: this._lastUserId, jsonformdata: JSON.stringify(data)},\r\n            done: this._handleFormSubmissionResponse.bind(this, data, nextUserId, nextUser),\r\n            fail: notification.exception\r\n        }]);\r\n    };\r\n\r\n    /**\r\n     * Handle form submission response.\r\n     *\r\n     * @private\r\n     * @method _handleFormSubmissionResponse\r\n     * @param {Array} formdata - submitted values\r\n     * @param {Number} [nextUserId] The id of the user to load after the form is saved\r\n     * @param {Boolean} [nextUser] - Whether to switch to next user in the grading list.\r\n     * @param {Array} response List of errors.\r\n     */\r\n    GradingPanel.prototype._handleFormSubmissionResponse = function(formdata, nextUserId, nextUser, response) {\r\n        if (typeof nextUserId === \"undefined\") {\r\n            nextUserId = this._lastUserId;\r\n        }\r\n        if (response.length) {\r\n            str.get_string('errorgradechangessaveddetail', 'mod_assign')\r\n                .then(function(str) {\r\n                    Toast.add(str, {type: 'danger', delay: 4000});\r\n                    return str;\r\n                })\r\n                .catch(notification.exception);\r\n\r\n            // There was an error saving the grade. Re-render the form using the submitted data so we can show\r\n            // validation errors.\r\n            $(document).trigger('reset', [this._lastUserId, formdata, true]);\r\n        } else {\r\n            str.get_string('gradechangessaveddetail', 'mod_assign')\r\n            .then(function(str) {\r\n                Toast.add(str);\r\n                return str;\r\n            })\r\n            .catch(notification.exception);\r\n\r\n            // Reset the form state.\r\n            var form = $(this._region.find('form.gradeform'));\r\n            FormChangeChecker.resetFormDirtyState(form[0]);\r\n\r\n            if (nextUserId == this._lastUserId) {\r\n                $(document).trigger('reset', nextUserId);\r\n            } else if (nextUser) {\r\n                $(document).trigger('done-saving-show-next', true);\r\n            } else {\r\n                $(document).trigger('user-changed', nextUserId);\r\n            }\r\n        }\r\n        $('[data-region=\"overlay\"]').hide();\r\n    };\r\n\r\n    /**\r\n     * Refresh form with default values.\r\n     *\r\n     * @private\r\n     * @method _resetForm\r\n     * @param {Event} e\r\n     * @param {Integer} userid\r\n     * @param {Array} formdata\r\n     * @param {Boolean} unresolvederror\r\n     */\r\n    GradingPanel.prototype._resetForm = function(e, userid, formdata, unresolvederror) {\r\n        // The form was cancelled - refresh with default values.\r\n        var event = $.Event(\"custom\");\r\n        if (typeof userid == \"undefined\") {\r\n            userid = this._lastUserId;\r\n        }\r\n        this._lastUserId = 0;\r\n        this._refreshGradingPanel(event, userid, formdata, -1, unresolvederror);\r\n    };\r\n\r\n    /**\r\n     * Open a picker to choose an older attempt.\r\n     *\r\n     * @private\r\n     * @param {Object} e\r\n     * @method _chooseAttempt\r\n     */\r\n    GradingPanel.prototype._chooseAttempt = function(e) {\r\n        // Show a dialog.\r\n\r\n        // The form is in the element pointed to by data-submissions.\r\n        var link = $(e.target);\r\n        var submissionsId = link.data('submissions');\r\n        var submissionsform = $(document.getElementById(submissionsId));\r\n        var formcopy = submissionsform.clone();\r\n        var formhtml = formcopy.wrap($('<form/>')).html();\r\n\r\n        str.get_strings([\r\n            {key: 'viewadifferentattempt', component: 'mod_assign'},\r\n            {key: 'view', component: 'core'},\r\n            {key: 'cancel', component: 'core'},\r\n        ]).done(function(strs) {\r\n            notification.confirm(strs[0], formhtml, strs[1], strs[2], function() {\r\n                var attemptnumber = $(\"input:radio[name='select-attemptnumber']:checked\").val();\r\n\r\n                this._refreshGradingPanel(null, this._lastUserId, '', attemptnumber);\r\n            }.bind(this));\r\n        }.bind(this)).fail(notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Add popout buttons\r\n     *\r\n     * @private\r\n     * @method _addPopoutButtons\r\n     * @param {JQuery} selector The region selector to add popout buttons to.\r\n     */\r\n    GradingPanel.prototype._addPopoutButtons = function(selector) {\r\n        var region = $(selector);\r\n\r\n        templates.render('mod_assign/popout_button', {}).done(function(html) {\r\n            var parents = region.find('[data-fieldtype=\"filemanager\"],[data-fieldtype=\"editor\"],[data-fieldtype=\"grading\"]')\r\n                    .closest('.fitem');\r\n            parents.addClass('has-popout').find('label:first').parent().append(html);\r\n\r\n            region.on('click', '[data-region=\"popout-button\"]', this._togglePopout.bind(this));\r\n        }.bind(this)).fail(notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Make a div \"popout\" or \"popback\".\r\n     *\r\n     * @private\r\n     * @method _togglePopout\r\n     * @param {Event} event\r\n     */\r\n    GradingPanel.prototype._togglePopout = function(event) {\r\n        event.preventDefault();\r\n        var container = $(event.target).closest('.fitem');\r\n        if (container.hasClass('popout')) {\r\n            $('.popout').removeClass('popout');\r\n        } else {\r\n            $('.popout').removeClass('popout');\r\n            container.addClass('popout');\r\n            container.addClass('moodle-has-zindex');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the user context - re-render the template in the page.\r\n     *\r\n     * @private\r\n     * @method _refreshGradingPanel\r\n     * @param {Event} event\r\n     * @param {Number} userid\r\n     * @param {String} submissiondata serialised submission data.\r\n     * @param {Integer} attemptnumber\r\n     * @param {Boolean} unresolvederror\r\n     */\r\n    GradingPanel.prototype._refreshGradingPanel = function(event, userid, submissiondata, attemptnumber, unresolvederror) {\r\n        var contextid = this._region.attr('data-contextid');\r\n        if (typeof submissiondata === 'undefined') {\r\n            submissiondata = '';\r\n        }\r\n        if (typeof attemptnumber === 'undefined') {\r\n            attemptnumber = -1;\r\n        }\r\n        if (typeof unresolvederror === 'undefined') {\r\n            unresolvederror = false;\r\n        }\r\n        // Skip reloading if it is the same user.\r\n        if (this._lastUserId == userid && this._lastAttemptNumber == attemptnumber && submissiondata === '') {\r\n            return;\r\n        }\r\n        this._lastUserId = userid;\r\n        this._lastAttemptNumber = attemptnumber;\r\n        $(document).trigger('start-loading-user');\r\n        // Tell behat to back off too.\r\n        window.M.util.js_pending('mod-assign-loading-user');\r\n        // First insert the loading template.\r\n        templates.render('mod_assign/loading', {}).done(function(html, js) {\r\n            // Update the page.\r\n            this._niceReplaceNodeContents(this._region, html, js).done(function() {\r\n                if (userid > 0) {\r\n                    this._region.show();\r\n                    // Reload the grading form \"fragment\" for this user.\r\n                    var params = {userid: userid, attemptnumber: attemptnumber, jsonformdata: JSON.stringify(submissiondata)};\r\n                    fragment.loadFragment('mod_assign', 'gradingpanel', contextid, params).done(function(html, js) {\r\n\r\n                        // Reset whole grading page when there is a failure in retrieving the html\r\n                        // i.e. user no longer under \"requires grading\" filter when graded\r\n                        if (html === '') {\r\n                            $(document).trigger('reset-table', true);\r\n                        }\r\n\r\n                        this._niceReplaceNodeContents(this._region, html, js)\r\n                        .done(function() {\r\n                            checker.saveFormState('[data-region=\"grade-panel\"] .gradeform');\r\n                            $(document).on('editor-content-restored', function() {\r\n                                // If the editor has some content that has been restored\r\n                                // then save the form state again for comparison.\r\n                                checker.saveFormState('[data-region=\"grade-panel\"] .gradeform');\r\n                            });\r\n                            $('[data-region=\"attempt-chooser\"]').on('click', this._chooseAttempt.bind(this));\r\n                            this._addPopoutButtons('[data-region=\"grade-panel\"] .gradeform');\r\n                            if (unresolvederror) {\r\n                                $('[data-region=\"grade-panel\"] .gradeform').data('unresolved-error', true);\r\n                            }\r\n                            $(document).trigger('finish-loading-user');\r\n                            // Tell behat we are friends again.\r\n                            window.M.util.js_complete('mod-assign-loading-user');\r\n                        }.bind(this))\r\n                        .fail(notification.exception);\r\n                    }.bind(this)).fail(notification.exception);\r\n                    // Export rubric to pdf.\r\n                    RubricExport.init(userid, function(){\r\n                        var url = $(location).attr('href');\r\n                        $(location).attr('href', url);\r\n                    });\r\n                    $('[data-region=\"review-panel\"]').show();\r\n                } else {\r\n                    this._region.hide();\r\n                    $('[data-region=\"review-panel\"]').hide();\r\n                    $(document).trigger('finish-loading-user');\r\n                    // Tell behat we are friends again.\r\n                    window.M.util.js_complete('mod-assign-loading-user');\r\n                }\r\n            }.bind(this));\r\n        }.bind(this)).fail(notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Get next user data and store it in global variables\r\n     *\r\n     * @private\r\n     * @method _getNextUser\r\n     * @param {Event} event\r\n     * @param {Object} data Next user's data\r\n     */\r\n    GradingPanel.prototype._getNextUser = function(event, data) {\r\n        this.nextUserId = data.nextUserId;\r\n        this.nextUser = data.nextUser;\r\n    };\r\n\r\n    /**\r\n     * Handle the save-and-show-next event\r\n     *\r\n     * @private\r\n     * @method _handleSaveAndShowNext\r\n     */\r\n    GradingPanel.prototype._handleSaveAndShowNext = function() {\r\n        this._submitForm(null, this.nextUserId, this.nextUser);\r\n    };\r\n\r\n    /**\r\n     * Get the grade panel element.\r\n     *\r\n     * @method getPanelElement\r\n     * @return {jQuery}\r\n     */\r\n    GradingPanel.prototype.getPanelElement = function() {\r\n        return $('[data-region=\"grade-panel\"]');\r\n    };\r\n\r\n    /**\r\n     * Hide the grade panel.\r\n     *\r\n     * @method collapsePanel\r\n     */\r\n    GradingPanel.prototype.collapsePanel = function() {\r\n        this.getPanelElement().addClass('collapsed');\r\n    };\r\n\r\n    /**\r\n     * Show the grade panel.\r\n     *\r\n     * @method expandPanel\r\n     */\r\n    GradingPanel.prototype.expandPanel = function() {\r\n        this.getPanelElement().removeClass('collapsed');\r\n    };\r\n\r\n    /**\r\n     * Register event listeners for the grade panel.\r\n     *\r\n     * @method registerEventListeners\r\n     */\r\n    GradingPanel.prototype.registerEventListeners = function() {\r\n        var docElement = $(document);\r\n        var region = $(this._region);\r\n        // Add an event listener to prevent form submission when pressing enter key.\r\n        region.on('submit', 'form', function(e) {\r\n            e.preventDefault();\r\n        });\r\n\r\n        docElement.on('next-user', this._getNextUser.bind(this));\r\n        docElement.on('user-changed', this._refreshGradingPanel.bind(this));\r\n        docElement.on('save-changes', this._submitForm.bind(this));\r\n        docElement.on('save-and-show-next', this._handleSaveAndShowNext.bind(this));\r\n        docElement.on('reset', this._resetForm.bind(this));\r\n\r\n        docElement.on('save-form-state', this._saveFormState.bind(this));\r\n\r\n        docElement.on(GradingEvents.COLLAPSE_GRADE_PANEL, function() {\r\n            this.collapsePanel();\r\n        }.bind(this));\r\n\r\n        // We should expand if the review panel is collapsed.\r\n        docElement.on(GradingEvents.COLLAPSE_REVIEW_PANEL, function() {\r\n            this.expandPanel();\r\n        }.bind(this));\r\n\r\n        docElement.on(GradingEvents.EXPAND_GRADE_PANEL, function() {\r\n            this.expandPanel();\r\n        }.bind(this));\r\n    };\r\n\r\n    return GradingPanel;\r\n});\r\n"],"names":["define","$","Y","notification","templates","fragment","ajax","str","checker","GradingEvents","FormEvents","Toast","FormChangeChecker","RubricExport","GradingPanel","selector","this","_regionSelector","_region","_userCache","registerEventListeners","prototype","_lastUserId","_lastAttemptNumber","nextUserId","nextUser","_niceReplaceNodeContents","node","html","js","promise","Deferred","fadeOut","replaceNodeContents","fadeIn","resolve","_saveFormState","checked","prop","val","_submitForm","event","commentAreaElement","document","querySelector","value","click","form","find","show","markFormSubmitted","trigger","notifyFormSubmittedByJavascript","data","serialize","assignmentid","attr","call","methodname","args","userid","jsonformdata","JSON","stringify","done","_handleFormSubmissionResponse","bind","fail","exception","formdata","response","length","get_string","then","add","type","delay","catch","resetFormDirtyState","hide","_resetForm","e","unresolvederror","Event","_refreshGradingPanel","_chooseAttempt","submissionsId","target","formhtml","getElementById","clone","wrap","get_strings","key","component","strs","confirm","attemptnumber","_addPopoutButtons","region","render","closest","addClass","parent","append","on","_togglePopout","preventDefault","container","hasClass","removeClass","submissiondata","contextid","window","M","util","js_pending","params","loadFragment","saveFormState","js_complete","init","url","location","_getNextUser","_handleSaveAndShowNext","getPanelElement","collapsePanel","expandPanel","docElement","COLLAPSE_GRADE_PANEL","COLLAPSE_REVIEW_PANEL","EXPAND_GRADE_PANEL"],"mappings":"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"}