{"version":3,"file":"tables.min.js","sources":["../src/tables.js"],"sourcesContent":["/* eslint-disable no-console */\r\n/* eslint-disable require-jsdoc */\r\n/* eslint-disable max-len */\r\n/* eslint-disable complexity */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable jsdoc/require-jsdoc */\r\nimport Notification from \"core/notification\";\r\nimport * as Str from \"core/str\";\r\nimport $ from \"jquery\";\r\nimport Tabulator from \"report/advancedoverview/js/tabulator.min.js\";\r\nimport * as Main from \"quiz_advancedoverview/main\";\r\nimport * as studentsTableActions from \"quiz_advancedoverview/studentsTableActions\";\r\n\r\nconst locale = getLocale();\r\n\r\nexport let QLENGTH = 0;\r\nconst SELECTORS = {};\r\nexport const TEMPCONFIG = {};\r\n\r\nlet outerQuestions;\r\n\r\nexport const TABLES = {};\r\nexport const translatedStrings = {};\r\nexport const hideLoadingIcon = () => {\r\n    document.body.classList.remove('petel-loading');\r\n};\r\n\r\n// function to initialize table of diagnostic questions\r\nexport const initdiagnosticquestionstable = function (data, questions) {\r\n    let textDirection = $(\"html\").attr(\"dir\");\r\n\r\n    outerQuestions = questions;\r\n    let tabledata = JSON.parse(data);\r\n    QLENGTH = tabledata.length;\r\n\r\n    var wrongTitle = locale === 'he-IL' ? \"שגו\" : \"Wrong\";\r\n\r\n    let content = {\r\n        headerSortElement: function (column, dir) {\r\n            switch (dir) {\r\n                case \"asc\":\r\n                    return \"<i class='fas fa-sort-up'>\";\r\n                case \"desc\":\r\n                    return \"<i class='fas fa-sort-down'>\";\r\n                default:\r\n                    return \"<i class='fas fa-sort'>\";\r\n            }\r\n        },\r\n        locale: locale,\r\n        data: tabledata,\r\n        autoColumns: true,\r\n        movableRows: false,\r\n        maxHeight: 280,\r\n        textDirection: textDirection,\r\n        layout: \"fitColumns\",\r\n        autoColumnsDefinitions: function (definitions) {\r\n            definitions.forEach((column, i) => {\r\n                switch (i) {\r\n                    case 0:\r\n                        column.maxWidth = \"50px\";\r\n                        break;\r\n                    case 1:\r\n                        column.headerSort = false;\r\n                        column.formatter = \"html\";\r\n                        column.widthGrow = 5;\r\n                        column.hozAlign = \"start\";\r\n                        column.vertAlign = \"middle\";\r\n                        break;\r\n                    case 2:\r\n                        column.maxWidth = \"80px\";\r\n                        break;\r\n                    case 3:\r\n                        column.maxWidth = \"90px\";\r\n                        break;\r\n                    case 4:\r\n                        column.maxWidth = \"120px\";\r\n                        break;\r\n                    case 5:\r\n                        column.maxWidth = \"160px\";\r\n                        break;\r\n                    case 6:\r\n                        column.maxWidth = \"140px\";\r\n                        break;\r\n                    default:\r\n                        column.hozAlign = \"center\";\r\n                        column.vertAlign = \"middle\";\r\n                        column.widthGrow = 0;\r\n                        break;\r\n                }\r\n            });\r\n            return definitions;\r\n        },\r\n        rowFormatter: function (row) {\r\n            row.getElement().style.height = \"48px\";\r\n        },\r\n        initialSort: [\r\n            { column: wrongTitle, dir: \"desc\" },\r\n        ],\r\n    };\r\n\r\n    TABLES.diagnosticQuestionsTable = new Tabulator(\"#diagnostic-table\", content);\r\n};\r\n\r\nexport const initquestionstable = function (data, questions) {\r\n    SELECTORS.studentstableNavFilter = document.getElementById(\r\n        \"studentstableNavFilter\"\r\n    );\r\n    SELECTORS.studentsActionsCollapse = document.getElementById(\r\n        \"studentsActionsCollapse\"\r\n    );\r\n\r\n    let textDirection = $(\"html\").attr(\"dir\");\r\n\r\n    outerQuestions = questions;\r\n    let tabledata = JSON.parse(data);\r\n    QLENGTH = tabledata.length;\r\n\r\n    var wrongTitle = locale === 'he-IL' ? \"שגו\" : \"Wrong\";\r\n\r\n    let content = {\r\n        headerSortElement: function (column, dir) {\r\n            switch (dir) {\r\n                case \"asc\":\r\n                    return \"<i class='fas fa-sort-up'>\";\r\n                case \"desc\":\r\n                    return \"<i class='fas fa-sort-down'>\";\r\n                default:\r\n                    return \"<i class='fas fa-sort'>\";\r\n            }\r\n        },\r\n        locale: locale,\r\n        data: tabledata,\r\n        autoColumns: true,\r\n        movableRows: false,\r\n        maxHeight: 280,\r\n        textDirection: textDirection,\r\n        layout: \"fitColumns\",\r\n        autoColumnsDefinitions: function (definitions) {\r\n            definitions.forEach((column, i) => {\r\n                switch (i) {\r\n                    case 0:\r\n                        column.maxWidth = \"50px\";\r\n                        break;\r\n                    case 1:\r\n                        column.headerSort = false;\r\n                        column.formatter = \"html\";\r\n                        column.widthGrow = 5;\r\n                        column.hozAlign = \"start\";\r\n                        column.vertAlign = \"middle\";\r\n                        // Custom sorter function commented out\r\n                        // column.sorter = function(a, b, aRow, bRow, column, dir, sorterParams) {\r\n                        //   let aDesc = $(a).find('.description').text();\r\n                        //   let bDesc = $(b).find('.description').text();\r\n                        //   return aDesc.localeCompare(bDesc);\r\n                        // };\r\n                        break;\r\n                    case 2:\r\n                        column.sorter = function(a, b, aRow, bRow, column, dir, sorterParams) {\r\n                            return question_table_number_sort(a, b);\r\n                        };\r\n\r\n                        column.maxWidth = \"80px\";\r\n                        break;\r\n                    case 3:\r\n                        column.sorter = function(a, b, aRow, bRow, column, dir, sorterParams) {\r\n                            return question_table_number_sort(a, b);\r\n                        };\r\n\r\n                        column.maxWidth = \"90px\";\r\n                        break;\r\n                    case 4:\r\n                        column.sorter = function(a, b, aRow, bRow, column, dir, sorterParams) {\r\n                            return question_table_number_sort(a, b);\r\n                        };\r\n\r\n                        column.maxWidth = \"120px\";\r\n                        break;\r\n                    case 5:\r\n                        column.sorter = function(a, b, aRow, bRow, column, dir, sorterParams) {\r\n                            return question_table_number_sort(a, b);\r\n                        };\r\n\r\n                        column.maxWidth = \"160px\";\r\n                        break;\r\n                    case 6:\r\n                        column.sorter = function(a, b, aRow, bRow, column, dir, sorterParams) {\r\n                            return question_table_number_sort(a, b);\r\n                        };\r\n\r\n                        column.maxWidth = \"140px\";\r\n                        break;\r\n                    default:\r\n                        column.hozAlign = \"center\";\r\n                        column.vertAlign = \"middle\";\r\n                        column.widthGrow = 0;\r\n                        break;\r\n                }\r\n\r\n                column.formatter = function (cell) {\r\n                    return cell.getValue();\r\n                };\r\n            });\r\n            return definitions;\r\n        },\r\n        rowFormatter: function (row) {\r\n            row.getElement().style.height = \"48px\";\r\n        },\r\n        initialSort: [\r\n            { column: wrongTitle, dir: \"desc\" },\r\n        ],\r\n    };\r\n\r\n\r\n    TABLES.questionsTable = new Tabulator(\"#questions-table\", content);\r\n};\r\n\r\n/**\r\n * Retrieves the current 'lang' attribute from the HTML tag and returns\r\n * the corresponding locale based on the provided mappings.\r\n *\r\n * Mappings:\r\n * 'he' => 'he-IL'\r\n * 'en' => 'en-GB'\r\n *\r\n * If no mapping is found, it returns the original 'lang' value.\r\n *\r\n * @returns {string} - The locale string corresponding to the 'lang' attribute of the HTML tag.\r\n *                     If no specific mapping is found, returns the 'lang' value directly.\r\n */\r\nfunction getLocale() {\r\n    let lang = document.documentElement.getAttribute(\"lang\");\r\n    let locale;\r\n    switch (lang) {\r\n        case \"he\":\r\n            locale = \"he-IL\";\r\n            break;\r\n        case \"he-kids\":\r\n            locale = \"he-IL\";\r\n            break;\r\n        case \"en\":\r\n            locale = \"en-GB\";\r\n            break;\r\n        default:\r\n            locale = lang;\r\n    }\r\n\r\n    return locale;\r\n}\r\n\r\nfunction question_table_number_sort (a, b) {\r\n    let aNum = $(a).find('.numerical_value').text();\r\n    let bNum = $(b).find('.numerical_value').text();\r\n\r\n    return aNum - bNum;\r\n}\r\n\r\n/**\r\n * Compares and sorts two rows based on the attempt number.\r\n *\r\n * @param {object} aRow - The first row object to compare.\r\n * @param {object} bRow - The second row object to compare.\r\n * @param {string} dir - The sorting direction ('asc' for ascending, 'desc' for descending).\r\n * @returns {number} - A negative value if aRow should come before bRow, a positive value\r\n * if aRow should come after bRow, or 0 if they are equal.\r\n */\r\nfunction attemptNumberSorter(aRow, bRow, dir) {\r\n    const isChildRow = aRow._row.data.child || bRow._row.data.child;\r\n    let a = \"\" + aRow._row.data.attempt_number;\r\n    let b = \"\" + bRow._row.data.attempt_number;\r\n\r\n    if (isChildRow) {\r\n        return dir === \"asc\" ? b.localeCompare(a, locale) : a.localeCompare(b, locale);\r\n    } else {\r\n        return a.localeCompare(b, locale);\r\n    }\r\n}\r\n\r\nexport const initstudentstable = function (data, summary = '', anon = 0) {\r\n    const rowsonpage = 20;\r\n    const self = this;\r\n    const strings = [\r\n        {key: \"viewingprofile\", component: \"quiz_advancedoverview\"},\r\n        {key: \"passwordreset\", component: \"quiz_advancedoverview\"},\r\n        {key: \"loginasthisstudent\", component: \"quiz_advancedoverview\"},\r\n        {key: \"allcoursereport\", component: \"quiz_advancedoverview\"},\r\n        {key: \"courseobservationreport\", component: \"quiz_advancedoverview\"},\r\n        {key: \"sendingmessage\", component: \"quiz_advancedoverview\"},\r\n        {key: \"recalculategrades\", component: \"quiz_advancedoverview\"},\r\n        {key: \"fullname\", component: \"quiz_advancedoverview\"},\r\n        {key: \"team\", component: \"quiz_advancedoverview\"},\r\n        {key: \"state\", component: \"quiz_advancedoverview\"},\r\n        {key: \"attempt_number\", component: \"quiz_advancedoverview\"},\r\n        {key: \"grade\", component: \"quiz_advancedoverview\"},\r\n        {key: \"starttime\", component: \"quiz_advancedoverview\"},\r\n        {key: \"endtime\", component: \"quiz_advancedoverview\"},\r\n        {key: \"duration\", component: \"quiz_advancedoverview\"},\r\n        {key: \"empty\", component: \"quiz_advancedoverview\"},\r\n        {key: \"pagetitle\", component: \"quiz_advancedoverview\"},\r\n        {key: \"firsttitle\", component: \"quiz_advancedoverview\"},\r\n        {key: \"lasttitle\", component: \"quiz_advancedoverview\"},\r\n        {key: \"prevtitle\", component: \"quiz_advancedoverview\"},\r\n        {key: \"nexttitle\", component: \"quiz_advancedoverview\"},\r\n        {key: \"all\", component: \"quiz_advancedoverview\"},\r\n        {key: \"firstname\", component: \"quiz_advancedoverview\"},\r\n        {key: \"lastname\", component: \"quiz_advancedoverview\"},\r\n    ];\r\n\r\n    Str.get_strings(strings)\r\n        .done(function (str) {\r\n            self.translatedStrings.viewingprofile = str[0];\r\n            self.translatedStrings.passwordreset = str[1];\r\n            self.translatedStrings.loginasthisstudent = str[2];\r\n            self.translatedStrings.allcoursereport = str[3];\r\n            self.translatedStrings.courseobservationreport = str[4];\r\n            self.translatedStrings.sendingmessage = str[5];\r\n            self.translatedStrings.recalculategrades = str[6];\r\n            self.translatedStrings.fullname = str[7];\r\n            self.translatedStrings.team = str[8];\r\n            self.translatedStrings.state = str[9];\r\n            self.translatedStrings.attemptNumber = str[10];\r\n            self.translatedStrings.grade = str[11];\r\n            self.translatedStrings.starttime = str[12];\r\n            self.translatedStrings.endtime = str[13];\r\n            self.translatedStrings.duration = str[14];\r\n            self.translatedStrings.emptyTable = str[15];\r\n            self.translatedStrings.pageTitle = str[16];\r\n            self.translatedStrings.firstTitle = str[17];\r\n            self.translatedStrings.lastTitle = str[18];\r\n            self.translatedStrings.prevTitle = str[19];\r\n            self.translatedStrings.nextTitle = str[20];\r\n            self.translatedStrings.all = str[21];\r\n            self.translatedStrings.firstname = str[22];\r\n            self.translatedStrings.lastname = str[23];\r\n            const clickMenu = [\r\n                {\r\n                    disabled: function (component) {\r\n                        return component.getData().userprofilelink ? false : true;\r\n                    },\r\n                    label: `<span>${self.translatedStrings.viewingprofile}</span>`,\r\n                    action: function (e, row) {\r\n                        var link = row.getData().userprofilelink;\r\n                        window.open(link, \"_blank\");\r\n                    },\r\n                },\r\n                {\r\n                    disabled: function (component) {\r\n                        return component.getData().resetpasswordlink ? false : true;\r\n                    },\r\n                    label: `<span>${self.translatedStrings.passwordreset}</span>`,\r\n                    action: function (e, row) {\r\n                        var link = row.getData().resetpasswordlink;\r\n                        window.open(link, \"_blank\");\r\n                    },\r\n                },\r\n                {\r\n                    disabled: function (component) {\r\n                        return component.getData().loginaslink ? false : true;\r\n                    },\r\n                    label: `<span>${self.translatedStrings.loginasthisstudent}</span>`,\r\n                    action: function (e, row) {\r\n                        var link = row.getData().loginaslink;\r\n                        window.open(link, \"_blank\");\r\n                    },\r\n                },\r\n                {\r\n                    disabled: function (component) {\r\n                        return component.getData().completereportlink ? false : true;\r\n                    },\r\n                    label: `<span>${self.translatedStrings.allcoursereport}</span>`,\r\n                    action: function (e, row) {\r\n                        var link = row.getData().completereportlink;\r\n                        window.open(link, \"_blank\");\r\n                    },\r\n                },\r\n                {\r\n                    disabled: function (component) {\r\n                        return component.getData().outlinereportlink ? false : true;\r\n                    },\r\n                    label: `<span>${self.translatedStrings.courseobservationreport}</span>`,\r\n                    action: function (e, row) {\r\n                        var link = row.getData().outlinereportlink;\r\n                        window.open(link, \"_blank\");\r\n                    },\r\n                },\r\n                {\r\n                    separator: true,\r\n                },\r\n                {\r\n                    label: `<span>${self.translatedStrings.sendingmessage}</span>`,\r\n                    action: function (e, row) {\r\n                        var userid = row.getData().userid;\r\n                        Main.showMessagePopup([userid]);\r\n                    },\r\n                },\r\n                {\r\n                    disabled: function (component) {\r\n                        return component.getData().attemptid ? false : true;\r\n                    },\r\n                    label: `<span>${self.translatedStrings.recalculategrades}</span>`,\r\n                    action: function (e, row) {\r\n                        var rowData = row.getData();\r\n                        Main.regradaAttemtps(\r\n                            +Main.TEMPDATA.cmid,\r\n                            +Main.TEMPDATA.courseid,\r\n                            +Main.TEMPDATA.quizid,\r\n                            rowData.attemptid\r\n                        );\r\n                    },\r\n                },\r\n            ];\r\n\r\n            let textDirection = $(\"html\").attr(\"dir\");\r\n\r\n            let tabledata = JSON.parse(data);\r\n\r\n            const linkRegex = /<a[^>]*>([^<]+)<\\/a>/;\r\n            tabledata.map((el) => {\r\n                const newGrade = linkRegex.exec(el.grade);\r\n                if (newGrade) {\r\n                    el.grade = newGrade[1];\r\n                }\r\n\r\n                return el;\r\n            });\r\n\r\n            let content = {\r\n                headerSortElement: function (column, dir) {\r\n                    switch (dir) {\r\n                        case \"asc\":\r\n                            return \"<i class='fas fa-sort-up'>\";\r\n                        case \"desc\":\r\n                            return \"<i class='fas fa-sort-down'>\";\r\n                        default:\r\n                            return \"<i class='fas fa-sort'>\";\r\n                    }\r\n                },\r\n\r\n                placeholder: self.translatedStrings.emptyTable,\r\n                locale: locale,\r\n\r\n                langs:{\r\n                    \"he-IL\":{\r\n                        \"pagination\":{\r\n                            \"page_title\": self.translatedStrings.pageTitle,\r\n                            \"first\": self.translatedStrings.firstTitle,\r\n                            \"first_title\": self.translatedStrings.firstTitle,\r\n                            \"last\": self.translatedStrings.lastTitle,\r\n                            \"last_title\": self.translatedStrings.lastTitle,\r\n                            \"prev\": self.translatedStrings.prevTitle,\r\n                            \"prev_title\": self.translatedStrings.prevTitle,\r\n                            \"next\": self.translatedStrings.nextTitle,\r\n                            \"next_title\": self.translatedStrings.nextTitle,\r\n                            \"all\": self.translatedStrings.all,\r\n                        },\r\n                    },\r\n                },\r\n\r\n                data: tabledata,\r\n                autoColumns: true,\r\n                movableRows: false,\r\n                textDirection: textDirection,\r\n                frozenRows: 0,\r\n                pagination: false,\r\n                paginationSize: rowsonpage,\r\n                rowHeight: 48,\r\n                dataTree: true,\r\n                dataTreeStartExpanded: true,\r\n                layout: \"fitDataFill\",\r\n                autoColumnsDefinitions: function (definitions) {\r\n                    definitions.forEach((column, i) => {\r\n                        const fieldName = column.field;\r\n                        column.formatter = \"html\";\r\n                        column.topCalc = customTopCalc;\r\n                        column.topCalcParams = {field: column.field};\r\n                        switch (fieldName) {\r\n                            case \"checkbox\":\r\n                                column.formatter = \"rowSelection\";\r\n                                column.titleFormatter = \"rowSelection\";\r\n                                column.titleFormatterParams = {\r\n                                    rowRange: \"active\",\r\n                                };\r\n                                column.headerSort = false;\r\n                                column.hozAlign = \"center\";\r\n                                column.download = false;\r\n                                break;\r\n\r\n                            case \"fullname\":\r\n                                column.title = self.translatedStrings.fullname;\r\n                                column.headerSort = false;\r\n                                column.cellStyle = \"border-right: none;\";\r\n                                break;\r\n\r\n                            case \"team\":\r\n                                column.title = self.translatedStrings.team;\r\n                                break;\r\n\r\n                            case \"state\":\r\n                                column.title = self.translatedStrings.state;\r\n                                break;\r\n\r\n                            case \"attempt_number\":\r\n                                column.title = self.translatedStrings.attemptNumber;\r\n                                column.sorter = \"number\";\r\n                                column.hozAlign = \"center\";\r\n                                column.cssClass = 'justify-content-center';\r\n                                break;\r\n\r\n                            case \"grade\":\r\n                                column.title = self.translatedStrings.grade;\r\n                                column.sorter = \"number\";\r\n                                column.hozAlign = \"center\";\r\n                                column.cssClass = 'justify-content-center';\r\n                                break;\r\n\r\n                            case \"starttime\":\r\n                                column.title = self.translatedStrings.starttime;\r\n                                column.formatter = function (cell) {\r\n                                    var cellValue = cell.getValue();\r\n                                    if (cellValue === '—') {\r\n                                        let wrappedValue = document.createElement(\"span\");\r\n                                        wrappedValue.className = \"wrapped-value\";\r\n                                        wrappedValue.innerHTML = cellValue;\r\n                                        return wrappedValue;\r\n                                    } else {\r\n                                        return cellValue;\r\n                                    }\r\n                                };\r\n                                break;\r\n\r\n                            case \"endtime\":\r\n                                column.title = self.translatedStrings.endtime;\r\n                                column.formatter = function (cell) {\r\n                                    var cellValue = cell.getValue();\r\n                                    if (cellValue === '—') {\r\n                                        let wrappedValue = document.createElement(\"span\");\r\n                                        wrappedValue.className = \"wrapped-value\";\r\n                                        wrappedValue.innerHTML = cellValue;\r\n                                        return wrappedValue;\r\n                                    } else {\r\n                                        return cellValue;\r\n                                    }\r\n                                };\r\n                                break;\r\n\r\n                            case \"duration\":\r\n                                column.title = self.translatedStrings.duration;\r\n                                column.sorter = function (\r\n                                    a,\r\n                                    b,\r\n                                    aRow,\r\n                                    bRow,\r\n                                    column,\r\n                                    dir,\r\n                                    sorterParams\r\n                                ) {\r\n                                    // eslint-disable-next-line require-jsdoc\r\n                                    function sortTime(el) {\r\n                                        let split = el.split('|');\r\n                                        return Number(split[1]);\r\n                                    }\r\n\r\n                                    return sortTime(a) - sortTime(b);\r\n                                };\r\n                                column.formatter = function (cell) {\r\n                                    let split = cell.getValue().split('|');\r\n\r\n                                    let cellValue = split[0];\r\n                                    if (cellValue === '—') {\r\n                                        let wrappedValue = document.createElement(\"span\");\r\n                                        wrappedValue.className = \"wrapped-value\";\r\n                                        wrappedValue.innerHTML = cellValue;\r\n                                        return wrappedValue;\r\n                                    } else {\r\n                                        return cellValue;\r\n                                    }\r\n                                };\r\n                                break;\r\n\r\n                            case \"usermenubtn\":\r\n                                column.headerSort = false;\r\n                                column.title = \"\";\r\n                                column.formatter = function (cell) {\r\n                                    if (cell.getValue() === false) {\r\n                                        return \"\"; // Return empty string if usermenubtn is false\r\n                                    } else {\r\n                                        let dropdownBtn = document.createElement(\"button\");\r\n                                        dropdownBtn.className = \"row-menu-btn btn\";\r\n                                        dropdownBtn.type = \"button\";\r\n                                        dropdownBtn.innerHTML = '<i class=\"fa fa-ellipsis-v\"></i>';\r\n                                        return dropdownBtn;\r\n                                    }\r\n                                };\r\n                                column.clickMenu = clickMenu;\r\n                                column.download = false;\r\n                                break;\r\n\r\n                            case \"attemptid\":\r\n                            case \"user_attempt_code\":\r\n                            case \"userid\":\r\n                            case \"resetpasswordlink\":\r\n                            case \"userprofilelink\":\r\n                            case \"loginaslink\":\r\n                            case \"completereportlink\":\r\n                            case \"outlinereportlink\":\r\n                            case \"lastname\":\r\n                            case \"firstname\":\r\n                            case \"_children\":\r\n                                column.visible = false;\r\n                                break;\r\n                            default:\r\n                                // eslint-disable-next-line\r\n                                let resultText;\r\n                                // eslint-disable-next-line\r\n                                if (outerQuestions && outerQuestions.texts) {\r\n                                    let rawText = outerQuestions.texts[i - 20].replace(/\\&nbsp;/g, '');\r\n                                    if (rawText.length > 50) {\r\n                                        resultText = '...' + rawText.slice(0, 49);\r\n                                    } else {\r\n                                        resultText = rawText;\r\n                                    }\r\n                                }\r\n                                column.headerTooltip = resultText;\r\n                                column.sorter = function (\r\n                                    a,\r\n                                    b,\r\n                                    aRow,\r\n                                    bRow,\r\n                                    column,\r\n                                    dir,\r\n                                    sorterParams\r\n                                ) {\r\n                                    function sortQuestion(el) {\r\n                                        let result = -3;\r\n                                        if (el[0] === \"—\") {\r\n                                            result = -2;\r\n                                            return result;\r\n                                        }\r\n                                        if (el[0] === \"<\" && el.includes(\"=numerical_value\")) {\r\n                                            const pattern = /<div class=numerical_value>([\\d.]+)<\\/div>/;\r\n                                            const match = el.match(pattern);\r\n                                            if (el.includes(\"=complete\")) {\r\n                                                result = 100;\r\n                                                return result;\r\n                                            }\r\n                                            if (el.includes(\"=incorrect\")) {\r\n                                                result = -1;\r\n                                                return result;\r\n                                            }\r\n                                            result = match[1];\r\n                                        }\r\n                                        return result;\r\n                                    }\r\n                                    return sortQuestion(b) - sortQuestion(a);\r\n                                };\r\n                                column.formatter = function (cell) {\r\n                                    var cellValue = cell.getValue();\r\n                                    if (cellValue === '—') {\r\n                                        let wrappedValue = document.createElement(\"span\");\r\n                                        wrappedValue.className = \"wrapped-value\";\r\n                                        wrappedValue.innerHTML = cellValue;\r\n                                        return wrappedValue;\r\n                                    } else {\r\n                                        return cellValue;\r\n                                    }\r\n                                };\r\n                                break;\r\n                        }\r\n                        if (i <= 11) {\r\n                            column.frozen = true;\r\n                        }\r\n                    });\r\n                    return definitions;\r\n                },\r\n            };\r\n\r\n            function customTopCalc(values, data, calcParams) {\r\n                const parsedSummary = JSON.parse(summary);\r\n                const fieldname = calcParams.field;\r\n\r\n                if (parsedSummary[fieldname] !== undefined && parsedSummary[fieldname] !== false) {\r\n                    return parsedSummary[fieldname];\r\n                }\r\n                return '';\r\n            }\r\n\r\n            // Enable pagination.\r\n            if (tabledata.length > rowsonpage) {\r\n                content.pagination = true;\r\n            }\r\n            self.TABLES.studentsTable = new Tabulator(\"#students-table\", content);\r\n\r\n            self.TABLES.studentsTable.on(\r\n                \"rowSelectionChanged\",\r\n                function (data, rows) {\r\n                    Main.TEMPDATA.rowData = data;\r\n                    let state = data.length > 0 ? false : true;\r\n                    Main.changeStudentActionState(state);\r\n\r\n                    let lentable = self.TABLES.studentsTable.getData().length;\r\n\r\n                    let len;\r\n                    if (rows.length === lentable) {\r\n                        len = lentable - 1;\r\n                    } else {\r\n                        len = rows.length;\r\n                    }\r\n\r\n                    Main.setSelectedStudentsStr(len);\r\n                }\r\n            );\r\n\r\n            $(\"#downloadXlsTable\").off(\"click\");\r\n            $(\"#downloadXlsTable\").on(\"click\", function () {\r\n                var tableData = self.TABLES.studentsTable.getData();\r\n\r\n                var td2 = [];\r\n\r\n                // Attaching children.\r\n                tableData.forEach(function (row) {\r\n                    if (row.userid === \"summary\") {\r\n                        return;\r\n                    }\r\n\r\n                    if (row.hasOwnProperty(\"_children\")) {\r\n                        td2.push(row);\r\n                        row._children.forEach(function (ch) {\r\n                            td2.push(ch);\r\n                        });\r\n                        delete row._children;\r\n                    } else {\r\n                        td2.push(row);\r\n                    }\r\n                });\r\n\r\n                // Modifications data for output.\r\n                td2.forEach(function (row) {\r\n                    delete row.checkbox;\r\n                    delete row.usermenubtn;\r\n                    delete row.attemptid;\r\n                    delete row.user_attempt_code;\r\n                    delete row.userid;\r\n                    delete row.resetpasswordlink;\r\n                    delete row.userprofilelink;\r\n                    delete row.loginaslink;\r\n                    delete row.completereportlink;\r\n                    delete row.outlinereportlink;\r\n\r\n                    delete row.fullname;\r\n\r\n                    function stripHtml(dirtyString) {\r\n                        const doc = new DOMParser().parseFromString(dirtyString, 'text/html');\r\n                        return doc.body.textContent || '';\r\n                    }\r\n\r\n                    // Numeric value from HTML.\r\n                    for (var prop1 in row) {\r\n                        if (row.hasOwnProperty(prop1)) {\r\n                            if (/^Q \\d+ \\/ \\d+$/.test(prop1)) {\r\n                                var value11 = row[prop1];\r\n                                var match11 = value11.match(/<div.*>(\\d+(?:\\.\\d+)?)<\\/div>/);\r\n                                if (match11) {\r\n                                    var newValue11 = match11[1];\r\n                                    row[prop1] = newValue11;\r\n                                }\r\n\r\n                                row[prop1] = stripHtml(row[prop1]);\r\n                            }\r\n                        }\r\n\r\n                        if (row.hasOwnProperty(prop1)) {\r\n                            if (prop1 === \"fullname\" || prop1 === \"grade\") {\r\n                                var value12 = row[prop1].toString();\r\n                                var match12 = value12.match(/<a[^>]*>([^<]*)<\\/a>/i);\r\n                                if (match12) {\r\n                                    var newValue12 = match12[1];\r\n                                    row[prop1] = newValue12;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Changing titles.\r\n                    for (var prop2 in row) {\r\n                        if (row.hasOwnProperty(prop2)) {\r\n                            switch (prop2) {\r\n                                case \"firstname\":\r\n                                    row[self.translatedStrings.firstname] = row[prop2];\r\n                                    delete row[prop2];\r\n                                    break;\r\n                                case \"lastname\":\r\n                                    row[self.translatedStrings.lastname] = row[prop2];\r\n                                    delete row[prop2];\r\n                                    break;\r\n                                case \"fullname\":\r\n                                    row[self.translatedStrings.fullname] = row[prop2];\r\n                                    delete row[prop2];\r\n                                    break;\r\n                                case \"team\":\r\n                                    row[self.translatedStrings.team] = row[prop2];\r\n                                    delete row[prop2];\r\n                                    break;\r\n                                case \"state\":\r\n                                    row[self.translatedStrings.state] = row[prop2];\r\n                                    delete row[prop2];\r\n                                    break;\r\n                                case \"attempt_number\":\r\n                                    row[self.translatedStrings.attemptNumber] = row[prop2];\r\n                                    delete row[prop2];\r\n                                    break;\r\n                                case \"grade\":\r\n                                    row[self.translatedStrings.grade] = row[prop2];\r\n                                    delete row[prop2];\r\n                                    break;\r\n                                case \"starttime\":\r\n                                    row[self.translatedStrings.starttime] = row[prop2];\r\n                                    delete row[prop2];\r\n                                    break;\r\n                                case \"endtime\":\r\n                                    row[self.translatedStrings.endtime] = row[prop2];\r\n                                    delete row[prop2];\r\n                                    break;\r\n                                case \"duration\":\r\n                                    row[self.translatedStrings.duration] = row[prop2];\r\n                                    delete row[prop2];\r\n                                    break;\r\n                                default:\r\n                                    var value = row[prop2];\r\n                                    delete row[prop2];\r\n                                    row[prop2] = value;\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // Download file.\r\n                var workbook = XLSX.utils.book_new();\r\n                var worksheet = XLSX.utils.json_to_sheet(td2);\r\n                XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n                XLSX.writeFile(workbook, \"table-data.xlsx\");\r\n            });\r\n\r\n            self.TABLES.studentsTable.on(\"tableBuilt\", function () {\r\n                let tableData = self.TABLES.studentsTable.getSelectedData();\r\n                Main.TEMPDATA.rowData = tableData;\r\n                let state = tableData.length > 0 ? false : true;\r\n                Main.changeStudentActionState(state);\r\n                Main.setSelectedStudentsStr(tableData.length);\r\n\r\n                /**\r\n                 * Sets the active class on the clicked target element and removes it from other sibling elements.\r\n                 *\r\n                 * @param {HTMLElement} target - The target element that should be set as active.\r\n                 */\r\n                function setActive(target) {\r\n                    let parent = $(target).closest(\".tabulator-col-title\");\r\n                    parent.find(\"span\").removeClass(\"active\");\r\n                    $(target).addClass(\"active\");\r\n                }\r\n\r\n                $(\"#students-table .tabulator-sortable.tabulator-col-sorter-element\").on(\"click\", function (e) {\r\n                    let target = $(e.target);\r\n                    if (!(target.hasClass(\"fname\") || target.hasClass(\"sname\"))) {\r\n                        $('[tabulator-field=\"fullname\"]')\r\n                            .find(\"span\")\r\n                            .removeClass(\"active\");\r\n                    }\r\n                });\r\n\r\n                $('[tabulator-field=\"fullname\"]').on(\"click\", \".fname\", function (e) {\r\n                    let sort = e.target.dataset.sort;\r\n                    let resultSort = sort === \"desc\" ? \"asc\" : \"desc\";\r\n                    e.target.setAttribute(\"data-sort\", resultSort);\r\n                    setActive(e.target);\r\n                    self.TABLES.studentsTable.setSort(\"firstname\", resultSort);\r\n                });\r\n                $('[tabulator-field=\"fullname\"]').on(\"click\", \".lname\", function (e) {\r\n                    let sort = e.target.dataset.sort;\r\n                    let resultSort = sort === \"desc\" ? \"asc\" : \"desc\";\r\n                    e.target.setAttribute(\"data-sort\", resultSort);\r\n                    setActive(e.target);\r\n                    self.TABLES.studentsTable.setSort(\"lastname\", resultSort);\r\n                });\r\n                hideLoadingIcon();\r\n            });\r\n\r\n            // studentsTableActions.setStatesFromConfig(anon);\r\n\r\n            // const page = document.getElementById('page');\r\n            // let storedScrollPosition = +sessionStorage.getItem(\"scrollPosition\") || 0;\r\n\r\n            // $(document).ready(() => {\r\n            //     $(page).scrollTop(storedScrollPosition);\r\n            // });\r\n\r\n            // window.addEventListener('beforeunload', function () {\r\n            //    sessionStorage.setItem(\"scrollPosition\", page.scrollTop);\r\n            // });\r\n\r\n        })\r\n        .fail(Notification.exception);\r\n};"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireDefault","_notification","Str","_jquery","_tabulatorMin","Main","studentsTableActions","locale","lang","document","documentElement","getAttribute","getLocale","QLENGTH","_exports","SELECTORS","outerQuestions","TEMPCONFIG","TABLES","translatedStrings","hideLoadingIcon","body","classList","remove","initdiagnosticquestionstable","data","questions","textDirection","$","attr","tabledata","JSON","parse","length","content","headerSortElement","column","dir","autoColumns","movableRows","maxHeight","layout","autoColumnsDefinitions","definitions","forEach","maxWidth","headerSort","formatter","widthGrow","hozAlign","vertAlign","rowFormatter","row","getElement","style","height","initialSort","diagnosticQuestionsTable","Tabulator","question_table_number_sort","b","find","text","initquestionstable","studentstableNavFilter","getElementById","studentsActionsCollapse","sorter","aRow","bRow","sorterParams","cell","getValue","questionsTable","initstudentstable","summary","arguments","undefined","self","this","get_strings","key","component","done","str","viewingprofile","passwordreset","loginasthisstudent","allcoursereport","courseobservationreport","sendingmessage","recalculategrades","fullname","team","state","attemptNumber","grade","starttime","endtime","duration","emptyTable","pageTitle","firstTitle","lastTitle","prevTitle","nextTitle","all","firstname","lastname","clickMenu","disabled","getData","userprofilelink","label","action","link","window","open","resetpasswordlink","loginaslink","completereportlink","outlinereportlink","separator","userid","showMessagePopup","attemptid","rowData","regradaAttemtps","TEMPDATA","cmid","courseid","quizid","linkRegex","map","el","newGrade","exec","placeholder","langs","pagination","page_title","first","first_title","last","last_title","prev","prev_title","next","next_title","frozenRows","paginationSize","rowHeight","dataTree","dataTreeStartExpanded","fieldName","field","topCalc","customTopCalc","topCalcParams","titleFormatter","titleFormatterParams","rowRange","download","title","cellStyle","cssClass","cellValue","wrappedValue","createElement","className","innerHTML","sortTime","split","Number","dropdownBtn","type","visible","resultText","texts","rawText","replace","slice","headerTooltip","sortQuestion","result","includes","pattern","match","frozen","values","calcParams","parsedSummary","fieldname","studentsTable","on","rows","changeStudentActionState","len","lentable","setSelectedStudentsStr","off","tableData","td2","push","_children","ch","prop1","checkbox","usermenubtn","user_attempt_code","test","match11","newValue11","dirtyString","DOMParser","parseFromString","textContent","match12","toString","newValue12","prop2","value","workbook","XLSX","utils","book_new","worksheet","json_to_sheet","book_append_sheet","writeFile","getSelectedData","setActive","target","closest","removeClass","addClass","hasClass","resultSort","dataset","sort","setAttribute","setSort","fail","Notification","exception"],"mappings":"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"}