define("quiz_diagnosticstats/anonymousmode",["jquery","core/ajax"],(function($,ajax){const setAnonymousState=isAnonymous=>{createAnonymousStripe(),setStatesFromConfig(isAnonymous),handleStudentNames(isAnonymous);$("#anonymousmodeToggler1").prop("checked",isAnonymous)},createAnonymousStripe=()=>{if(document.getElementById("anonymousStripe"))return;const navbar=document.querySelector("nav.navbar");if(!navbar)return;const stripeElement=document.createElement("div");stripeElement.classList.add("sticky-stripe","align-items-center","justify-content-center","yellow","hidden"),stripeElement.id="anonymousStripe",stripeElement.innerHTML='\n            <div class="d-flex align-items-center diagnosticstats_report-toggle anonymousmode">\n                <input type="checkbox" id="anonymousmodeToggler3" class="toggle-btn d-none">\n                <label for="anonymousmodeToggler2" class="mb-0 anonymousmodeToggler d-none"></label>\n                <span class="link-btn-text ml-3"></span>\n            </div>\n            <i class="fas fa-user-secret ml-4"></i>\n        ',navbar.insertAdjacentElement("afterbegin",stripeElement)},setStatesFromConfig=isAnonymous=>{createAnonymousStripe();const toggleTextElement=$(".diagnosticstats_report-toggle.anonymousmode .link-btn-text");if(!toggleTextElement.length)return;const anonymousStripe=$("#anonymousStripe"),toggler=$("#anonymousmodeToggler1");if(isAnonymous){anonymousStripe.removeClass("hidden");const stateText=toggler.closest(".diagnosticstats_report-toggle").data("texton");toggleTextElement.html(stateText||"Anonymous mode ON"),toggler.prop("checked",!0)}else{anonymousStripe.addClass("hidden");const stateText=toggler.closest(".diagnosticstats_report-toggle").data("textoff");toggleTextElement.html(stateText||"Anonymous mode OFF"),toggler.prop("checked",!1)}};let studentNamesProcessed=!1;const handleStudentNames=isAnonymous=>{if(isAnonymous||(studentNamesProcessed=!1),studentNamesProcessed&&isAnonymous)return void console.warn("handleStudentNames already processed in anonymous mode.");const studentNameMap=new Map;let anonymousCounter=1;$(".student-name").each((function(index,el){var _$el$attr;const $el=$(el),userId=null===(_$el$attr=$el.attr("id"))||void 0===_$el$attr?void 0:_$el$attr.replace("student-",""),studentLabel=M.util.get_string("studentlabel","quiz_diagnosticstats");if(userId)if($el.data("originalName")||""===$el.text().trim()||"Unknown"===$el.text().trim()||$el.data("originalName",$el.text()),isAnonymous)studentNameMap.has(userId)||(studentNameMap.set(userId,`${studentLabel} ${anonymousCounter}`),anonymousCounter++),$el.text(studentNameMap.get(userId));else{const originalName=$el.data("originalName");originalName||console.warn(`Original name not found for userId ${userId}. Defaulting to 'Unknown'.`),$el.text(originalName||"Unknown")}}))};window.addEventListener("storage",(event=>{if("anonymousState"===event.key){const isAnonymous="1"===event.newValue,anonymousToggler=$("#anonymousmodeToggler1");setStatesFromConfig(isAnonymous),handleStudentNames(isAnonymous),anonymousToggler.prop("checked",isAnonymous)}}));const initDiagnosticQuestionsTable=(cmid,anonymousStateFromConfig)=>{const storedState=localStorage.getItem("anonymousState"),initialState=null!==storedState?"1"===storedState:anonymousStateFromConfig;setAnonymousState(initialState);const anonymousToggler=$("#anonymousmodeToggler1");anonymousToggler.length?(anonymousToggler.prop("checked",initialState),anonymousToggler.off("change"),anonymousToggler.on("change",(function(){const isAnonymous=this.checked;setStatesFromConfig(isAnonymous),handleStudentNames(isAnonymous),((cmid,state)=>ajax.call([{methodname:"quiz_diagnosticstats_set_anonymousstate",args:{cmid:cmid,state:state}}])[0])(cmid,isAnonymous?1:0).then((response=>{(isAnonymous=>{localStorage.setItem("anonymousState",isAnonymous?"1":"0")})(isAnonymous)})).catch((error=>{console.error("Failed to save anonymous state:",error)}))}))):console.warn("Toggler not found")};return{init:config=>{(config=JSON.parse(config)).cmid=parseInt(config.cmid,10),setAnonymousState(config.anonymousState),initDiagnosticQuestionsTable(config.cmid,config.anonymousState)},initdiagnosticquestionstable:initDiagnosticQuestionsTable,setAnonymousState:setAnonymousState}}));

//# sourceMappingURL=anonymousmode.min.js.map