{"version":3,"file":"jquery.splitter.min.js","sources":["../src/jquery.splitter.js"],"sourcesContent":["/*!\r\n * jQuery Spliter Plugin version 0.28.5\r\n * Copyright (C) 2010-2020 Jakub T. Jankiewicz <https://jcubic.pl/me>\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n/* global module, define, global, require, setTimeout */\r\n// UMD taken from https://github.com/umdjs/umd\r\n(function(factory, undefined) {\r\n    var root = typeof window !== 'undefined' ? window : global;\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        // istanbul ignore next\r\n        define(['jquery'], factory);\r\n    } else if (typeof module === 'object' && module.exports) {\r\n        // Node/CommonJS\r\n        module.exports = function(root, jQuery) {\r\n            if (jQuery === undefined) {\r\n                // require('jQuery') returns a factory that requires window to\r\n                // build a jQuery instance, we normalize how we use modules\r\n                // that require this pattern but the window provided is a noop\r\n                // if it's defined (how jquery works)\r\n                if (window !== undefined) {\r\n                    jQuery = require('jquery');\r\n                } else {\r\n                    jQuery = require('jquery')(root);\r\n                }\r\n            }\r\n            factory(jQuery);\r\n            return jQuery;\r\n        };\r\n    } else {\r\n        // Browser\r\n        // istanbul ignore next\r\n        factory(root.jQuery);\r\n    }\r\n})(function($, undefined) {\r\n    if (typeof String.prototype.trim === 'undefined') {\r\n        var sp_re = /(^\\s+)|(\\s+)$/g;\r\n        String.prototype.trim = function() {\r\n            return this.replace(sp_re, '');\r\n        };\r\n    }\r\n    var count = 0;\r\n    var splitter_id = null;\r\n    var splitters = [];\r\n    var current_splitter = null;\r\n    var current_splitter_index = null;\r\n    $.fn.split = function(options) {\r\n        var data = this.data('splitter');\r\n        if (data) {\r\n            return data;\r\n        }\r\n        var panels = [];\r\n        var $splitters = [];\r\n        var panel_1;\r\n        var panel_2;\r\n        var settings = $.extend({\r\n            limit: 100,\r\n            orientation: 'horizontal',\r\n            position: '50%',\r\n            invisible: false,\r\n            onDragStart: $.noop,\r\n            onDragEnd: $.noop,\r\n            onDrag: $.noop,\r\n            percent: false\r\n        }, options || {});\r\n        this.settings = settings;\r\n        function unset(prop) {\r\n            return options && typeof options[prop] === 'undefined' || !options;\r\n        }\r\n        var len = this.children().length;\r\n        if (len > 2) {\r\n            if (unset('position')) {\r\n                var w = 100 / len;\r\n                settings.position = new Array(len - 1).fill(0).map(function() {\r\n                    return w + '%';\r\n                });\r\n            }\r\n            if (unset('percent')) {\r\n                settings.percent = true;\r\n            }\r\n        }\r\n        var cls;\r\n        var children = this.children();\r\n        if (children.length === 2) {\r\n            if (settings.orientation == 'vertical') {\r\n                panel_1 = children.first().addClass('left_panel');\r\n                panel_2 = panel_1.next().addClass('right_panel');\r\n                cls = 'vsplitter';\r\n            } else if (settings.orientation == 'horizontal') {\r\n                panel_1 = children.first().addClass('top_panel');\r\n                panel_2 = panel_1.next().addClass('bottom_panel');\r\n                cls = 'hsplitter';\r\n            }\r\n            panels = ($('html').attr('dir') === 'rtl') ? [panel_2, panel_1] : [panel_1, panel_2];\r\n        } else {\r\n            children.each(function() {\r\n                var panel = $(this);\r\n                if (settings.orientation == 'vertical') {\r\n                    panel.addClass('vertical_panel');\r\n                    cls = 'vsplitter';\r\n                } else {\r\n                    panel.addClass('horizontal_panel');\r\n                    cls = 'hsplitter';\r\n                }\r\n                panels.push(panel);\r\n            });\r\n        }\r\n        if (settings.invisible) {\r\n            cls += ' splitter-invisible';\r\n        }\r\n        var width = this.width();\r\n        var height = this.height();\r\n        this.addClass('splitter_panel');\r\n        var id = count++;\r\n        panels.slice(0, -1).forEach(function(panel, i) {\r\n            var splitter = $('<div/>').addClass(cls).on('mouseenter touchstart', function() {\r\n                splitter_id = id;\r\n                current_splitter_index = splitter.index() - i - 1;\r\n            }).on('mouseleave touchend', function() {\r\n                splitter_id = null;\r\n                current_splitter_index = null;\r\n            }).insertAfter(panel);\r\n            $splitters.push(splitter);\r\n        });\r\n        var position;\r\n\r\n        function get_position(position) {\r\n            if (position instanceof Array) {\r\n                return position.map(get_position);\r\n            }\r\n            if (typeof position === 'number') {\r\n                return position;\r\n            }\r\n            if (typeof position === 'string') {\r\n                var match = position.match(/^([0-9\\.]+)(px|%)$/);\r\n                if (match) {\r\n                    if (match[2] == 'px') {\r\n                        return +match[1];\r\n                    } else {\r\n                        if (settings.orientation == 'vertical') {\r\n                            return (width * +match[1]) / 100;\r\n                        } else if (settings.orientation == 'horizontal') {\r\n                            return (height * +match[1]) / 100;\r\n                        }\r\n                    }\r\n                } else {\r\n                    //throw position + ' is invalid value';\r\n                }\r\n            } else {\r\n                //throw 'position have invalid type';\r\n            }\r\n        }\r\n\r\n        function set_limit(limit) {\r\n            if(!isNaN(parseFloat(limit)) && isFinite(limit)){\r\n                return {\r\n                    leftUpper: limit,\r\n                    rightBottom: limit\r\n                };\r\n            }\r\n            return limit;\r\n        }\r\n\r\n        var self = $.extend(this, {\r\n            refresh: function() {\r\n                var new_width = this.width();\r\n                var new_height = this.height();\r\n                if (width != new_width || height != new_height) {\r\n                    width = this.width();\r\n                    height = this.height();\r\n                    self.position(position);\r\n                }\r\n            },\r\n            option: function(name, value) {\r\n                if (name === 'position') {\r\n                    return self.position(value);\r\n                } else if (typeof value === 'undefined') {\r\n                    return settings[name];\r\n                } else {\r\n                    settings[name] = value;\r\n                }\r\n                return self;\r\n            },\r\n            position: (function() {\r\n                function make_sizer(dim_name, pos_name) {\r\n                    return function(n, silent) {\r\n                        if (n === undefined) {\r\n                            return position;\r\n                        } else {\r\n                            position = get_position(n);\r\n                            if (!(position instanceof Array)) {\r\n                                position = [position];\r\n                            }\r\n                            if (position.length !== panels.length - 1) {\r\n                                throw new Error('position array need to equal splitters length');\r\n                            }\r\n                            var outer_name = 'outer';\r\n                            outer_name += dim_name[0].toUpperCase() + dim_name.substring(1);\r\n                            var dim_px = self.css('visiblity', 'hidden')[dim_name]();\r\n                            var pw = 0;\r\n                            var sw_sum = 0;\r\n                            for (var i = 0; i < position.length; ++i) {\r\n                                var splitter = $splitters[i];\r\n                                var panel = panels[i];\r\n                                var pos = position[i];\r\n                                var splitter_dim = splitter[dim_name]();\r\n                                var sw2 = splitter_dim/2;\r\n                                if (settings.invisible) {\r\n                                    pw += panel[dim_name](pos)[outer_name]();\r\n                                    splitter.css(pos_name, pw - (sw2 * (i + 1)));\r\n                                } else if (settings.percent) {\r\n                                    var w1 = (pos - sw2) / dim_px * 100;\r\n                                    var l1 = (pw + sw_sum) / dim_px * 100;\r\n                                    panel.css(pos_name, l1 + '%');\r\n                                    pw += panel.css(dim_name, w1 + '%')[outer_name]();\r\n                                    splitter.css(pos_name, (pw + sw_sum) / dim_px * 100 + '%');\r\n                                } else {\r\n                                    panel.css(pos_name, pw + sw_sum);\r\n                                    pw += panel.css(dim_name, pos - sw2)[outer_name]();\r\n                                    splitter.css(pos_name, pw + sw_sum);\r\n                                }\r\n                                sw_sum += splitter_dim;\r\n                            }\r\n                            var panel_last = panels[i];\r\n                            if (settings.invisible) {\r\n                                panel_last.height(height - pw);\r\n                            } else {\r\n                                var s_sum = splitter_dim * i;\r\n                                var props = {};\r\n                                if (settings.percent) {\r\n                                    props[dim_name] = (dim_px - pw - sw_sum) / dim_px * 100 + '%';\r\n                                    props[pos_name] = (pw + sw_sum) / dim_px * 100 + '%';\r\n                                } else {\r\n                                    props[dim_name] = dim_px - pw - sw_sum;\r\n                                    props[pos_name] = pw + sw_sum;\r\n                                }\r\n                                panel_last.css(props);\r\n                            }\r\n                            self.css('visiblity', '');\r\n                        }\r\n                        if (!silent) {\r\n                            self.trigger('splitter.resize');\r\n                            self.find('.splitter_panel').trigger('splitter.resize');\r\n                        }\r\n                        return self;\r\n                    };\r\n                }\r\n                if (settings.orientation == 'vertical') {\r\n                    return make_sizer('width', 'left');\r\n                } else if (settings.orientation == 'horizontal') {\r\n                    return make_sizer('height', 'top');\r\n                } else {\r\n                    return $.noop;\r\n                }\r\n            })(),\r\n            _splitters: $splitters,\r\n            _panels: panels,\r\n            orientation: settings.orientation,\r\n            limit: set_limit(settings.limit),\r\n            isActive: function() {\r\n                return splitter_id === id;\r\n            },\r\n            destroy: function() {\r\n                self.removeClass('splitter_panel');\r\n                clear_attr(self, 'class');\r\n                function clear_attr(item, attr) {\r\n                    var val = item.attr(attr);\r\n                    if (typeof val === 'string' && !val.trim()) {\r\n                        item.removeAttr(attr);\r\n                    }\r\n                }\r\n                panels.forEach(function($panel) {\r\n                    $panel.css({\r\n                        height: '',\r\n                        width: '',\r\n                        left: '',\r\n                        top: ''\r\n                    });\r\n                    var cls = $panel.attr('class').replace(/\\w+_panel/g, '').trim();\r\n                    $panel.attr('class', cls);\r\n                    clear_attr($panel, 'class');\r\n                    clear_attr($panel, 'style');\r\n                });\r\n                self.off('splitter.resize');\r\n                self.trigger('splitter.resize');\r\n                self.find('.splitter_panel').trigger('splitter.resize');\r\n                splitters[id] = null;\r\n                count--;\r\n                $splitters.forEach(function($splitter) {\r\n                    var splitter = $(this);\r\n                    $splitter.off('mouseenter');\r\n                    $splitter.off('mouseleave');\r\n                    $splitter.off('touchstart');\r\n                    $splitter.off('touchmove');\r\n                    $splitter.off('touchend');\r\n                    $splitter.off('touchleave');\r\n                    $splitter.off('touchcancel');\r\n                    $splitter.remove();\r\n                });\r\n                self.removeData('splitter');\r\n                var not_null = false;\r\n                for (var i=splitters.length; i--;) {\r\n                    if (splitters[i] !== null) {\r\n                        not_null = true;\r\n                        break;\r\n                    }\r\n                }\r\n                //remove document events when no splitters\r\n                if (!not_null) {\r\n                    $(document.documentElement).off('.splitter');\r\n                    $(window).off('resize.splitter');\r\n                    splitters = [];\r\n                    count = 0;\r\n                }\r\n            }\r\n        });\r\n        self.on('splitter.resize', function(e) {\r\n            var pos = self.position();\r\n            if (self.orientation == 'vertical' &&\r\n                pos > self.width()) {\r\n                pos = self.width() - self.limit.rightBottom-1;\r\n            } else if (self.orientation == 'horizontal' &&\r\n                       pos > self.height()) {\r\n                pos = self.height() - self.limit.rightBottom-1;\r\n            }\r\n            if (pos < self.limit.leftUpper) {\r\n                pos = self.limit.leftUpper + 1;\r\n            }\r\n            e.stopPropagation();\r\n            self.position(pos, true);\r\n        });\r\n        //inital position of splitter\r\n        var pos;\r\n        if (settings.orientation == 'vertical') {\r\n            if (pos > width-settings.limit.rightBottom) {\r\n                pos = width-settings.limit.rightBottom;\r\n            } else {\r\n                pos = get_position(settings.position);\r\n            }\r\n        } else if (settings.orientation == 'horizontal') {\r\n            //position = height/2;\r\n            if (pos > height-settings.limit.rightBottom) {\r\n                pos = height-settings.limit.rightBottom;\r\n            } else {\r\n                pos = get_position(settings.position);\r\n            }\r\n        }\r\n        if (pos < settings.limit.leftUpper) {\r\n            pos = settings.limit.leftUpper;\r\n        }\r\n        if (panels.length > 2 && !(pos instanceof Array && pos.length == $splitters.length)) {\r\n            throw new Error('position need to be array equal to $splitters length');\r\n        }\r\n        self.position(pos, true);\r\n        /*\r\n        // disable this is not needed, if higher in tree there is splitter\r\n        // the parets need to have height: 100%\r\n        var parent = this.closest('.splitter_panel');\r\n        if (parent.length) {\r\n            this.height(parent.height());\r\n        }\r\n        */\r\n        function calc_pos(pos, x) {\r\n            var new_pos = pos.slice(0, current_splitter.index);\r\n            var p;\r\n            if (new_pos.length) {\r\n                p = x - new_pos.reduce(function(a, b) {\r\n                    return a + b;\r\n                });\r\n            } else {\r\n                p = x;\r\n            }\r\n            var diff = pos[current_splitter.index] - p;\r\n            new_pos.push(p);\r\n            if (current_splitter.index < pos.length - 1) {\r\n                var rest = pos.slice(current_splitter.index + 1);\r\n                rest[0] += diff;\r\n                new_pos = new_pos.concat(rest);\r\n            }\r\n            return new_pos;\r\n        }\r\n        // ------------------------------------------------------------------------------------\r\n        // bind events to document if no splitters\r\n        if (splitters.filter(Boolean).length === 0) {\r\n            $(window).on('resize.splitter', function() {\r\n                $.each(splitters, function(i, splitter) {\r\n                    if (splitter) {\r\n                        splitter.refresh();\r\n                    }\r\n                });\r\n            });\r\n            $(document.documentElement).on('mousedown.splitter touchstart.splitter', function(e) {\r\n                if (splitter_id !== null) {\r\n                    e.preventDefault();\r\n                    current_splitter = {\r\n                        node: splitters[splitter_id],\r\n                        index: current_splitter_index\r\n                    };\r\n                    // ignore right click\r\n                    if (e.originalEvent.button !== 2) {\r\n                        setTimeout(function() {\r\n                            if (!current_splitter) {\r\n                                return;\r\n                            }\r\n                            $('<div class=\"splitterMask\"></div>').\r\n                                css('cursor', current_splitter.node.children().eq(1).css('cursor')).\r\n                                insertAfter(current_splitter.node);\r\n                        });\r\n                    }\r\n                    current_splitter.node.settings.onDragStart(e);\r\n                }\r\n            }).on('mouseup.splitter touchend.splitter touchleave.splitter touchcancel.splitter', function(e) {\r\n                if (current_splitter) {\r\n                    setTimeout(function() {\r\n                        $('.splitterMask').remove();\r\n                    });\r\n                    current_splitter.node.settings.onDragEnd(e);\r\n                    current_splitter = null;\r\n                }\r\n            }).on('mousemove.splitter touchmove.splitter', function(e) {\r\n                var pos;\r\n                if (current_splitter !== null) {\r\n                    var node = current_splitter.node;\r\n                    var leftUpperLimit = node.limit.leftUpper;\r\n                    var rightBottomLimit = node.limit.rightBottom;\r\n                    var offset = node.offset();\r\n                    if (node.orientation == 'vertical') {\r\n                        var pageX = e.pageX;\r\n                        if(e.originalEvent && e.originalEvent.changedTouches){\r\n                          pageX = e.originalEvent.changedTouches[0].pageX;\r\n                        }\r\n                        var x = pageX - offset.left;\r\n                        if (x <= node.limit.leftUpper) {\r\n                            x = node.limit.leftUpper + 1;\r\n                        } else if (x >= node.width() - rightBottomLimit) {\r\n                            x = node.width() - rightBottomLimit - 1;\r\n                        }\r\n                        pos = node.position();\r\n                        if (pos.length > 1) {\r\n                            node.position(calc_pos(pos, x), true);\r\n                        } else if (x > node.limit.leftUpper &&\r\n                            x < node.width()-rightBottomLimit) {\r\n                            node.position(x, true);\r\n                            node.trigger('splitter.resize');\r\n                            node.find('.splitter_panel').\r\n                                trigger('splitter.resize');\r\n                            //e.preventDefault();\r\n                        }\r\n                    } else if (node.orientation == 'horizontal') {\r\n                        var pageY = e.pageY;\r\n                        if(e.originalEvent && e.originalEvent.changedTouches){\r\n                          pageY = e.originalEvent.changedTouches[0].pageY;\r\n                        }\r\n                        var y = pageY-offset.top;\r\n                        if (y <= node.limit.leftUpper) {\r\n                            y = node.limit.leftUpper + 1;\r\n                        } else if (y >= node.height() - rightBottomLimit) {\r\n                            y = node.height() - rightBottomLimit - 1;\r\n                        }\r\n                        pos = node.position();\r\n                        if (pos.length > 1) {\r\n                            node.position(calc_pos(pos, y), true);\r\n                        } else if (y > node.limit.leftUpper &&\r\n                            y < node.height()-rightBottomLimit) {\r\n                            node.position(y, true);\r\n                            node.trigger('splitter.resize');\r\n                            node.find('.splitter_panel').\r\n                                trigger('splitter.resize');\r\n                            //e.preventDefault();\r\n                        }\r\n                    }\r\n                    node.settings.onDrag(e);\r\n                }\r\n            });//*/\r\n        }\r\n        splitters[id] = self;\r\n        self.data('splitter', self);\r\n        return self;\r\n    };\r\n});\r\n"],"names":["factory","root","$","undefined","String","prototype","trim","sp_re","this","replace","count","splitter_id","splitters","current_splitter","current_splitter_index","fn","split","options","data","panel_1","panel_2","panels","$splitters","settings","extend","limit","orientation","position","invisible","onDragStart","noop","onDragEnd","onDrag","percent","unset","prop","cls","len","children","length","w","Array","fill","map","first","addClass","next","attr","each","panel","push","width","height","id","get_position","match","slice","forEach","i","splitter","on","index","insertAfter","pos","self","refresh","new_width","new_height","option","name","value","make_sizer","dim_name","pos_name","n","silent","Error","outer_name","toUpperCase","substring","dim_px","css","pw","sw_sum","splitter_dim","sw2","w1","l1","panel_last","props","trigger","find","_splitters","_panels","isNaN","parseFloat","isFinite","leftUpper","rightBottom","isActive","destroy","clear_attr","item","val","removeAttr","removeClass","$panel","left","top","off","$splitter","remove","removeData","not_null","document","documentElement","window","e","stopPropagation","calc_pos","x","p","new_pos","reduce","a","b","diff","rest","concat","filter","Boolean","preventDefault","node","originalEvent","button","setTimeout","eq","rightBottomLimit","offset","pageX","changedTouches","pageY","y","global","define","amd","module","exports","jQuery","require"],"mappings":"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"}