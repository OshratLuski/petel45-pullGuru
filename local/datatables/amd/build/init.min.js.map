{"version":3,"file":"init.min.js","sources":["../src/init.js"],"sourcesContent":["define(\n    [\n        \"jquery\",\n        \"local_datatables/jquery.dataTables\",\n        //\"core/log\",\n        \"local_datatables/dataTables.bootstrap\",\n        \"local_datatables/dataTables.scroller\",\n        \"local_datatables/dataTables.select\",\n        \"local_datatables/dataTables.fixedHeader\",\n        \"local_datatables/dataTables.buttons\",\n        \"local_datatables/dataTables.fixedColumns\",\n        //\"local_datatables/buttons.bootstrap\"\n    ],\n    function ($, datatables) {\n        return {\n            test: function () {\n                // window.console.log(\"$.fn is:\");\n                // window.console.log($.fn);\n                // window.console.log(\"datatables is:\");\n                // window.console.log(datatables);\n            },\n\n            init: function (selector, params) {\n                // Configure element matched by selector as a DataTable,\n                // adding params to the default options.\n                if (params.debug) {\n                    window.console.log(\n                        \"local_datatables:init.js/init(): \",\n                        selector,\n                        params\n                    );\n                }\n                var options = {\n                    autoWidth: false,\n                    paginate: false,\n                    order: [] // disable initial sort\n                };\n                $.extend(true, options, params); // deep-merge params into options\n                if (params.debug) {\n                    window.console.log(\n                        \"local_datatables init.js/init(): options = \",\n                        options\n                    );\n                }\n                $(selector).DataTable(options);\n            },\n\n            initScroller: function (selector, params) {\n\n                var options = {\n                    autoWidth: true,\n                    paginate: true,\n                    fixedHeader: {\n                        header: true,\n                        footer: true\n                    },\n                    scrollY: 600,\n                    scrollCollapse: true,\n                    scroller: true,\n                    info: false,\n                    //dom: 'ftipr',\n                    sDom: \"lfrti\",\n                    searching: false,\n                    lengthChange: false,\n                    order: [] // disable initial sort\n                };\n                $.extend(true, options, params); // deep-merge params into options\n                if (params.debug) {\n                }\n                $(selector).DataTable(options);\n            },\n            initFilters: function (params) {\n                var table = $(params.selector).dataTable({\n                    initComplete: function () {\n                        if (params.columnfilter === 1) {\n                            this.api().columns(params.onlycolumns).every( function () {\n                                var column = this;\n                                var select = $('<select><option value=\"\"></option></select>')\n                                    //.appendTo( $(column.footer()).empty() )\n                                    .appendTo( $(column.header()) )\n                                    .on( 'change', function () {\n                                        var val = $.fn.dataTable.util.escapeRegex(\n                                            $(this).val()\n                                        );\n\n                                        column\n                                            .search( val ? '^'+val+'$' : '', true, false )\n                                            .draw();\n                                    } );\n\n                                //column.data().unique().sort().each( function ( d, j ) {\n                                column.cells('', column[0]).render('display').sort().unique().each( function ( d, j ) {\n                                    if(column.search() === '^'+d+'$'){\n                                        select.append( '<option value=\"'+d+'\" selected=\"selected\">'+d+'</option>' )\n                                    } else {\n                                        //debugger;\n                                        //var role = /data-value-name=\\\"(.*)\\\" /g.exec(d);\n                                        var role = /data-value-name=\\\"([a-zA-Z]*)\\\"/g.exec(d);\n                                        if (role != null) {\n                                            select.append( '<option value=\"'+role[1]+'\">'+role[1]+'</option>' )\n                                        }\n\n                                    }\n                                } );\n                            } );\n                        }\n                    },\n                    \"aaSorting\": [],\n                    \"iDisplayLength\": params.iDisplayLength,\n                    'aLengthMenu': [[ 25, 100, 200, -1], [ 25, 100, 200, 'All']],\n                    \"bScrollInfinite\": true,\n                    //'sPaginationType': 'full_numbers',\n                    autoWidth: true,\n                    paginate: params.paginate,\n                    fixedHeader: {\n                        header: true,\n                        footer: true\n                    },\n                    //scrollX: '100%',\n                    fixedColumns: true,\n                    //{\n                    //    left: 3\n                    //},\n                    scrollY: params.scrolly,\n                    //scrollCollapse: true,\n                    scroller: params.scroller,\n                    info: false,\n                    select: params.select,\n                    dom: params.dom,\n                    buttons: params.buttons,\n                    'oLanguage': {\n                        'sSearch': 'סינון תצוגה לפי: ',\n                    }\n                    /*\n                    'oLanguage': {\n                        'oAria': {\n                            'sSortAscending': M.str.block_configurable_reports.datatables_sortascending,\n                            'sSortDescending': M.str.block_configurable_reports.datatables_sortdescending,\n                        },\n                        'oPaginate': {\n                            'sFirst': M.str.block_configurable_reports.datatables_first,\n                            'sLast': M.str.block_configurable_reports.datatables_last,\n                            'sNext': M.str.block_configurable_reports.datatables_next,\n                            'sPrevious': M.str.block_configurable_reports.datatables_previous\n                        },\n                        'sEmptyTable': M.str.block_configurable_reports.datatables_emptytable,\n                        'sInfo': M.str.block_configurable_reports.datatables_info,\n                        'sInfoEmpty': M.str.block_configurable_reports.datatables_infoempty,\n                        'sInfoFiltered': M.str.block_configurable_reports.datatables_infofiltered,\n                        'sInfoThousands': M.str.langconfig.thousandssep,\n                        'sLengthMenu': M.str.block_configurable_reports.datatables_lengthmenu,\n                        'sLoadingRecords': M.str.block_configurable_reports.datatables_loadingrecords,\n                        'sProcessing': M.str.block_configurable_reports.datatables_processing,\n                        'sSearch': M.str.block_configurable_reports.datatables_search,\n                        'sZeroRecords': M.str.block_configurable_reports.datatables_zerorecords\n                    }\n                    */\n                });\n            }\n        };\n    }\n);\n"],"names":["define","$","datatables","test","init","selector","params","debug","window","console","log","options","autoWidth","paginate","order","extend","DataTable","initScroller","fixedHeader","header","footer","scrollY","scrollCollapse","scroller","info","sDom","searching","lengthChange","initFilters","dataTable","initComplete","columnfilter","api","columns","onlycolumns","every","column","this","select","appendTo","on","val","fn","util","escapeRegex","search","draw","cells","render","sort","unique","each","d","j","append","role","exec","iDisplayLength","fixedColumns","scrolly","dom","buttons"],"mappings":"AAAAA,+BACI,CACI,SACA,qCAEA,wCACA,uCACA,qCACA,0CACA,sCACA,6CAGJ,SAAUC,EAAGC,kBACF,CACHC,KAAM,aAONC,KAAM,SAAUC,SAAUC,QAGlBA,OAAOC,OACPC,OAAOC,QAAQC,IACX,oCACAL,SACAC,YAGJK,QAAU,CACVC,WAAW,EACXC,UAAU,EACVC,MAAO,IAEXb,EAAEc,QAAO,EAAMJ,QAASL,QACpBA,OAAOC,OACPC,OAAOC,QAAQC,IACX,8CACAC,SAGRV,EAAEI,UAAUW,UAAUL,UAG1BM,aAAc,SAAUZ,SAAUC,YAE1BK,QAAU,CACVC,WAAW,EACXC,UAAU,EACVK,YAAa,CACTC,QAAQ,EACRC,QAAQ,GAEZC,QAAS,IACTC,gBAAgB,EAChBC,UAAU,EACVC,MAAM,EAENC,KAAM,QACNC,WAAW,EACXC,cAAc,EACdb,MAAO,IAEXb,EAAEc,QAAO,EAAMJ,QAASL,QACpBA,OAAOC,MAEXN,EAAEI,UAAUW,UAAUL,UAE1BiB,YAAa,SAAUtB,QACPL,EAAEK,OAAOD,UAAUwB,UAAU,CACrCC,aAAc,WACkB,IAAxBxB,OAAOyB,mBACFC,MAAMC,QAAQ3B,OAAO4B,aAAaC,OAAO,eACtCC,OAASC,KACTC,OAASrC,EAAE,+CAEVsC,SAAUtC,EAAEmC,OAAOjB,WACnBqB,GAAI,UAAU,eACPC,IAAMxC,EAAEyC,GAAGb,UAAUc,KAAKC,YAC1B3C,EAAEoC,MAAMI,OAGZL,OACKS,OAAQJ,IAAM,IAAIA,IAAI,IAAM,IAAI,GAAM,GACtCK,UAIbV,OAAOW,MAAM,GAAIX,OAAO,IAAIY,OAAO,WAAWC,OAAOC,SAASC,MAAM,SAAWC,EAAGC,MAC3EjB,OAAOS,WAAa,IAAIO,EAAE,IACzBd,OAAOgB,OAAQ,kBAAkBF,EAAE,yBAAyBA,EAAE,iBAC3D,KAGCG,KAAO,mCAAmCC,KAAKJ,GACvC,MAARG,MACAjB,OAAOgB,OAAQ,kBAAkBC,KAAK,GAAG,KAAKA,KAAK,GAAG,+BAQjE,kBACKjD,OAAOmD,2BACV,CAAC,CAAE,GAAI,IAAK,KAAM,GAAI,CAAE,GAAI,IAAK,IAAK,yBAClC,EAEnB7C,WAAW,EACXC,SAAUP,OAAOO,SACjBK,YAAa,CACTC,QAAQ,EACRC,QAAQ,GAGZsC,cAAc,EAIdrC,QAASf,OAAOqD,QAEhBpC,SAAUjB,OAAOiB,SACjBC,MAAM,EACNc,OAAQhC,OAAOgC,OACfsB,IAAKtD,OAAOsD,IACZC,QAASvD,OAAOuD,kBACH,SACE,wBA6B9B"}