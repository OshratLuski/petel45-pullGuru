{"version":3,"file":"buuble-animation.min.js","sources":["../src/buuble-animation.js"],"sourcesContent":["define([\n    'jquery',\n    'core/str',\n    'local_diagnostic/d3',\n    'local_diagnostic/circle',\n    'local_diagnostic/rectangle',\n    'local_diagnostic/common-block',\n    'local_diagnostic/question-list',\n    'local_diagnostic/bottom-block',\n    'local_diagnostic/activities',\n    'core/ajax',\n    'local_diagnostic/toast',\n], function($, Str, d3, CircleAnimation, Rectangle, CommonBlock, QuestionList, BottomBlock, ActivitiesClass, Ajax, Toast) {\n    class BuubleAnimation {\n        constructor(d3, htmlRootElement, data, translateObj, popupElement, adParams, courseId, attempt, pmid, pcmid) {\n            this.adParams = adParams;\n            this.attempt = attempt;\n            this.pmid = pmid;\n            this.pcmid = pcmid;\n            this.iconsColors = [\n                '#707070',\n                '#FA885C',\n                '#FBB75D',\n                '#9370DB',\n                '#36B0E6',\n                '#C81E4A',\n                'blue'\n            ];\n            this.htmlRootElement = htmlRootElement;\n            this.popupElement = popupElement;\n            this.currentLang;\n            this.courseId = courseId;\n            // Ltr rtl\n            if ($(\"html\").attr(\"dir\") === \"ltr\") {\n                this.currentLang = false;\n            } else {\n                this.currentLang = true;\n            }\n\n            this.sizeCircle = 20;\n            this.marginCircle = 20;\n            this.backBorderColor = this.adParams[1].light;\n            this.backgroundColor = this.adParams[1].light;\n\n            this.activitiesItem;\n            this.activitiesRepoItem;\n\n            this.d3 = d3;\n            this.svg;\n            this.classTagG = '';\n            this.startDiameter = 100;\n\n            this.svgHeight = 0;\n            this.clastersIndentStep = 40;\n            this.clastersIndent = 0;\n            this.clasterTopStep = 30;\n            this.clasterTopStart = 206;\n            this.clasterTop = this.clasterTopStart;\n            this.clasterExpandStep = 4.2;\n\n            this.isDown = false;\n            this.startX = 0;\n            this.startY = 0;\n\n            this.currentId = 0;\n            this.data = data.clusters;\n            this.datamapper = {};\n            for (const [simpleindex, clusterdata] of Object.entries(data.clusters)) {\n                let clusterdataid = clusterdata.id;\n                this.datamapper[clusterdataid] = simpleindex;\n            }\n\n            this.dataStart = data;\n            this.totalData = data.total;\n            this.totalData.cmids = data.cmids;\n            this.totalData.type = data.type;\n            this.totalData.questionid = data.questionid;\n            this.clasterFrom = false;\n            this.clasterTo = false;\n            this.clasterFromSimple = false;\n            this.clasterToSimple = false;\n\n            this.clasterMaxLength = 50;\n\n            this.tooltip;\n            this.tooltipSelect;\n            this.clastersSelected = {};\n            this.commonBlockItem;\n            this.bottomBlockItem;\n\n            this.shapeCoord = [];\n            this.shapes = [];\n\n            this.currentUser;\n\n            this.pointCircleX = 0;\n            this.pointCircleXZero = false;\n\n            this.documentWith = $(`${this.popupElement} .svgÐ¡harts`).width();\n            this.topBlockWith = 250;\n            this.topBlockRightSpace = 0;\n\n            this.translateObj = translateObj;\n\n            this.addIconToData(data);\n\n            this.topBlockObj;\n\n            this.questionListItem;\n\n            this.mainActions();\n        }\n\n        mainActions() {\n            let self = this;\n\n            // Actions main popup\n            // cancel btn\n            $('body').off('click', '.popup-local-diagnostic-main-p #main_cancel');\n            $('body').on('click', '.popup-local-diagnostic-main-p #main_cancel', function() {\n                self.activitiesItem.clearData();\n                $('div.popup-local-diagnostic-main-modal .modal-footer').css('display', 'none');\n            });\n\n            // Submit btn\n            $('body').off('click', '.popup-local-diagnostic-main-p #main_submit');\n            $('body').on('click', '.popup-local-diagnostic-main-p #main_submit', async function() {\n                let result = {};\n\n                result.courseid = self.courseId;\n                result.attempt = self.attempt;\n                result.mid = self.pmid;\n                result.sourcecmid = self.pcmid;\n                result.data = [];\n\n                let cmidsCourseHasData = false;\n                let cmidsRecomHasData = false;\n                let cmidsRepoHasData = false;\n                let type = self.totalData.type;\n                let question = self.totalData.questionid;\n                const cmidsAndDesc = self.activitiesItem.getData();\n                for (let key in cmidsAndDesc) {\n\n                    let users = [];\n                    self.data.forEach(function(objcluster) {\n                        if (objcluster.clusternum == key) {\n                            objcluster.users.forEach(function(obj) {\n                                users.push(obj.id.replace('UID', ''));\n                            });\n                        }\n                    });\n\n                    result.data.push({\n                        'cmidsCourse': cmidsAndDesc[key].cmidsCourse,\n                        'cmidsRecom': cmidsAndDesc[key].cmidsRecom,\n                        'cmidsRepo': cmidsAndDesc[key].cmidsRepo,\n                        'description': cmidsAndDesc[key].description,\n                        'recommend': cmidsAndDesc[key].recommend,\n                        'clusternum': key,\n                        'userids': users,\n                        'type': type,\n                        'question': question,\n                    });\n\n                    console.log(result.data);\n\n                    if (cmidsAndDesc[key].cmidsCourse.length > 0) {\n                        cmidsCourseHasData = true;\n                    }\n                    if (cmidsAndDesc[key].cmidsRecom.length > 0) {\n                        cmidsRecomHasData = true;\n                    }\n                    if (cmidsAndDesc[key].cmidsRepo.length > 0) {\n                        cmidsRepoHasData = true;\n                    }\n                }\n\n                // Console.log('result ! ', JSON.stringify(result, null, 2));\n                // return;\n\n                // disable btn submit\n                $('.popup-local-diagnostic-main-modal #main_submit').prop('disabled', true);\n\n                let resultRequestCourse = true;\n                let resultRequestRecom = true;\n                let resultRequestRepo = true;\n\n                if (cmidsRecomHasData) {\n                    let data = $.extend(true, {}, result);\n                    data.data.forEach(function(el) {\n                        el.cmids = [...el.cmidsRecom];\n                        delete el.cmidsCourse;\n                        delete el.cmidsRepo;\n                        delete el.cmidsRecom;\n                    });\n\n                    data.source = 'recommend';\n\n                    resultRequestRecom = await self.saveActivityRequest(data, 'local_diagnostic_set_sharewith_clusters');\n                    if (resultRequestCourse) {\n                        self.toastMainModal(true);\n                    } else {\n                        self.toastMainModal(false);\n                    }\n                }\n\n                if (cmidsCourseHasData) {\n                    let data = $.extend(true, {}, result);\n                    data.data.forEach(function(el) {\n                        el.cmids = [...el.cmidsCourse];\n                        delete el.cmidsCourse;\n                        delete el.cmidsRepo;\n                        delete el.cmidsRecom;\n                    });\n\n                    data.source = 'mycourses';\n\n                    resultRequestCourse = await self.saveActivityRequest(data, 'local_diagnostic_set_local_clusters');\n                    if (resultRequestCourse) {\n                        self.toastMainModal(true);\n                    } else {\n                        self.toastMainModal(false);\n                    }\n                }\n\n                if (cmidsRepoHasData) {\n                    let data = $.extend(true, {}, result);\n                    data.data.forEach(function(el) {\n                        el.cmids = [...el.cmidsRepo];\n                        delete el.cmidsCourse;\n                        delete el.cmidsRepo;\n                        delete el.cmidsRecom;\n                    });\n\n                    data.source = 'repository';\n\n                    resultRequestRepo = await self.saveActivityRequest(data, 'local_diagnostic_set_sharewith_clusters');\n                    if (resultRequestRepo) {\n                        self.toastMainModal(true);\n                    } else {\n                        self.toastMainModal(false);\n                    }\n                }\n\n                if (resultRequestCourse && resultRequestRepo && resultRequestRecom) {\n                    $('.popup-local-diagnostic-main-modal button.close').trigger(\"click\");\n                }\n            });\n\n            // Close modal\n            $('body').off('click', '.popup-local-diagnostic-main-p .close');\n            $('body').on('click', '.popup-local-diagnostic-main-p .close', function() {\n                self.activitiesItem.clearData();\n                $('div.popup-local-diagnostic-main-modal .modal-footer').css('display', 'none');\n            });\n        }\n\n        async saveActivityRequest(data, webServer) {\n            let promise = Ajax.call([{\n                methodname: webServer,\n                args: data\n            }]);\n\n            let promiseResult;\n            try {\n                promiseResult = await promise[0];\n            } catch (ex) {\n                console.log(ex);\n                promiseResult = false;\n            }\n\n            return promiseResult;\n        }\n\n        toastMainModal(state) {\n            let toastItem = new Toast();\n            if (state) {\n                toastItem.toastShow('success');\n            } else {\n                toastItem.toastShow('error');\n            }\n\n            toastItem.toastHandle({\n                method: 'hidden.bs.toast',\n                fn: function() {\n                    $('.popup-local-diagnostic-main-modal #main_submit').removeAttr('disabled');\n                }\n            });\n        }\n\n        addIconToData() {\n            let data = this.data;\n            for (let i = 0; i < data.length; ++i) {\n                let dataUsers = data[i].users;\n                if (dataUsers.length > 0) {\n                    for (let ins = 0; ins < dataUsers.length; ++ins) {\n                        dataUsers[ins].icon = i;\n                    }\n                }\n            }\n        }\n\n        classes(root) {\n            let classes = [];\n            let sizeCircle = this.sizeCircle;\n            let item = 0;\n\n            /**\n             * @param node\n             */\n            function recurse(node) {\n                if (node.users) {\n node.users.forEach(function(child) {\n                    recurse(child);\n                });\n} else {\n classes.push({\n                    value: sizeCircle,\n                    icon: node.icon,\n                    id: node.id,\n                    fullname: node.fullname,\n                    item: item++\n                });\n}\n            }\n\n            recurse(root);\n            return {children: classes};\n        }\n\n        nullify() {\n            this.d3.select(\"svg\").remove();\n            this.d3.select(\".svgÐ¡harts\").html(\"\");\n            this.svgHeight = 0;\n            this.clastersIndent = 0;\n            this.clasterTop = this.clasterTopStart;\n        }\n\n        async start() {\n            this.nullify();\n            this.createSvg();\n            this.createTooltip();\n\n            let paramShape = {\n                currentLang: this.currentLang,\n                iconsColors: this.iconsColors,\n                svg: this.svg,\n                d3: this.d3,\n                tooltip: this.tooltip,\n                classes: this.classes,\n                sizeCircle: this.sizeCircle,\n                htmlRootElement: this.htmlRootElement,\n                backgroundColor: this.backgroundColor,\n                backBorderColor: this.backBorderColor,\n                marginCircle: this.marginCircle,\n                documentWith: this.documentWith,\n                topBlockWith: this.topBlockWith,\n                topBlockRightSpace: this.topBlockRightSpace,\n                clastersIndent: this.clastersIndent,\n                clasterTop: this.clasterTop,\n            };\n\n            for (let i = 0; i < this.data.length; ++i) {\n                if (i === 0) {\n                    let rectItem = new Rectangle(paramShape, this.data[i], this.translateObj);\n                    rectItem.addRectangle();\n                    this.shapes.push(rectItem);\n                } else {\n\n                    paramShape.diameter = this.getDiameter(this.data[i]);\n                    this.setSvgHeight(paramShape.diameter);\n\n                    paramShape.lcchosen = '';\n\n                    if (this.data[i].lcchosen) {\n                        paramShape.lcchosen = await Str.get_string('selected_previously', 'local_diagnostic', this.data[i].lcchosen);\n                    }\n\n                    paramShape.lcdescription = this.data[i].lcdescription;\n\n                    let circlItem = new CircleAnimation(paramShape, this.data[i], this.translateObj);\n                    circlItem.addCircle();\n                    this.shapes.push(circlItem);\n\n                    this.setCircleTop();\n                    this.indentBetweenCircle(paramShape.diameter);\n\n                    paramShape.clastersIndent = this.clastersIndent;\n                    paramShape.clasterTop = this.clasterTop;\n                }\n            }\n\n            this.createTopBlock();\n            this.circlesCenter();\n\n            this.createTooltipSelect();\n\n            this.tooltipHandle();\n            this.tooltipSelectHandle();\n            this.addBottomBlock();\n\n            this.drag();\n\n            this.questionListItem = QuestionList(this.dataStart, this.popupElement, this.adParams);\n            this.questionListItem.addAction(this);\n\n            this.initActivitiesDialog();\n            // This.initActivitiesRepo();\n        }\n\n        initActivitiesDialog() {\n            const params = {\n                htmlRootElement: this.htmlRootElement,\n                currentLang: this.currentLang,\n                wwwRoot: this.adParams[0],\n                data: this.data\n            };\n\n            this.activitiesItem = new ActivitiesClass(\n                params,\n                this.translateObj,\n                this.shapes,\n                CircleAnimation,\n                this.courseId\n            );\n        }\n\n        createTopBlock() {\n            let params = {\n                svg: this.svg,\n                d3: this.d3,\n                currentLang: this.currentLang,\n                tooltip: this.tooltip,\n                backgroundColor: this.backgroundColor,\n                backBorderColor: 'grey',\n                documentWith: this.documentWith,\n                topBlockWith: this.topBlockWith,\n                topBlockRightSpace: this.topBlockRightSpace,\n            };\n\n            let block = new CommonBlock(params, this.totalData, this.translateObj);\n            this.commonBlockItem = block;\n\n            let resolution = this.resolutionCheck();\n\n            if (resolution === 1) {\n                block.addBlock(this.documentWith - this.topBlockWith - this.topBlockRightSpace, 54);\n            } else if (resolution === 3) {\n                block.addBlock(this.documentWith - this.topBlockWith - this.topBlockRightSpace - 300, 0);\n            } else {\n                block.addBlock();\n            }\n\n            this.topBlockObj = block;\n        }\n\n        circlesCenter() {\n            let documentWith = this.documentWith;\n            if (documentWith &&\n                this.clastersIndent &&\n                documentWith > this.clastersIndent) {\n                let pointCircleX = documentWith / 2 - this.clastersIndent / 2;\n\n                for (let i = 0; i < this.shapes.length; i++) {\n                    if (this.shapes[i] instanceof CircleAnimation) {\n                        if (this.pointCircleX === 0) {\n                            this.pointCircleX = pointCircleX;\n                        }\n                        let clasterLeft = this.shapes[i].p_.clastersIndent + pointCircleX;\n                        let clasterTop = this.shapes[i].p_.clasterTop;\n                        this.shapes[i].p_.clastersIndent = clasterLeft;\n\n                        let claster = this.d3.select(`g.claster-${this.shapes[i].data.id}`);\n\n                        claster\n                            .attr(\"transform\", \"translate(\" + clasterLeft + \",\" + clasterTop + \")\");\n                    }\n                }\n\n            } else {\n                this.pointCircleX = 0;\n            }\n        }\n\n        drag() {\n            let self = this;\n            let allSvg = this.svg.selectAll(\"foreignObject.image\");\n\n            allSvg.on(\"mousedown\", function(d) {\n                let currentClaster = self.d3.select(this.parentNode.parentNode).attr(\"data-id\");\n\n                let currentUser = {...d.data, claster: currentClaster};\n                self.currentUser = currentUser;\n                allSvg.attr(\"data-select\", \"\");\n\n                self.d3.select(this).attr(\"data-select\", \"select\");\n            });\n\n            allSvg.call(this.d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended)\n            );\n\n            /**\n             * @param d\n             */\n            function dragstarted(d) {\n                self.d3.event.sourceEvent.stopPropagation();\n                let hmParentNode = this.parentNode;\n                self.isDown = true;\n\n                self.d3.select(hmParentNode).raise().classed(\"active\", true);\n                self.d3.select(hmParentNode.parentNode).raise().classed(\"active\", true);\n\n                let current = self.d3.select(this);\n                this.deltaX = current.attr(\"x\") - self.d3.event.x;\n                this.deltaY = current.attr(\"y\") - self.d3.event.y;\n\n                self.startX = current.attr(\"x\");\n                self.startY = current.attr(\"y\");\n            }\n\n            /**\n             * @param d\n             */\n            function dragged(d) {\n                self.d3.select(this)\n                    .attr(\"x\", self.d3.event.x + this.deltaX)\n                    .attr(\"y\", self.d3.event.y + this.deltaY);\n\n                self.tooltip.style(\"display\", \"none\");\n            }\n\n            /**\n             * @param d\n             */\n            async function dragended(d) {\n                let thisElement = self.d3.select(this);\n                self.isDown = false;\n                let hmParentNode = this.parentNode;\n\n                self.d3.select(hmParentNode).classed(\"active\", false);\n                self.d3.select(hmParentNode.parentNode).classed(\"active\", false);\n\n                self.clasterFrom = thisElement.attr(\"data-claster\");\n                self.clasterFromSimple = self.datamapper[self.clasterFrom];\n                self.currentId = thisElement.attr(\"data-id\");\n\n                thisElement.attr(\"style\", \"display: none\");\n\n                let overEl = self.d3.select(document.elementFromPoint(self.d3.event.sourceEvent.clientX, self.d3.event.sourceEvent.clientY));\n                self.clasterTo = overEl.attr(\"data-claster\");\n                self.clasterToSimple = self.datamapper[self.clasterTo];\n                self.d3.select(this).attr(\"style\", \"display: initial;color:\" + self.iconsColors[d.data.icon]);\n\n                if (self.clasterFrom &&\n                    self.clasterTo &&\n                    self.clasterFrom !== self.clasterTo &&\n                    self.data[self.clasterToSimple].users.length < self.clasterMaxLength) {\n\n                    // Get current user\n                    const userObj =\n                        self.data[self.clasterFromSimple].users.filter(obj => {\n                            return obj.id.toString() === self.currentId.toString();\n                        })[0];\n\n                    // Delete user from old claster\n                    self.data[self.clasterFromSimple].users =\n                        self.data[self.clasterFromSimple].users.filter(obj => {\n                            return obj.id.toString() !== self.currentId.toString();\n                        });\n\n                    let userId = userObj.id;\n\n                    // Delete user id\n                    // delete userObj.id\n\n                    // create new user id\n                    // userObj.id = (new Date().getTime()).toString();\n\n                    // add user to new claster\n                    self.data[self.clasterToSimple].users.push(userObj);\n\n                    // Redraw\n                    self.redraw();\n\n                    // Ajax request\n                    let promise = Ajax.call([{\n                        methodname: 'local_diagnostic_user_dragdrop',\n                        args: {\n                            userid: userId.replace('UID', ''),\n                            cmid: self.pcmid,\n                            clusternumfrom: self.clasterFrom,\n                            clusternumto: self.clasterTo\n                        }\n                    }]);\n\n                    try {\n                        let result = await promise[0];\n                        console.log('result 11 ', result);\n                    } catch (ex) {\n                        console.log(ex);\n                    }\n\n                } else {\n                    self.tooltip.style(\"display\", \"initial\");\n\n                    // Set old coordinates\n                    self.d3.select(this).attr('x', self.startX);\n                    self.d3.select(this).attr('y', self.startY);\n                }\n            }\n        }\n\n        getDiameter(data) {\n            let diameter;\n            if (data.users.length < 5) {\n                diameter = this.startDiameter;\n            } else {\n                diameter = data.users.length * this.clasterExpandStep + this.startDiameter;\n            }\n\n            return diameter;\n        }\n\n        setSvgHeight(diameter) {\n            if (diameter + 100 + this.clasterTop > this.svgHeight) {\n                this.svgHeight = diameter + 100 + this.clasterTop;\n                this.svg.attr(\"height\", this.svgHeight);\n            }\n        }\n\n        setCircleTop() {\n            if (this.clasterTop > this.clasterTopStart) {\n                this.clasterTop = this.clasterTop - this.clasterTopStep;\n            } else {\n                this.clasterTop = this.clasterTop + this.clasterTopStep;\n            }\n        }\n\n        indentBetweenCircle(diameter) {\n            if (this.resolutionCheck() === 2) {\n                this.clastersIndent = this.clastersIndent + diameter + 20;\n            } else {\n                this.clastersIndent = this.clastersIndent + diameter + this.clastersIndentStep;\n            }\n        }\n\n        createSvg() {\n            let self = this;\n            this.svg = this.d3.select(this.htmlRootElement)\n                .append(\"svg\")\n                .attr(\"transform\", this.currentLang ? \"scale(-1, 1)\" : \"\")\n                .attr(\"width\", \"100%\")\n                .on(\"mousedown\", function(d) {\n                    let allSvg = self.svg.selectAll(\"foreignObject.image\");\n                    allSvg.attr(\"data-select\", \"\");\n                });\n        }\n\n        createTooltip() {\n            this.tooltip = this.d3.select(this.htmlRootElement)\n                .append(\"div\")\n                .attr(\"class\", \"svgÐ¡harts-tooltip\")\n                .text(\"\");\n        }\n\n        createTooltipSelect() {\n\n            this.tooltipSelect = this.d3.select(this.htmlRootElement)\n                .append(\"div\")\n                .attr(\"class\", \"svgÐ¡harts-tooltip-select\")\n                .attr(\"style\", \"background-color:\" + this.adParams[1].primary + \"; border: 1px solid \" + this.adParams[1].secondary + \";\")\n                .html(`\n                        <div class=\"activity-course btn btn-primary\" style=\"display:block;\" data-id=\"0\">${this.translateObj.shareactivitycourse}</div>\n                        <div class=\"activity-repo btn btn-primary\" style=\"display:block;\" data-id=\"1\">${this.translateObj.shareactivityrepo}</div>\n                        <div class=\"activity-recom btn btn-primary hidden\" style=\"display:block;\" data-id=\"2\">${this.translateObj.shareactivityrecom}</div>\n                `);\n        }\n\n        redraw() {\n            let shapeFrom = this.shapes[this.clasterFromSimple];\n            let shapeTo = this.shapes[this.clasterToSimple];\n\n            this.d3.select(`g.claster-${this.clasterTo}`).html('');\n            this.d3.select(`g.claster-${this.clasterFrom}`).html('');\n\n            this.changeDiameter(shapeFrom);\n            this.changeDiameter(shapeTo);\n\n            shapeTo.recreate();\n            shapeFrom.recreate();\n\n            this.tooltipHandle();\n            this.tooltipSelectHandle();\n            this.drag();\n\n            this.changePositionAllCircles();\n\n            this.bottomBlockItem.changePosition(this.commonBlockItem.p_.x, this.svgHeight - 50);\n            document.getElementsByClassName('svgÐ¡harts-tooltip')[0].style.display = 'initial';\n            document.getElementsByClassName('svgÐ¡harts-tooltip')[0].style.visibility = 'hidden';\n        }\n\n        changeDiameter(obj) {\n            if (obj instanceof CircleAnimation) {\n                let circle = this.d3.select(`circle.circle-${obj.data.id}`);\n                let diameter = this.getDiameter(obj.data);\n\n                circle\n                    .attr(\"r\", diameter / 2 - 2)\n                    .attr(\"cx\", diameter / 2)\n                    .attr(\"cy\", diameter / 2);\n\n                obj.p_.diameter = diameter;\n\n                this.setSvgHeight(diameter);\n            }\n        }\n\n        changePositionCirclesZero(zero) {\n            this.pointCircleXZero = zero ? true : false;\n        }\n\n        changePositionAllCircles() {\n            if (this.pointCircleXZero) {\n                this.clastersIndent = 10;\n            } else {\n                this.clastersIndent = this.pointCircleX;\n            }\n            this.clasterTop = this.clasterTopStart;\n            for (let i = 0; i < this.shapes.length; i++) {\n                if (this.shapes[i] instanceof CircleAnimation) {\n                    this.shapes[i].clastersIndent = this.clastersIndent;\n\n                    let claster = this.d3.select(`g.claster-${this.shapes[i].data.id}`);\n                    claster\n                        .attr(\"transform\", \"translate(\" + this.clastersIndent + \",\" + this.clasterTop + \")\");\n\n                    this.setCircleTop();\n                    this.indentBetweenCircle(this.shapes[i].p_.diameter);\n                }\n            }\n        }\n\n        tooltipHandle() {\n            let self = this;\n            this.d3.selectAll('.svgÐ¡harts .bottom-block .tooltip-block')\n                .on(\"mouseover\", function() {\n                    let selectThis = self.d3.select(this);\n                    let x = selectThis.attr(\"data-x\");\n                    let y = selectThis.attr(\"data-y\");\n                    let text = selectThis.attr(\"data-text\");\n                    let dataClass = selectThis.attr(\"data-class\");\n                    let dataPosition = selectThis.attr(\"data-position\");\n\n                    self.tooltip.style(\"visibility\", \"visible\");\n                    self.tooltip.html(text);\n                    self.tooltip.attr(\"class\", `svgÐ¡harts-tooltip ${dataClass}`);\n                    let tooltipParams = self.tooltip.node().getBoundingClientRect();\n                    self.tooltip.style(\"left\", (event.pageX - $(self.htmlRootElement).offset().left - tooltipParams.width / 2) + \"px\");\n\n                    if (dataPosition) {\n                        self.tooltip.style(\"top\", (event.pageY - $(self.htmlRootElement).offset().top + 25) + \"px\");\n                    } else {\n                        self.tooltip.style(\"top\", (event.pageY - $(self.htmlRootElement).offset().top - tooltipParams.height - 25) + \"px\");\n                    }\n                })\n                .on(\"mouseout\", function() {\n                    self.tooltip.style(\"visibility\", \"hidden\");\n                    self.tooltip.attr(\"class\", \"svgÐ¡harts-tooltip\");\n                });\n        }\n\n        tooltipSelectHandle() {\n            let self = this;\n            this.d3.selectAll('.svgÐ¡harts .bottom-block .circle-first-button')\n                .on(\"click\", function() {\n                    let thisEl = $(this);\n                    // Console.log(thisEl.offset().left, $(self.popupElement).offset().left);\n                    let claster = thisEl.attr(\"data-claster\");\n                    let activityRecomBtn = self.tooltipSelect.select('div.activity-recom');\n                    if (self.data[claster] && self.data[claster].recommend) {\n                        activityRecomBtn.style(\"display\", \"block\");\n                    } else {\n                        activityRecomBtn.style(\"display\", \"none\");\n                    }\n                    self.tooltipSelect.style(\"top\", (thisEl.offset().top - $(self.popupElement).offset().top - 80) + \"px\");\n                    self.tooltipSelect.style(\"left\", (thisEl.offset().left - $(self.popupElement).offset().left - 20) + \"px\");\n                    self.tooltipSelect.attr(\"data-claster\", claster);\n                    self.tooltipSelect.style(\"visibility\", \"visible\");\n                });\n            $(self.popupElement).off(\"click\");\n            $(self.popupElement).on(\"click\", function(event) {\n                if (!$(event.target).attr('class') || !$(event.target).attr('class').includes(\"cfb-activity\")) {\n                    self.tooltipSelect.style(\"visibility\", \"hidden\");\n                    self.tooltipSelect.attr(\"data-claster\", \"\");\n                }\n            });\n        }\n\n        addBottomBlock() {\n            this.setSvgHeight(this.svgHeight - this.clasterTop);\n\n            let positionCommonBlock = this.commonBlockItem.getPosition();\n\n            let params = {\n                left: positionCommonBlock.x,\n                svgHeight: this.svgHeight,\n                topBlockWidth: this.topBlockWith,\n                currentLang: this.currentLang,\n                svg: this.svg\n            };\n            this.bottomBlockItem = new BottomBlock(params, this.translateObj);\n            this.bottomBlockItem.addBlock();\n        }\n\n        resolutionCheck() {\n            let windowWidth = $(window).width();\n            // Console.log(windowWidth, \"===========<======\");\n\n            if (windowWidth >= 1000 && windowWidth < 1200) {\n                return 1;\n            }\n            if (windowWidth >= 1200 && windowWidth < 1400) {\n                return 2;\n            }\n            if (windowWidth >= 1400) {\n                return 3;\n            }\n\n            return 0;\n        }\n\n    }\n\n    return function(htmlRootElement, data, popupElement, adParams, courseId, attempt, pmid, pcmid) {\n        Str.get_strings([\n            {\n                key: 'commontitle',\n                component: 'local_diagnostic'\n            }, {\n                key: 'rectangletitle',\n                component: 'local_diagnostic'\n            }, {\n                key: 'userlisttitle',\n                component: 'local_diagnostic'\n            }, {\n                key: 'share',\n                component: 'local_diagnostic'\n            },\n            {\n                key: 'shareactivitycourse',\n                component: 'local_diagnostic'\n            },\n            {\n                key: 'shareactivityrepo',\n                component: 'local_diagnostic'\n            },\n            {\n                key: 'export_excel',\n                component: 'local_diagnostic'\n            },\n            {\n                key: 'circle_empty',\n                component: 'local_diagnostic'\n            },\n            {\n                key: 'share_activities_course_title',\n                component: 'local_diagnostic'\n            },\n            {\n                key: 'share_activities_course_title_all',\n                component: 'local_diagnostic'\n            },\n            {\n                key: 'all_clusters',\n                component: 'local_diagnostic'\n            },\n            {\n                key: 'shareactivityrecom',\n                component: 'local_diagnostic'\n            },\n        ]).then(function(arr) {\n            let translate = {\n                commontitle: arr[0],\n                rectangletitle: arr[1],\n                userlisttitle: arr[2],\n                share: arr[3],\n                shareactivitycourse: arr[4],\n                shareactivityrepo: arr[5],\n                export_excel: arr[6],\n                circle_empty: arr[7],\n                share_activities_course_title: arr[8],\n                share_activities_course_title_all: arr[9],\n                all_clusters: arr[10],\n                shareactivityrecom: arr[11],\n            };\n            let buubleItem = new BuubleAnimation(d3, htmlRootElement, data, translate, popupElement, adParams, courseId, attempt, pmid, pcmid);\n            buubleItem.start();\n        });\n    };\n});\n"],"names":["define","$","Str","d3","CircleAnimation","Rectangle","CommonBlock","QuestionList","BottomBlock","ActivitiesClass","Ajax","Toast","BuubleAnimation","constructor","htmlRootElement","data","translateObj","popupElement","adParams","courseId","attempt","pmid","pcmid","iconsColors","currentLang","attr","sizeCircle","marginCircle","backBorderColor","this","light","backgroundColor","activitiesItem","activitiesRepoItem","svg","classTagG","startDiameter","svgHeight","clastersIndentStep","clastersIndent","clasterTopStep","clasterTopStart","clasterTop","clasterExpandStep","isDown","startX","startY","currentId","clusters","datamapper","simpleindex","clusterdata","Object","entries","clusterdataid","id","dataStart","totalData","total","cmids","type","questionid","clasterFrom","clasterTo","clasterFromSimple","clasterToSimple","clasterMaxLength","tooltip","tooltipSelect","clastersSelected","commonBlockItem","bottomBlockItem","shapeCoord","shapes","currentUser","pointCircleX","pointCircleXZero","documentWith","width","topBlockWith","topBlockRightSpace","addIconToData","topBlockObj","questionListItem","mainActions","self","off","on","clearData","css","async","result","courseid","mid","sourcecmid","cmidsCourseHasData","cmidsRecomHasData","cmidsRepoHasData","question","cmidsAndDesc","getData","key","users","forEach","objcluster","clusternum","obj","push","replace","cmidsCourse","cmidsRecom","cmidsRepo","description","recommend","console","log","length","prop","resultRequestCourse","resultRequestRecom","resultRequestRepo","extend","el","source","saveActivityRequest","toastMainModal","trigger","webServer","promiseResult","promise","call","methodname","args","ex","state","toastItem","toastShow","toastHandle","method","fn","removeAttr","i","dataUsers","ins","icon","classes","root","item","recurse","node","child","value","fullname","children","nullify","select","remove","html","start","createSvg","createTooltip","paramShape","rectItem","addRectangle","diameter","getDiameter","setSvgHeight","lcchosen","get_string","lcdescription","circlItem","addCircle","setCircleTop","indentBetweenCircle","createTopBlock","circlesCenter","createTooltipSelect","tooltipHandle","tooltipSelectHandle","addBottomBlock","drag","addAction","initActivitiesDialog","params","wwwRoot","block","resolution","resolutionCheck","addBlock","clasterLeft","p_","allSvg","selectAll","d","currentClaster","parentNode","claster","event","sourceEvent","stopPropagation","hmParentNode","raise","classed","current","deltaX","x","deltaY","y","style","thisElement","overEl","document","elementFromPoint","clientX","clientY","userObj","filter","toString","userId","redraw","userid","cmid","clusternumfrom","clusternumto","append","text","primary","secondary","shareactivitycourse","shareactivityrepo","shareactivityrecom","shapeFrom","shapeTo","changeDiameter","recreate","changePositionAllCircles","changePosition","getElementsByClassName","display","visibility","circle","changePositionCirclesZero","zero","selectThis","dataClass","dataPosition","tooltipParams","getBoundingClientRect","pageX","offset","left","pageY","top","height","thisEl","activityRecomBtn","target","includes","getPosition","topBlockWidth","windowWidth","window","get_strings","component","then","arr","translate","commontitle","rectangletitle","userlisttitle","share","export_excel","circle_empty","share_activities_course_title","share_activities_course_title_all","all_clusters"],"mappings":"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"}