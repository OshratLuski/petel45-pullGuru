define("local_diagnostic/circle",["jquery"],(function($){return class CircleAnimation{constructor(p_,data,translateObj){this.p_={...p_},this.data=data,this.translateObj=translateObj,this.usersList=`<div class='tooltip-list-title'>${this.translateObj.userlisttitle}</div>`+data.users.map((el=>`<div>${el.fullname}</div>`)).join("")}addCircle(contain){let container,self=this;container=contain||this.p_.svg.append("g").attr("data-id",this.data.id).attr("transform","translate("+this.p_.clastersIndent+","+this.p_.clasterTop+")").attr("class",`claster-${this.data.id}`);let circlestrokecolor=this.p_.backBorderColor;this.data.lcchosen&&(circlestrokecolor="#4B7F3E"),container.append("circle").attr("r",this.p_.diameter/2-2).attr("fill",this.p_.backgroundColor).attr("cx",this.p_.diameter/2).attr("cy",this.p_.diameter/2).attr("class",`circle-${this.data.id}`).attr("stroke",circlestrokecolor).attr("stroke-width",2).attr("data-claster",this.data.id),container.append("svg:foreignObject").attr("x",this.p_.currentLang?-this.p_.diameter:0).attr("y",-30).attr("width",this.p_.diameter).attr("height",20).attr("transform",this.p_.currentLang?"scale(-1, 1)":"").html(`\n          <div\n            class="claster-name" style="text-align:center">\n            <div class="bottom-block">\n              <div \n                class="tooltip-block"\n                data-text="title description"\n              >\n              ${this.data.clustername}\n              </div>\n            </div>\n          </div>\n        `);var root=this.p_.d3.hierarchy(this.p_.classes(this.data));if(this.data.users.length>0){let self=this;container.selectAll(".node").data(root.children).enter().append("g").attr("class","node").append("svg:foreignObject").attr("width",(function(d,i){return d.data.value})).attr("height",(function(d,i){return d.data.value})).attr("data-id",(function(d,i){return d.data.id})).attr("data-claster",this.data.id).attr("class",`image image-${this.data.id}`).style("color",(function(d,i){return self.p_.iconsColors[d.data.icon]})).html(`<i \n          style="font-size:${this.p_.sizeCircle}px;\n          transform: ${this.p_.currentLang?"scale(-1, 1)":"none"}" \n          class="fas fa-user-graduate" \n          data-claster="${this.data.id}"></i>`).on("mouseover",(function(d){self.p_.tooltip.html(d.data.fullname);let tooltipParams=self.p_.tooltip.node().getBoundingClientRect();self.p_.tooltip.style("visibility","visible"),self.p_.tooltip.style("top",event.pageY-$(self.p_.htmlRootElement).offset().top-tooltipParams.height-25+"px"),self.p_.tooltip.style("left",event.pageX-$(self.p_.htmlRootElement).offset().left-tooltipParams.width/2+"px")})).on("mouseout",(function(d){self.p_.tooltip.style("visibility","hidden")}))}else container.append("svg:foreignObject").attr("width",self.p_.diameter).attr("height",20).attr("transform",this.p_.currentLang?"scale(-1, 1)":"").attr("x",this.p_.currentLang?-this.p_.diameter:0).attr("y",this.p_.diameter/2-10).attr("data-claster",this.data.id).attr("class","cluster-empty-text").html(`\n            ${self.translateObj.circle_empty}\n          `);let widthForeignObj=140,xForeignObj=0;this.p_.diameter<140?xForeignObj=(this.p_.diameter-140)/2:widthForeignObj=this.p_.diameter,container.append("svg:foreignObject").attr("width",widthForeignObj).attr("height","190px").attr("x",xForeignObj).attr("y",this.p_.diameter+7).html(`\n        <div class="bottom-block">\n        <div class="bottom-container">\n          <div \n            class="tooltip-block-n circle-first-button cfb-activity btn btn-primary"\n            data-claster="${this.data.id}"\n          >\n            <i class="fas fa-caret-down cfb-activity"></i>\n            <i class="fal fa-user-chart cfb-activity" style="transform: ${this.p_.currentLang?"scale(-1, 1)":"none"}"></i>\n          </div>\n          <div \n            data-text="${this.data.text}"\n            data-class="tooltip-list"\n            data-x="${this.p_.clastersIndent-this.p_.diameter-50+this.p_.diameter/2-10}" \n            data-y="${this.p_.diameter+15}"\n            class="tooltip-block btn btn-primary">\n            <i class="fas fa-info icon-info" style="transform: ${this.p_.currentLang?"scale(-1, 1)":"none"}"></i>\n          </div>\n          <div \n            data-text="${this.usersList}"\n            data-class="tooltip-list"\n            data-x="${this.p_.clastersIndent-this.p_.diameter-50+this.p_.diameter/2-10}" \n            data-y="${this.p_.diameter+15}"\n            class="tooltip-block btn btn-primary" \n            data-claster="${this.data.id}"\n          >\n            <i class="fas fa-users icon-cub"></i>\n          </div>\n\n          <div \n            class="text-under-claster"\n            style="transform:${self.p_.currentLang?"scale(-1, 1)":""}"\n          >\n            ${self.p_.activities?self.p_.activities:""}\n          </div>\n\n          <div \n            class="text-under-claster-repo"\n            style="transform:${self.p_.currentLang?"scale(-1, 1)":""}"\n          >\n            ${self.p_.activitiesRepo?self.p_.activitiesRepo:""}\n          </div>\n          <div \n            class="text-under-claster-recom"\n            style="transform:${self.p_.currentLang?"scale(-1, 1)":""}"\n          >\n            ${self.p_.activitiesRecom?self.p_.activitiesRecom:""}\n          </div>\n          <div \n            class="text-under-claster-chosen tooltip-block"\n            style="transform:${self.p_.currentLang?"scale(-1, 1)":""}"\n                data-text="${self.p_.lcdescription?self.p_.lcdescription:""}"\n          >\n            ${self.p_.lcchosen?self.p_.lcchosen:""}\n          </div>\n          <div\n            class="description-cluster"\n            style="transform:${self.p_.currentLang?"scale(-1, 1)":""}"\n          >\n          </div>\n        </div>\n      </div>\n        `),this.data.users.length<=0||this.animation()}animation(){let self=this;var circles=this.p_.d3.selectAll(`foreignObject.image-${this.data.id}`),nodes=this.p_.d3.selectAll(`foreignObject.image-${this.data.id}`).data(),forceX=this.p_.d3.forceX((function(d){return 0===d.data.icon?0:1===d.data.icon||2===d.data.icon?self.p_.diameter/2:3===d.data.icon?self.p_.diameter:4===d.data.icon?self.p_.diameter/2:d.data.icon>=5?0:void 0})).strength(.05),forceY=this.p_.d3.forceY((function(d){return 0===d.data.icon?0:1===d.data.icon?self.p_.diameter/2:2===d.data.icon?0:3===d.data.icon?self.p_.diameter/2:4===d.data.icon?self.p_.diameter:d.data.icon>=5?self.p_.diameter/2:void 0})).strength(.05),simulation=this.p_.d3.forceSimulation(nodes).force("x",forceX).force("y",forceY).force("collide",self.p_.d3.forceCollide(self.p_.marginCircle)).force("charge",self.p_.d3.forceManyBody()).on("tick",ticked).stop();function ticked(){circles.attr("x",(function(d){return d.x=pythag(self.p_.sizeCircle,d.y,d.x),d.x-self.p_.sizeCircle/2})).attr("y",(function(d){return d.y=pythag(self.p_.sizeCircle,d.x,d.y),d.y-self.p_.sizeCircle/2}))}var w=this.p_.diameter,radius=this.p_.diameter/2,hyp2=Math.pow(radius,2);function pythag(r,b,coord){r+=5,b=Math.min(w-r-0,Math.max(r+0,b));var b2=Math.pow(b-radius,2),a=Math.sqrt(hyp2-b2);return coord=Math.max(radius-a+r+0,Math.min(a+radius-r-0,coord))}for(var i=0;i<150;++i)simulation.tick(),ticked()}recreate(){let container=this.p_.d3.select(`g.claster-${this.data.id}`).attr("transform","translate("+this.p_.clastersIndent+","+this.p_.clasterTop+")");new CircleAnimation(this.p_,this.data,this.translateObj).addCircle(container)}}}));

//# sourceMappingURL=circle.min.js.map