{"version":3,"file":"support.min.js","sources":["../src/support.js"],"sourcesContent":["define([\r\n    'jquery',\r\n    'core/str',\r\n    'core/modal_factory',\r\n    'core/modal_events',\r\n    'core/ajax',\r\n    'core/templates',\r\n    'core/notification',\r\n    'local_redmine/html2canvas',\r\n    'local_redmine/pageProperties',\r\n\r\n], function($, Str, ModalFactory, ModalEvents, Ajax, Templates, Notification, html2canvas, pageProperties) {\r\n\r\n    let screenshot;\r\n    let popup_disable = false;\r\n    let myip = '';\r\n\r\n    const spinner = `<div class=\"spinner-border text-white align-items-center justify-conten-center\" role=\"status\" style=\"width: 1.5rem; height: 1.5rem; display:flex;\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>`;\r\n\r\n    return {\r\n        init: function() {\r\n            let self = this;\r\n\r\n            // Render issue counter for user.\r\n            self.renderIssueCounter();\r\n\r\n            // Get IP.\r\n            pageProperties.getIP(function(ip){\r\n                myip = ip;\r\n            })\r\n\r\n            $('#support-btn').click(() => {\r\n                self.supportPopup()\r\n                return false;\r\n            });\r\n\r\n            $('#support-btn-student').click((e) => {\r\n                $(e.target).addClass('active disabled');\r\n                self.insertSpinner('#support-btn-student');\r\n                self.supportPopupStudent();\r\n                return false;\r\n            });\r\n        },\r\n\r\n        supportPopup: function (def) {\r\n            const self = this;\r\n            if(popup_disable) return;\r\n            popup_disable = true;\r\n\r\n            let context = {};\r\n            switch (def) {\r\n                case 1:\r\n                    context = {'default_question': true};\r\n                    break;\r\n                case 2:\r\n                    context = {'default_pedagogical_help': true};\r\n                    break;\r\n                case 3:\r\n                    context = {'default_suggest_improvement': true};\r\n                    break;\r\n                case 4:\r\n                    context = {'default_contenterror_report': true};\r\n                    break;\r\n                case 5:\r\n                    context = {'default_error_report': true};\r\n                    break;\r\n                default:\r\n                    context = {'default_question': true};\r\n            }\r\n\r\n            Str.get_strings([\r\n                {key: 'have_you_a_question', component: 'local_redmine'},\r\n                {key: 'send', component: 'local_redmine'},\r\n            ]).done(function (strings) {\r\n\r\n                var modalPromise = ModalFactory.create({\r\n                    type: ModalFactory.types.SAVE_CANCEL,\r\n                    title: strings[0],\r\n                });\r\n\r\n                $.when(modalPromise).then(function(fmodal) {\r\n                 /*    fmodal.setLarge(); */\r\n                    fmodal.setSaveButtonText(strings[1]);\r\n\r\n                    Templates.render(\"local_redmine/support/supportPopup\", context)\r\n                        .done(function (html, js) {\r\n                            fmodal.setBody(html);\r\n                        })\r\n\r\n                    // Popup rendered.\r\n                    fmodal.getRoot().on(ModalEvents.bodyRendered, function () {\r\n                        let support_activities_div = fmodal.body.find('#support_activities');\r\n                        let support_activities_title = fmodal.body.find('#support_activities_title');\r\n\r\n                        popup_disable = false;\r\n\r\n                        let delay = (callback, ms) => {\r\n                            var timer = 0;\r\n                            return function() {\r\n                                var context = this, args = arguments;\r\n                                clearTimeout(timer);\r\n                                timer = setTimeout(function () {\r\n                                    callback.apply(context, args);\r\n                                }, ms || 0);\r\n                            };\r\n                        }\r\n\r\n                        $(fmodal.body.find('#more_info')).keyup(delay(function (e) {\r\n                            support_activities_div.hide();\r\n                            support_activities_title.hide();\r\n\r\n                            var query = $(this).val().trim();\r\n                            if (query.length > 0) {\r\n                                get_activities(query);\r\n                            }\r\n                        }, 500));\r\n\r\n                        let get_activities = (query) => {\r\n                            Ajax.call([{\r\n                                methodname: 'local_redmine_get_support_activities',\r\n                                args: {\r\n                                    query: query,\r\n                                },\r\n                                done: render_activities,\r\n                            }]);\r\n                        };\r\n\r\n                        let render_activities = (list) => {\r\n                            list = JSON.parse(list);\r\n                            if (list.length > 0) {\r\n                                support_activities_div.show();\r\n                                support_activities_title.show();\r\n                            } else {\r\n                                support_activities_div.hide();\r\n                                support_activities_title.hide();\r\n                            }\r\n                            support_activities_div.html('');\r\n                            list.forEach(act => {\r\n                                let link = $('<a>', {\r\n                                    'href': act.link,\r\n                                    'html': act.title + ' <i class=\"fa fa-external-link\" aria-hidden=\"true\"></i>',\r\n                                    'target': 'blank',\r\n                                });\r\n                                support_activities_div.append(link);\r\n                            });\r\n                        };\r\n\r\n                    });\r\n\r\n                    // Save button.\r\n                    fmodal.getRoot().on(ModalEvents.save, function(e) {\r\n                        e.preventDefault();\r\n\r\n                        fmodal.body.find('.more_info_error').hide();\r\n                        fmodal.body.find('.question_type_error').hide();\r\n\r\n                        var more_info = fmodal.body.find('#more_info').val();\r\n                        var upload_info = fmodal.body.find('#upload_info').val();\r\n                        var question = fmodal.body.find('input[name=\"questionType\"]:checked').val();\r\n\r\n                        // Validation\r\n                        var errors = [];\r\n                        if(!more_info.trim().length){\r\n                            fmodal.body.find('.more_info_error').show();\r\n                            fmodal.body.find('#more_info').focus();\r\n                            errors.push('Error more_info');\r\n                        }\r\n\r\n                        if(question === undefined ){\r\n                            fmodal.body.find('.question_type_error').show();\r\n                            fmodal.body.find('#rg1').focus();\r\n                            errors.push('Error question');\r\n                        }\r\n\r\n                        if (errors.length === 0) {\r\n\r\n                            // Insert spinner.\r\n                            self.insertSpinner($(fmodal.footer).find('[data-action=\"save\"]'));\r\n\r\n                            Ajax.call([{\r\n                                    methodname: \"local_redmine_support_request\",\r\n                                    args: {\r\n                                        userBrowserName: pageProperties.getBrowser().name,\r\n                                        userBrowserVersion: pageProperties.getBrowser().version,\r\n                                        userIP: myip,\r\n                                        moreInfo: more_info,\r\n                                        uploadInfo: upload_info,\r\n                                        resolution:  pageProperties.getResolution(),\r\n                                        pageurl: pageProperties.getPageUrl(),\r\n                                        questionType: question,\r\n                                    },\r\n                                    done: function(response) {\r\n\r\n                                        self.removeSpinner($(fmodal.footer).find('[data-action=\"save\"]'));\r\n                                        fmodal.destroy();\r\n\r\n                                        // Success popup.\r\n                                        Str.get_strings([\r\n                                            {key: 'supportsuccesssendtitle', component: 'local_redmine'},\r\n                                            {key: 'supportsuccesssendcontent', component: 'local_redmine'},\r\n                                        ]).done(function(strings) {\r\n                                            var modalPromise = ModalFactory.create({\r\n                                                type: ModalFactory.types.ALERT,\r\n                                                title: strings[0],\r\n                                                body: strings[1]\r\n                                            });\r\n                                            $.when(modalPromise).then(function(fmodal) {\r\n                                                fmodal.show();\r\n                                                return fmodal;\r\n                                            }).fail(Notification.exception);\r\n                                        })\r\n\r\n                                    },\r\n                                    fail: Notification.exception\r\n                                }\r\n                            ]);\r\n                        }\r\n                    });\r\n\r\n                    return fmodal;\r\n                }).done(function(modal) {\r\n                    modal.show();\r\n                }).fail(Notification.exception);\r\n            });\r\n        },\r\n\r\n        supportPopupStudent: function () {\r\n            const self = this;\r\n            if(popup_disable) return;\r\n            popup_disable = true;\r\n\r\n            Str.get_strings([\r\n                {key: 'question_to_teacher', component: 'local_redmine'},\r\n                {key: 'send', component: 'local_redmine'},\r\n            ]).done(function (strings) {\r\n\r\n                const screen = document.querySelector(\"body\");\r\n                html2canvas(screen).then(canvas => {\r\n                    screenshot = canvas.toDataURL(\"image/jpeg\");\r\n\r\n                    var modalPromise = ModalFactory.create({\r\n                        type: ModalFactory.types.SAVE_CANCEL,\r\n                        title: strings[0],\r\n                    });\r\n\r\n                    $.when(modalPromise).then(function(fmodal) {\r\n                       /*  fmodal.setLarge(); */\r\n                        fmodal.setSaveButtonText(strings[1]);\r\n\r\n                        let context = {screenshot: screenshot};\r\n                        Templates.render(\"local_redmine/support/supportPopupStudent\", context)\r\n                            .done(function (html, js) {\r\n                                fmodal.setBody(html);\r\n                                popup_disable = false;\r\n                            })\r\n\r\n                        // Save button.\r\n                        fmodal.getRoot().on(ModalEvents.save, function(e) {\r\n                            e.preventDefault();\r\n\r\n                            fmodal.body.find('.more_info_error').hide();\r\n\r\n                            var more_info = fmodal.body.find('#more_info').val();\r\n                            var upload_info = fmodal.body.find('#upload_info').val();\r\n\r\n                            // Validation\r\n                            var errors = [];\r\n                            if (!more_info.trim().length) {\r\n                                errors.push('Error more_info');\r\n                            }\r\n\r\n                            if (errors.length === 0) {\r\n\r\n                                // Insert spinner.\r\n                                self.insertSpinner($(fmodal.footer).find('[data-action=\"save\"]'));\r\n\r\n                                Ajax.call([{\r\n                                        methodname: \"local_redmine_support_student_request\",\r\n                                        args: {\r\n                                            userBrowserName: pageProperties.getBrowser().name,\r\n                                            userBrowserVersion: pageProperties.getBrowser().version,\r\n                                            userIP: myip,\r\n                                            screenshot: screenshot,\r\n                                            moreInfo: more_info,\r\n                                            uploadInfo: upload_info,\r\n                                            resolution:  pageProperties.getResolution(),\r\n                                            pageurl: pageProperties.getPageUrl(),\r\n                                            courseid: pageProperties.getCourseID(),\r\n                                        },\r\n                                        done: function(response) {\r\n                                            \r\n                                            self.removeSpinner($(fmodal.footer).find('[data-action=\"save\"]'));\r\n                                            fmodal.destroy();\r\n\r\n                                            // Success popup.\r\n                                            Str.get_strings([\r\n                                                {key: 'supportstudentsuccesssendtitle', component: 'local_redmine'},\r\n                                                {key: 'supportstudentsuccesssendcontent', component: 'local_redmine'},\r\n                                            ]).done(function(strings) {\r\n                                                var modalPromise = ModalFactory.create({\r\n                                                    type: ModalFactory.types.ALERT,\r\n                                                    title: strings[0],\r\n                                                    body: strings[1]\r\n                                                });\r\n                                                $.when(modalPromise).then(function(fmodal) {\r\n                                                    fmodal.show();\r\n                                                    return fmodal;\r\n                                                }).fail(Notification.exception);\r\n                                            })\r\n\r\n                                        },\r\n                                        fail: Notification.exception\r\n                                    }\r\n                                ]);\r\n                            } else {\r\n                                fmodal.body.find('.more_info_error').show();\r\n                                fmodal.body.find('#more_info').focus();\r\n                            }\r\n                        });\r\n\r\n                        return fmodal;\r\n                    }).done(function(modal) {\r\n                        modal.show();\r\n                        $('#support-btn-student').removeClass('active disabled');\r\n                        self.removeSpinner('#support-btn-student');\r\n                    }).fail(Notification.exception);\r\n                });\r\n            });\r\n        },\r\n\r\n        insertSpinner: function (parent) {\r\n            if ($(parent).find('span').length == 0) {\r\n                let innerText = $(parent).html();\r\n                innerText = `<span class=\"btn-text\" style=\"display:none;\"> ${innerText} </span>${spinner}`;\r\n                $(parent).html(innerText).addClass('disabled').attr('disabled', 'disabled');\r\n            } else {\r\n                $(parent).find('.btn-text').hide();\r\n                $(parent).find('.spinner-border').show();\r\n                $(parent).addClass('disabled').attr('disabled', 'disabled');\r\n            }\r\n        },\r\n\r\n        removeSpinner: function (parent) {\r\n            $(parent).find('.btn-text').show();\r\n            $(parent).find('.spinner-border').hide();\r\n            $(parent).removeClass('disabled').removeAttr('disabled');\r\n        },\r\n\r\n        renderIssueCounter: function (){\r\n            Str.get_strings([\r\n                {key: 'have_you_a_question', component: 'local_redmine'},\r\n                {key: 'send', component: 'local_redmine'},\r\n            ]).done(function (strings) {\r\n\r\n                Ajax.call([{\r\n                    methodname: \"local_redmine_issues_counter_user\",\r\n                    args: {\r\n                    },\r\n                    done: function(response) {\r\n                        let data = JSON.parse(response);\r\n                        if(data.counter > 0){\r\n                            $('#issues_counter_user').text(data.counter).show();\r\n                            $('#issues_counter_user_span').text(data.counter);\r\n                            $('#issues_counter_user_block').show();\r\n                        }else{\r\n                            $('#issues_counter_user').hide();\r\n                            $('#issues_counter_user_block').hide();\r\n                        }\r\n                    },\r\n                    fail: Notification.exception\r\n                }])\r\n            })\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Ajax","Templates","Notification","html2canvas","pageProperties","screenshot","popup_disable","myip","init","self","this","renderIssueCounter","getIP","ip","click","supportPopup","e","target","addClass","insertSpinner","supportPopupStudent","def","context","get_strings","key","component","done","strings","modalPromise","create","type","types","SAVE_CANCEL","title","when","then","fmodal","setSaveButtonText","render","html","js","setBody","getRoot","on","bodyRendered","support_activities_div","body","find","support_activities_title","callback","ms","timer","keyup","hide","query","val","trim","length","get_activities","args","arguments","clearTimeout","setTimeout","apply","call","methodname","render_activities","list","JSON","parse","show","forEach","act","link","append","save","preventDefault","more_info","upload_info","question","errors","focus","push","undefined","footer","userBrowserName","getBrowser","name","userBrowserVersion","version","userIP","moreInfo","uploadInfo","resolution","getResolution","pageurl","getPageUrl","questionType","response","removeSpinner","destroy","ALERT","fail","exception","modal","screen","document","querySelector","canvas","toDataURL","courseid","getCourseID","removeClass","parent","innerText","attr","removeAttr","data","counter","text"],"mappings":"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"}