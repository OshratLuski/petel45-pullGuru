<div class="activity-filters">

    <div class="d-flex align-items-center btns-block">
        <div class="filter-pic d-flex align-items-center">
            <i class="fal fa-filter"></i>
        </div>
        {{#filters}}
        <button class="btn filter-btn dropdown-btn ml-3 {{#fullwidth}} fullwidth {{/fullwidth}}" type="button" data-id="#{{nav_id}}">
            {{nav_title}}
            <i class="fa fa-caret-down ml-2" aria-hidden="true"></i>
        </button>
        {{/filters}}

    </div>

    {{#filters}}
    <div class="filter-collapse" id="{{nav_id}}" style="display: none;">
        <div class="filter-collapse-card card card-body p-3 d-inline-flex">
            <form action="" class="filter-form d-flex {{#fullwidth}} flex-wrap {{/fullwidth}}">

                {{#columns}}
                <div class="form-col mr-3 {{#fullwidth}} mb-3 {{/fullwidth}}">
                    <h4 class="form-col-title mb-1" role="heading">
                        {{title}}
                    </h4>

                    {{#data}}
                    <div class="custom-control custom-checkbox py-1">
                        <input class="custom-control-input" type="checkbox" id="{{uniqueid}}" data-plugin="question"
                            data-area="filters" data-action="{{field}}" data-value="{{value}}" data-search="{{search}}"
                            data-group="{{group}}">
                        <label class="custom-control-label" for="{{uniqueid}}">
                            {{print_value}}
                        </label>
                    </div>
                    {{/data}}
                </div>
                {{/columns}}

            </form>
        </div>
    </div>
    {{/filters}}

</div>

<div class="checked-option-pills d-flex flex-wrap align-items-center pt-4"></div>
<div class="question-block activity-block pt-4">
    <h3 class="total-questions-block total-activities-block question-block-title mr-auto mb-3 bold"></h3>
    <div class="activity-block-header question-block-header d-flex align-items-center justify-content-end mb-4">

        {{#hidden_questions}}

            <button class="btn activity-block-header-btn dropdown-btn rounded ml-3 d-flex align-items-center btn-delete-checkboxes-question-oer" type="button" disabled>
                <i class="fal fa-trash-alt mr-2"></i>
                <span>
                    {{#str}}delete_question, community_oer{{/str}}
                </span>
            </button>

            <label class="hide-questions-label ml-3 mb-0 btn-view-only-question-hidden" for="view-only-hidden" style="display:none;">
                <input type="checkbox" class="custom-control-input d-none" id="view-only-hidden" data-plugin="question" data-area="view-only-hidden" data-value="1">
                <span class="checked-state btn btn-outline-primary">{{#str}}enable_view_only_hidden_questions, community_oer{{/str}}</span>
                <span class="unchecked-state btn btn-outline-primary">{{#str}}disable_view_only_hidden_questions, community_oer{{/str}}</span>
            </label>
        
            <label class="hide-questions-label ml-3 mb-0" for="hide-questions">
                <input type="checkbox" class="custom-control-input d-none" id="hide-questions" data-plugin="question" data-area="hidden" data-value="1">
                <span class="checked-state btn btn-success">{{#str}}enable_hidden_questions, community_oer{{/str}}</span>
                <span class="unchecked-state btn btn-danger">{{#str}}disable_hidden_questions, community_oer{{/str}}</span>
            </label>
        {{/hidden_questions}}

        <button class="btn activity-block-header-btn dropdown-btn rounded ml-3 btn-hide-question-content" type="button">
            {{#str}}hide_question_content, community_oer{{/str}}
        </button>
        
        <button class="btn activity-block-header-btn dropdown-btn rounded ml-3 btn-show-question-content" type="button" disabled>
            {{#str}}show_questions_content, community_oer{{/str}}
        </button>

        <button class="btn activity-block-header-btn dropdown-btn rounded ml-3 d-flex align-items-center btn-share-checkboxes-question-oer" type="button" disabled>
            <i class="fa-light fa-copy mr-2"></i>
            <span>
                {{#str}}copy_for_my_environment, community_oer{{/str}}
            </span>
        </button>
        <div class="dropdown dropdownmoremenu">
            <button class="btn activity-block-header-btn dropdown-btn rounded dropdown sort-result-dropdown-btn d-flex align-items-center d-flex align-items-center ml-3" type="button"
                id="sort_result_dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                {{#str}}sortby, community_oer{{/str}}
                <i class="fa fa-caret-down ml-2" aria-hidden="true"></i>
            </button>
            <div class="dropdown-menu sort-result-dropdown-menu" aria-labelledby="sort_result_dropdown">
                <form class="py-3 px-1">
    
                    {{#sorting}}
                    <div class="form-group dropdown-item menu-action mb-0 px-2">
                        <div class="form-check d-flex align-items-center pl-0">
    
                            <input type="checkbox" class="form-check-input d-none" id="dropdownSorting{{value}}"
                                data-plugin="question" data-area="sorting" data-value="{{value}}"
                                {{#selected}} data-selected="1" checked {{/selected}}>
    
                            <i class="fal fa-check mr-2" aria-hidden="true"></i>
                            <label class="form-check-label " for="dropdownSorting{{value}}">
                                {{name}}
                            </label>
                        </div>
                    </div>
                    {{/sorting}}
    
                </form>
            </div>
        </div>
        
    </div>

    <div class="activity-blocks-content">
    </div>

</div>

{{#js}}
require(['jquery'], function ($) {
    const filterBtns = $('.filter-btn');
    filterBtns.on('click', function(){
        const btn = $(this);
        let target = $(this).data('id');
        let ofset = Math.floor($(this).position().left);
        let cssStr = 'padding-left';
        if($('html').attr('dir') == "rtl") {
            const btnWidth = btn.outerWidth();
            const activityFiltersWidth = $('.activity-filters').outerWidth();
            ofset = Math.floor(activityFiltersWidth - (ofset + btnWidth) + 16);
            cssStr = 'padding-right';
        }
        if($(this).hasClass('active')){
            $(target).toggle();
            $(this).removeClass('active');
        } else {
            filterBtns.removeClass('active');
            $(this).addClass('active');
            $('.filter-collapse').hide();
            $(target).find('.card-body').removeClass('d-inline-flex');
            if(!btn.hasClass('fullwidth')){
                $(target).css(cssStr, ofset + "px");
                $(target).find('.card-body').addClass('d-inline-flex')
            }
            $(target).show();
        }
    })

    $('.sort-result-dropdown-menu').find('.form-check input').on('click', function () {
        $('.sort-result-dropdown-menu').find('.form-check input').not(this).prop('checked', false);
    })
});

require([
        'jquery',
        'community_sharequestion/main',
        'community_oer/question',
        'core/str',
        'core/ajax',
        'core/modal_factory',
        'core/modal_events',
        'core/notification',
    ], function($, Main, Question, Str, Ajax, ModalFactory, ModalEvents, Notification) {

    // Share selected questions.
    $('.btn-share-checkboxes-question-oer').click(function() {
        let selected = [];

        $('.checkbox-share-question-oer').each(function () {
            if($(this).is(':checked')){
                selected.push($(this).data('qid'));
            }
        });

        Main.community_oer_question(selected);
    });

    // Delete selected questions.
    $('.btn-delete-checkboxes-question-oer').click(function() {
        let selected = [];

        $('.checkbox-share-question-oer').each(function () {
            if($(this).is(':checked')){
                selected.push($(this).data('qid'));
            }
        });

        Str.get_strings([
            {key: 'qpopupdeletetitle', component: 'community_oer'},
            {key: 'qpopupdeletebody', component: 'community_oer'},
            {key: 'delete_question', component: 'community_oer'},
        ]).done(function (strings) {

            ModalFactory.create({
                    type: ModalFactory.types.SAVE_CANCEL,
                    title: strings[0],
                    body: strings[1]
                }).done(function (modal) {
                    modal.setSaveButtonText(strings[2]);
                    //modal.setButtonText('cancel', strings[2]);

                    // Remove questions.
                    modal.getRoot().on(ModalEvents.save, function (e) {
                        e.preventDefault();

                        Ajax.call([{
                            methodname: 'community_oer_delete_questions',
                            args: {
                                qids: JSON.stringify(selected)
                            },
                            done: function (response) {
                                modal.destroy();
                                Question.renderBlocks();
                            },
                            fail: Notification.exception
                        }]);

                    });

                modal.show();
            }.bind(this));

        });
    });

    // Event on button show-question-content.
    $('.btn-show-question-content').on( "click", function(e) {
        $('.checkbox-share-question-oer').each(function () {
            if($(this).is(':checked')){

                let qid = $(this).data('qid');
                $('#question-collapse-id-'+qid).addClass('show');
                $(this).parent().parent().find('.collapse-question-btn').attr('aria-expanded', true);
                $(this).parent().parent().parent().addClass('active');

                $('.btn-hide-question-content').removeAttr('disabled');
            }
        });
    });

    // Event on button hide-question-content.
    $('.btn-hide-question-content').on( "click", function(e) {
        $('.question-collapse').removeClass('show');
        $('.collapse-question-btn').attr('aria-expanded', false);
        $('.question-item-wrapper').removeClass('active');
        $('.btn-hide-question-content').attr('disabled','disabled');
    });

    // Event on button hide-questions-eye.
    $('#hide-questions').on( "click", function(e) {

        if($(this).prop('checked')){
            $('.btn-view-only-question-hidden').show();
        }else{
            $('.btn-view-only-question-hidden').hide();
        }
    });

    $(document).on('click', (e) => {
        if ($(e.target).hasClass('filter-btn')) {
            return
        } else if($(e.target).parent().hasClass('filter-btn')){
            return
        }
        else if ($(e.target).hasClass('filter-collapse-card')) {
            return
        }
        else if ($(e.target).closest('.filter-collapse-card').length == 1){
            return
        }
        else {
            let activeFilterBtn = $('.filter-btn.active');
            let activeFilterId = activeFilterBtn.data('id');
            if (activeFilterBtn.length > 0) {
                $(activeFilterId).hide();
                activeFilterBtn.removeClass('active');
            }
        }
    })
});
{{/js}}