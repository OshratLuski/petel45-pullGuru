{"version":3,"file":"copyFromMyCourses.min.js","sources":["../src/copyFromMyCourses.js"],"sourcesContent":["define([\n    'jquery',\n    'core/str',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/ajax',\n    'core/templates',\n    'core/notification',\n    'core/fragment',\n    'community_sharequestion/inview'\n\n], function($, Str, ModalFactory, ModalEvents, Ajax, Templates,\n    Notification, Fragment, inView) {\n    `use strict`;\n\n    let uniqueid;\n    let cmid;\n\n    let SELECTORS = {\n        buttonEvent: '.addquestionfrommycourses'\n    };\n\n    /**\n     *\n     */\n    function updateCountSelected() {\n        let form = $('#copy_from_my_courses_' + uniqueid);\n        let counter = 0;\n\n        form.find('.checkbox-select-question').each(function(index) {\n            if ($(this).prop('checked')) {\n                counter++;\n            }\n        });\n\n        $('#checked-question-counter-num-' + uniqueid).html(counter);\n    }\n\n    // Render loading.\n    /**\n     * @param target\n     */\n    function loadingIcon(target) {\n        Templates.render('community_sharequestion/loading', {}).done(function(html, js) {\n            Templates.replaceNodeContents(target, html, js);\n        }).fail(Notification.exception);\n    }\n\n    // Render courses.\n    /**\n     *\n     */\n    function renderCoursesForUser() {\n\n        loadingIcon($('#popup_block_content_courses_' + uniqueid));\n\n        let search = $('#search_' + uniqueid).val();\n        if (search === undefined) {\n            search = \"\";\n        }\n\n        Ajax.call([{\n            methodname: 'community_sharequestion_get_courses_by_user',\n            args: {\n                search: search,\n                uniqueid: uniqueid\n            },\n            done: function(response) {\n\n                let data = JSON.parse(response);\n                // Render courses.\n                Templates.render('community_sharequestion/copy_from_my_courses/courses', data.result)\n                    .done(function(html, js) {\n\n                        Templates.replaceNodeContents($('#popup_block_content_courses_' + uniqueid), html, js);\n\n                        $('#all_checkboxes_' + uniqueid).prop('checked', false);\n                        updateCountSelected();\n                    })\n                    .fail(Notification.exception);\n            },\n            fail: Notification.exception\n        }]);\n    }\n\n    return {\n        init: function(currentcourseid, currentcoursecontext) {\n\n            // Get the content of the modal.\n            const getBody = function(coursemoduleid) {\n                uniqueid = Date.now();\n                cmid = coursemoduleid;\n\n                let params = {cmid: coursemoduleid, uniqueid: uniqueid};\n                return Fragment.loadFragment('community_sharequestion', 'copy_questions_from_my_courses', currentcoursecontext, params);\n            };\n\n            $(SELECTORS.buttonEvent).on(\"click\", function(e) {\n                e.preventDefault();\n\n                let cmid = $(this).data('cmid');\n\n                Str.get_strings([\n                    {key: 'copyquestionsfrommycourses', component: 'community_sharequestion'},\n                    {key: 'qshare', component: 'community_sharequestion'},\n                ]).done(function(strings) {\n                    var modalPromise = ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: strings[0],\n                        body: getBody(cmid)\n                    });\n\n                    $.when(modalPromise).then(function(fmodal) {\n\n                        fmodal.setSaveButtonText(strings[1]);\n\n                        // Handle save event.\n                        fmodal.getRoot().on(ModalEvents.save, function(e) {\n                            e.preventDefault();\n\n                            let form = $('#copy_from_my_courses_' + uniqueid);\n                            let selected = [];\n\n                            form.find('.checkbox-select-question').each(function(index) {\n                                if ($(this).prop('checked')) {\n                                    selected.push($(this).data('qid'));\n                                }\n                            });\n\n                            if (selected.length) {\n\n                                // Close popup.\n                                fmodal.destroy();\n\n                                // Success popup.\n                                Str.get_strings([\n                                    {key: 'popupmessagesuccesstitle', component: 'community_sharequestion'},\n                                    {key: 'popupmessagesuccesscontent', component: 'community_sharequestion'},\n                                    {key: 'popupbuttondisabled', component: 'community_sharequestion'},\n                                    {key: 'popupbuttonenabled', component: 'community_sharequestion'}\n                                ]).done(function(strings) {\n\n                                    var modalPromise = ModalFactory.create({\n                                        type: ModalFactory.types.ALERT,\n                                        title: strings[0],\n                                        body: strings[1]\n                                    });\n\n                                    $.when(modalPromise).then(function(fmodal) {\n                                        fmodal.show();\n                                        let root = fmodal.getRoot();\n\n                                        // Refresh page.\n                                        root.on(ModalEvents.cancel, function() {\n                                            location.reload();\n                                        });\n\n                                        // When shown popup.\n                                        root.on(ModalEvents.shown, function() {\n                                            root.find('*[data-action=\"cancel\"]').text(strings[2]);\n                                            root.find('*[data-action=\"cancel\"]').prop('disabled', true);\n\n                                            Ajax.call([{\n                                                methodname: 'community_sharequestion_save_questions_to_quiz',\n                                                args: {\n                                                    cmid: cmid,\n                                                    qids: JSON.stringify(selected)\n                                                },\n                                                done: function(response) {\n                                                    let data = JSON.parse(response);\n\n                                                    root.find('*[data-action=\"cancel\"]').text(strings[3]);\n                                                    root.find('*[data-action=\"cancel\"]').prop('disabled', false);\n                                                },\n                                                fail: Notification.exception\n                                            }]);\n\n                                        });\n\n                                        return fmodal;\n                                    }).fail(Notification.exception);\n                                });\n\n                            } else {\n                                // Fail popup.\n                                Str.get_strings([\n                                    {key: 'popupmessagefailtitle', component: 'community_sharequestion'},\n                                    {key: 'popupmessagefailcontent', component: 'community_sharequestion'}\n                                ]).done(function(strings) {\n\n                                    var modalPromise = ModalFactory.create({\n                                        type: ModalFactory.types.ALERT,\n                                        title: strings[0],\n                                        body: strings[1]\n                                    });\n\n                                    $.when(modalPromise).then(function(fmodal) {\n                                        fmodal.show();\n                                        return fmodal;\n                                    }).fail(Notification.exception);\n                                });\n                            }\n\n                        });\n\n                        fmodal.getModal().addClass('modal-xlg');\n                        fmodal.getModal().addClass('import-questions-modal');\n                        var root = fmodal.getRoot();\n                        root.on(ModalEvents.shown, function() {\n\n                            setTimeout(function() {\n                                    root.find('.modal-body').animate({\n                                        scrollTop: 0\n                                    }, 200);\n\n                                    // Render courses.\n                                    renderCoursesForUser();\n                                }, 500);\n                        });\n\n                        return fmodal;\n                    }).done(function(modal) {\n                        modal.show();\n                    }).fail(Notification.exception);\n                });\n\n            });\n        },\n\n        actionsMain: function() {\n            let form = $('#copy_from_my_courses_' + uniqueid);\n\n            // Search input change.\n            let search = $('#search_' + uniqueid);\n            search.change(function() {\n\n                // Render courses.\n                renderCoursesForUser();\n\n                if (search.val() === '') {\n                    // Hide close icon and show search icon.\n                    search.siblings('.question-search-icon').show();\n                    search.siblings('.question-search-close-icon').hide();\n                } else {\n                    // Hide search icon and show close icon.\n                    search.siblings('.question-search-icon').hide();\n                    search.siblings('.question-search-close-icon').show();\n                }\n            });\n\n            // Clear search input\n            form.find('.question-search-close-icon').on('click keydown', (e) => {\n                if (e.type === \"click\" || e.type === \"keydown\" && e.which === 13) {\n\n                    const targetInput = $(\"#search_\" + uniqueid);\n\n                    // Refreash search results\n                    $('#search_' + uniqueid).val('');\n                    renderCoursesForUser();\n\n                    // Show search icon\n                    targetInput.siblings('.question-search-close-icon').hide();\n                    targetInput.siblings('.question-search-icon').show();\n                }\n            });\n\n            // Checkbox select all.\n            $('#all_checkboxes_' + uniqueid).change(function() {\n                if (this.checked) {\n                    form.find('.checkbox-select-question').each(function(index) {\n                        $(this).prop('checked', true);\n                    });\n                } else {\n                    form.find('.checkbox-select-question').each(function(index) {\n                        $(this).prop('checked', false);\n                    });\n                }\n\n                updateCountSelected();\n            });\n        },\n\n        actionsCategories: function() {\n            let form = $('#copy_from_my_courses_' + uniqueid);\n\n            // Open collapse - all course categories\n            $(form).find('.all-course-categories-wrapper-collapse').on('show.bs.collapse', function(e) {\n                e.stopPropagation();\n                let target = $(e.target);\n                let courseid = target.data('courseid');\n                let search = $('#search_' + uniqueid).val();\n\n                // Open course categories.\n                if (!target.hasClass('view-done') && target.hasClass('all-course-categories-wrapper-collapse')) {\n                    loadingIcon(target);\n\n                    Ajax.call([{\n                        methodname: 'community_sharequestion_get_question_categories_by_course',\n                        args: {\n                            courseid: courseid,\n                            uniqueid: uniqueid,\n                            search: search\n                        },\n                        done: function(response) {\n                            let data = JSON.parse(response);\n                            Templates.render('community_sharequestion/copy_from_my_courses/course-categories', data.result)\n                                .done(function(html, js) {\n                                    Templates.replaceNodeContents(target, html, js);\n                                    target.addClass('view-done');\n                                })\n                                .fail(Notification.exception);\n                            },\n                        fail: Notification.exception\n                    }]);\n                } else if (!target.hasClass('view-done') && target.hasClass('cat-wrapper-collapse')) {\n\n                    // Open category questions.\n                    loadingIcon(target);\n\n                    let catid = target.data('catid');\n\n                    Ajax.call([{\n                        methodname: 'community_sharequestion_get_questions_by_category',\n                        args: {\n                            catid: catid,\n                            uniqueid: uniqueid,\n                            search: search\n                        },\n                        done: function(response) {\n                                let data = JSON.parse(response);\n                                // Render block category questions.\n                                Templates.render('community_sharequestion/copy_from_my_courses/category-questions', data.result)\n                                    .done(function(html, js) {\n                                        Templates.replaceNodeContents(target, html, js);\n                                        target.addClass('view-done');\n                                    })\n                                    .fail(Notification.exception);\n                            },\n                        fail: Notification.exception\n                    }]);\n                }\n            });\n\n        },\n\n        actionsBankCategories: function() {\n            let form = $('#copy_from_my_courses_' + uniqueid);\n\n            // Open collapse - all course categories\n            $(form).find('.all-bank-categories-wrapper-collapse').on('show.bs.collapse', function(e) {\n                e.stopPropagation();\n                let target = $(e.target);\n                let courseid = target.data('courseid');\n                let search = $('#search_' + uniqueid).val();\n\n                // Open course categories.\n                if (!target.hasClass('view-done') && target.hasClass('all-bank-categories-wrapper-collapse')) {\n                    loadingIcon(target);\n\n                    Ajax.call([{\n                        methodname: 'community_sharequestion_get_bank_categories_on_course',\n                        args: {\n                            courseid: courseid,\n                            uniqueid: uniqueid,\n                            search: search\n                        },\n                        done: function(response) {\n                            let data = JSON.parse(response);\n                            Templates.render('community_sharequestion/copy_from_my_courses/bank-categories', data.result)\n                                .done(function(html, js) {\n                                    Templates.replaceNodeContents(target, html, js);\n                                    target.addClass('view-done');\n                                })\n                                .fail(Notification.exception);\n                        },\n                        fail: Notification.exception\n                    }]);\n                } else if (!target.hasClass('view-done') && target.hasClass('bank-categories-wrapper-collapse')) {\n\n                    // Open category questions.\n                    loadingIcon(target);\n\n                    let catid = target.data('catid');\n\n                    Ajax.call([{\n                        methodname: 'community_sharequestion_get_questions_by_category',\n                        args: {\n                            catid: catid,\n                            uniqueid: uniqueid,\n                            search: search\n                        },\n                        done: function(response) {\n                            let data = JSON.parse(response);\n                            // Render block category questions.\n                            Templates.render('community_sharequestion/copy_from_my_courses/category-questions', data.result)\n                                .done(function(html, js) {\n                                    Templates.replaceNodeContents(target, html, js);\n                                    target.addClass('view-done');\n                                })\n                                .fail(Notification.exception);\n                        },\n                        fail: Notification.exception\n                    }]);\n                }\n            });\n\n        },\n\n        actionsQuestions: function() {\n            let form = $('#copy_from_my_courses_' + uniqueid);\n\n            // Open iframe question.\n            inView('#copy_from_my_courses_' + uniqueid + ' .question-collapse').on('enter', function(e) {\n                let parent = $(e);\n                if (!parent.hasClass('inview-done')) {\n                    parent.addClass('inview-done');\n                    let qid = parent.data('qid');\n                    let spinner = parent.find('.raspberry_loading');\n                    spinner.show();\n                    let html = '<iframe id=\"iframe' + qid + uniqueid + '\" scrolling=\"no\" style=\"width:100%; height:300px;\" src=\"' + M.cfg.wwwroot + '/local/community/plugins/oer/previewquestion.php?id=' + qid + '&behaviour=adaptive\"></iframe>';\n                    parent.find('.question-collapse-inner').html(html);\n                    document.querySelector('#iframe' + qid + uniqueid).addEventListener('load', function() {\n                        spinner = parent.find('.raspberry_loading');\n                        spinner.remove();\n\n                        const btn = parent.find('.inner-copy-question-btn');\n                        btn.show();\n                    });\n                }\n\n            }).on('exit', el => { });\n\n\n            $('.course-wrapper-name').on('click', function() {\n                const target = $(this);\n                if (target.hasClass('collapsed')) {\n                    return;\n                } else {\n                    const catCollapse = target.next('.course-wrapper-name-collapse').find('.cat-wrapper-collapse');\n                    catCollapse.each(function(el) {\n                        $(this).collapse('hide');\n                    });\n                }\n            });\n\n            $('.type-cell, .name-cell, .create-cell, .create-date-cell, .update-date-cell').on(\"click\", function(e) {\n                const target = $(e.currentTarget);\n                const parent = target.closest('.question-item-wrapper');\n                const collapseBtn = parent.find('.collapse-question-btn');\n                collapseBtn.trigger('click');\n            });\n\n            form.find('.checkbox-select-question').change(function() {\n                updateCountSelected();\n\n                let flagselected = true;\n                form.find('.checkbox-select-question').each(function(index) {\n                    if ($(this).prop('checked') === false) {\n                        flagselected = false;\n                    }\n                });\n\n                if (flagselected === false) {\n                    $('#all_checkboxes_' + uniqueid).prop('checked', false);\n                } else {\n                    $('#all_checkboxes_' + uniqueid).prop('checked', true);\n                }\n            });\n\n        },\n\n    };\n});\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Ajax","Templates","Notification","Fragment","inView","uniqueid","cmid","SELECTORS","updateCountSelected","form","counter","find","each","index","this","prop","html","loadingIcon","target","render","done","js","replaceNodeContents","fail","exception","renderCoursesForUser","search","val","undefined","call","methodname","args","response","data","JSON","parse","result","init","currentcourseid","currentcoursecontext","getBody","coursemoduleid","Date","now","params","loadFragment","on","e","preventDefault","get_strings","key","component","strings","modalPromise","create","type","types","SAVE_CANCEL","title","body","when","then","fmodal","setSaveButtonText","getRoot","save","selected","push","length","destroy","ALERT","show","root","cancel","location","reload","shown","text","qids","stringify","getModal","addClass","setTimeout","animate","scrollTop","modal","actionsMain","change","siblings","hide","which","targetInput","checked","actionsCategories","stopPropagation","courseid","hasClass","catid","actionsBankCategories","actionsQuestions","parent","qid","spinner","M","cfg","wwwroot","document","querySelector","addEventListener","remove","el","next","collapse","currentTarget","closest","trigger","flagselected"],"mappings":"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"}