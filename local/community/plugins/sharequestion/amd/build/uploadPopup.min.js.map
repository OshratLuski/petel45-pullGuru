{"version":3,"file":"uploadPopup.min.js","sources":["../src/uploadPopup.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\r\ndefine([\r\n    'jquery',\r\n    'core/ajax',\r\n    'core/str',\r\n    'core/templates',\r\n    'core/notification',\r\n    'core/modal_factory',\r\n    'core/fragment',\r\n    'jqueryui',\r\n\r\n], function($, Ajax, str, Templates, Notification, ModalFactory, Fragment) {\r\n\r\n    return {\r\n\r\n        init: function(uniqueid) {\r\n            var form = $('#sharing_activities_form_' + uniqueid),\r\n                self = this;\r\n            form.on('keydown', 'input[type=\"text\"]', function(e) {\r\n                if (e.keyCode === 13) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n\r\n            form.delegate('[data-descr=\"addtag\"]', 'keydown', function(e) {\r\n                if (e.keyCode === 13 && $(this).val()) {\r\n                    var tag = $('<div class = \"tags-item\">' + $(this).val() +\r\n                        '<input type = \"hidden\" name = \"tags[]\" value = \"' + $(this).val() + '\"></div>');\r\n                    tag.css(\"background-color\", self.getRandColor());\r\n                    tag.appendTo($(this).parent());\r\n                    tag.on('click', function() {\r\n                        $(this).remove();\r\n                    });\r\n                    $(this).val('');\r\n                }\r\n            });\r\n\r\n            form.find('.uploadactivitysubmit').click(function(event) {\r\n                self.uploadActivity(event, form);\r\n            });\r\n\r\n            form.find('.uploadactivityclose').click(function(event) {\r\n\r\n                // Close modal factory popup.\r\n                self.closeModalFactory(form);\r\n            });\r\n\r\n        },\r\n\r\n        uploadActivity: function(e, form) {\r\n            let self = this;\r\n\r\n            e.preventDefault();\r\n\r\n            // Remove errors.\r\n            form.find('.invalid-feedback').hide();\r\n\r\n            self.addBtnSpinner(form);\r\n\r\n            var serializedForm = form.serializeArray(),\r\n                data = {};\r\n\r\n            serializedForm.forEach(function(item) {\r\n                data[item.name] = data[item.name] ? data[item.name] + ',' + item.value : item.value;\r\n            });\r\n\r\n            // Serialized selected sections.\r\n            let selectedsections = [];\r\n            form.find('.selected-section-block').each(function() {\r\n                if (!$(this).hasClass('hidden')) {\r\n                    selectedsections.push({\r\n                        'cat_id': $(this).data(\"cat_id\"),\r\n                        'course_id': $(this).data(\"course_id\"),\r\n                        'section_id': $(this).data(\"section_id\"),\r\n                    });\r\n                }\r\n            });\r\n\r\n            data.selected_sections = selectedsections;\r\n\r\n            // Serialized selected competencies.\r\n            let selectedcompetencies = [];\r\n            form.find('.selected-competency-block').each(function() {\r\n                if (!$(this).hasClass('hidden')) {\r\n                    selectedcompetencies.push({\r\n                        'competency_id': $(this).data(\"comp_id\"),\r\n                        'section_id': $(this).data(\"section_id\"),\r\n                    });\r\n                }\r\n            });\r\n\r\n            data.selected_competencies = selectedcompetencies;\r\n\r\n            // Selected_questions.\r\n            const questionsContainer = document.querySelector('div.mod-quiz-edit-content');\r\n            const checkboxes = questionsContainer.querySelectorAll('input.select-multiple-checkbox:checked');\r\n            const selectedquestions = [];\r\n\r\n            checkboxes.forEach(checkbox => {\r\n                const questionContainer = checkbox.closest('li.activity');\r\n                if (questionContainer) {\r\n                    const activityInstance = questionContainer.querySelector('div.activityinstance');\r\n                    if (activityInstance) {\r\n                        const link = activityInstance.querySelector('a[href*=\"id=\"]');\r\n                        if (link) {\r\n                            const questionHref = link.getAttribute('href');\r\n                            const questionIdMatch = questionHref.match(/[?&]id=(\\d+)/);\r\n                            if (questionIdMatch) {\r\n                                const questionRealId = questionIdMatch[1];\r\n                                selectedquestions.push(questionRealId);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            data.selected_questions = JSON.stringify(selectedquestions);\r\n\r\n            var parseResponse = function(response) {\r\n                if (response.result) {\r\n\r\n                    if (!response.validation) {\r\n                        let firstNameError = '';\r\n                        let errors = JSON.parse(response.errors);\r\n                        $.each(errors, function(index, value) {\r\n                            if (index === 0) {\r\n                                firstNameError = value;\r\n                            }\r\n                            form.find('.error-' + value).show();\r\n                        });\r\n                        // Scroll to first error.\r\n                        var parentModal = form.closest('.modal-body');\r\n                        var uploadActivityOffset = +parentModal.find('.uploadactivity').offset().top * (-1);\r\n                        var targetOffset = parentModal.find('.error-' + firstNameError).closest('.form-group').offset().top * (-1);\r\n                        var result = uploadActivityOffset - targetOffset;\r\n                        parentModal.closest('.modal-body').animate({scrollTop: result}, 500);\r\n\r\n                        self.removeBtnSpinner(form);\r\n                        return;\r\n                    } else {\r\n\r\n                        // Close modal factory popup.\r\n                        self.closeModalFactory(form);\r\n\r\n                        let title = M.util.get_string('eventquestionupload', 'community_sharequestion');\r\n                        str.get_string('question_upload_to_mr', 'community_sharequestion', data).done(function(string) {\r\n                            Templates.render('community_sharequestion/elements/information-popup',\r\n                                {string: string, rootLink: M.cfg.wwwroot})\r\n                                .done(function(html, js) {\r\n                                    self.informationPopup(title, html);\r\n                                })\r\n                                .fail(Notification.exception);\r\n                        });\r\n                    }\r\n                } else {\r\n\r\n                    // Close modal factory popup.\r\n                    self.closeModalFactory(form);\r\n\r\n                    let title = M.util.get_string('error', 'community_sharequestion');\r\n                    let text = M.util.get_string('system_error_contact_administrator', 'community_sharequestion');\r\n                    self.informationPopup(title, text);\r\n                }\r\n            };\r\n\r\n            Ajax.call([{\r\n                methodname: 'community_sharequestion_submit_upload_activity',\r\n                args: {\r\n                    data: JSON.stringify(data)\r\n                },\r\n                done: parseResponse,\r\n                fail: Notification.exception\r\n            }]);\r\n        },\r\n\r\n        getRandColor: function() {\r\n            var color = Math.floor(Math.random() * Math.pow(256, 3)).toString(16);\r\n            while (color.length < 6) {\r\n                color = \"0\" + color;\r\n            }\r\n            return \"#\" + color;\r\n        },\r\n\r\n        informationPopup: function(title, html) {\r\n            var modalPromise = ModalFactory.create({\r\n                type: ModalFactory.types.ALERT,\r\n                title: title,\r\n                body: html\r\n            });\r\n\r\n            $.when(modalPromise).then(function(fmodal) {\r\n                fmodal.show();\r\n                return fmodal;\r\n            }).fail(Notification.exception);\r\n        },\r\n\r\n        closeModalFactory: function(form) {\r\n            form.parent().parent().parent().find('.btn-close').click();\r\n        },\r\n\r\n        /**\r\n         * Show spinner.\r\n         *\r\n         * @param form\r\n         * @method addSpinner\r\n         */\r\n        addBtnSpinner: function(form) {\r\n            form.find('.modalspinner').removeClass('d-none');\r\n            form.find('.modalspinner').addClass('loading');\r\n            form.find('.modalspinner').parent().prop('disabled', true);\r\n        },\r\n\r\n        /**\r\n         * Remove spinner.\r\n         *\r\n         * @param form\r\n         * @method addSpinner\r\n         */\r\n        removeBtnSpinner: function(form) {\r\n            form.find('.modalspinner').removeClass('loading');\r\n            form.find('.modalspinner').addClass('d-none');\r\n            form.find('.modalspinner').parent().prop('disabled', false);\r\n        },\r\n    };\r\n});\r\n"],"names":["define","$","Ajax","str","Templates","Notification","ModalFactory","Fragment","init","uniqueid","form","self","this","on","e","keyCode","preventDefault","delegate","val","tag","css","getRandColor","appendTo","parent","remove","find","click","event","uploadActivity","closeModalFactory","hide","addBtnSpinner","serializedForm","serializeArray","data","forEach","item","name","value","selectedsections","each","hasClass","push","cat_id","course_id","section_id","selected_sections","selectedcompetencies","competency_id","selected_competencies","checkboxes","document","querySelector","querySelectorAll","selectedquestions","checkbox","questionContainer","closest","activityInstance","link","questionIdMatch","getAttribute","match","questionRealId","selected_questions","JSON","stringify","call","methodname","args","done","response","result","validation","firstNameError","errors","parse","index","show","parentModal","offset","top","animate","scrollTop","removeBtnSpinner","title","M","util","get_string","string","render","rootLink","cfg","wwwroot","html","js","informationPopup","fail","exception","text","color","Math","floor","random","pow","toString","length","modalPromise","create","type","types","ALERT","body","when","then","fmodal","removeClass","addClass","prop"],"mappings":"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"}