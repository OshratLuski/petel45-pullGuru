{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["define([\r\n    'jquery',\r\n    'core/yui',\r\n    'core/str',\r\n    'core/modal_factory',\r\n    'core/modal_events',\r\n    'core/ajax',\r\n    'core/templates',\r\n    'core/notification',\r\n    'core/fragment',\r\n    'community_sharequestion/sendtoteacher',\r\n    'community_sharequestion/select2'\r\n\r\n], function($, Y, Str, ModalFactory, ModalEvents, Ajax, Templates, Notification, Fragment, SendToTeacher) {\r\n    `use strict`;\r\n\r\n    const sesskey = M.cfg.sesskey;\r\n    const selected_questions = [];\r\n    const currentcourseid = null;\r\n    const currentcoursecontext = null;\r\n    const flag_background_enable = false;\r\n    const large = false;\r\n    const context_template = {};\r\n\r\n    /**\r\n     * @param modal\r\n     * @param sclass\r\n     */\r\n    function build_select2(modal, sclass) {\r\n        var select2Target = modal.body.find(sclass);\r\n        var dropdownParent = select2Target.closest('.select-wrapper');\r\n        select2Target.select2({\r\n            dropdownAutoWidth: true,\r\n            dropdownParent: dropdownParent\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param selected\r\n     * @param currentcourseid\r\n     * @param currentcoursecontext\r\n     * @param type\r\n     */\r\n    function open_selector(selected = null, currentcourseid = null, currentcoursecontext = null, type = null) {\r\n        let self = this;\r\n\r\n        if (selected !== null) {\r\n            this.selected_questions = selected;\r\n        }\r\n        if (currentcourseid !== null) {\r\n            this.currentcourseid = currentcourseid;\r\n        }\r\n        if (currentcoursecontext !== null) {\r\n            this.currentcoursecontext = currentcoursecontext;\r\n        }\r\n\r\n        switch (type) {\r\n            case 'all':\r\n                self.large = true;\r\n                self.context_template = {\r\n                    questionupload: true,\r\n                    copyquestionstoteacher: true,\r\n                    copyquestionstocategory: true,\r\n                    copyquestionstoquiz: true,\r\n                };\r\n                break;\r\n            case 'all-nooer':\r\n                self.large = true;\r\n                self.context_template = {\r\n                    questionupload: false,\r\n                    copyquestionstoteacher: true,\r\n                    copyquestionstocategory: true,\r\n                    copyquestionstoquiz: true,\r\n                };\r\n                break;\r\n            case 'message':\r\n                self.large = false;\r\n                self.context_template = {\r\n                    copyquestionstocategory: true,\r\n                    copyquestionstoquiz: true,\r\n                };\r\n                break;\r\n            case 'oer':\r\n                self.large = false;\r\n                self.context_template = {\r\n                    // Copyquestionstoteacher: true,\r\n                    copyquestionstocategory: true,\r\n                    copyquestionstoquiz: true,\r\n                };\r\n                break;\r\n        }\r\n\r\n        if (this.selected_questions.length !== 0) {\r\n                Str.get_strings([\r\n                    {key: 'menupopuptitle', component: 'community_sharequestion'},\r\n                    {key: 'cancel', component: 'community_sharequestion'},\r\n                ]).done(function(strings) {\r\n                    Templates.render('community_sharequestion/selector', self.context_template)\r\n                        .done(function(html) {\r\n                            var modalPromise = ModalFactory.create({\r\n                                type: ModalFactory.types.DEFAULT,\r\n                                large: self.large,\r\n                                title: strings[0],\r\n                                body: html\r\n                            });\r\n\r\n                            $.when(modalPromise).then(function(modal) {\r\n                                modal.setButtonText('cancel', strings[1]);\r\n                                modal.getRoot()[0].classList.add('sharemodal');\r\n                                modal.getRoot()[0].classList.add('sharequestionmodal');\r\n                                // $(modal.getRoot()[0]).find('.modal-header .close').html('<i class=\"fa-light fa-circle-xmark\"></i>');\r\n                                modal.getRoot().find('.modal-dialog').addClass('modal-dialog-centered');\r\n                                modal.show();\r\n                                modal.body.find('button').on(\"click\", function(e) {\r\n                                    e.stopPropagation();\r\n                                    switch (e.currentTarget.dataset.handler) {\r\n                                        case 'copyQuestionsToQuiz':\r\n                                            self.flag_background_enable = true;\r\n                                            modal.destroy();\r\n                                            open_copy_to_quiz();\r\n                                            break;\r\n                                        case 'copyQuestionsToCategory':\r\n                                            self.flag_background_enable = true;\r\n                                            modal.destroy();\r\n                                            open_copy_to_category();\r\n                                            break;\r\n                                        case 'uploadQuestionsToMaagar':\r\n                                            self.flag_background_enable = true;\r\n                                            modal.destroy();\r\n                                            open_upload_to_catalog();\r\n                                            break;\r\n                                        case 'copyQuestionsToTeacher':\r\n                                            self.flag_background_enable = true;\r\n                                            modal.destroy();\r\n                                            open_copy_to_teacher();\r\n                                            break;\r\n                                    }\r\n                                });\r\n\r\n                                modal.getRoot().on(ModalEvents.hidden, function(e) {\r\n                                    if (self.flag_background_enable === true) {\r\n                                        $(\".modal-backdrop\").removeClass('hide');\r\n                                        $(\".modal-backdrop\").addClass('show');\r\n                                    } else {\r\n                                        $(\".modal-backdrop\").removeClass('show');\r\n                                        $(\".modal-backdrop\").addClass('hide');\r\n                                    }\r\n                                });\r\n\r\n                                modal.getRoot().on(ModalEvents.shown, function(e) {\r\n                                    self.flag_background_enable = false;\r\n                                });\r\n\r\n                                return modal;\r\n                            }).fail(Notification.exception);\r\n                        })\r\n                        .fail(Notification.exception);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    function open_copy_to_quiz() {\r\n        let self = this;\r\n\r\n        if (this.selected_questions.length !== 0) {\r\n            Str.get_strings([\r\n                {key: 'copyquestionstoquiz', component: 'community_sharequestion'},\r\n                {key: 'copy', component: 'community_sharequestion'},\r\n                {key: 'back', component: 'community_sharequestion'},\r\n                {key: 'copyquestionstoquizsuccess', component: 'community_sharequestion'},\r\n            ]).done(function(strings) {\r\n\r\n                // Set html in modal.\r\n                Ajax.call([{\r\n                    methodname: 'community_sharequestion_copy_to_quiz_html',\r\n                    args: {\r\n                        currentcourseid: self.currentcourseid\r\n                    },\r\n                    done: function(response) {\r\n\r\n                        ModalFactory.create({\r\n                            type: ModalFactory.types.SAVE_CANCEL,\r\n                            title: strings[0],\r\n                            body: response\r\n                        }).done(function(modal) {\r\n                            modal.setSaveButtonText(strings[1]);\r\n                            modal.setButtonText('cancel', strings[2]);\r\n\r\n                            // Build select2.\r\n                            modal.getRoot().addClass('copy-question-to-cat-modal');\r\n                            build_select2(modal, \".select-course\");\r\n                            build_select2(modal, \".select-quiz\");\r\n\r\n                            // Event change course.\r\n                            modal.body.find('.select-course').on(\"change\", function(e) {\r\n                                modal.body.find('.select-quiz-error').hide();\r\n\r\n                                let courseid = this.value;\r\n                                Ajax.call([{\r\n                                    methodname: 'community_sharequestion_get_quizes_by_course',\r\n                                    args: {\r\n                                        courseid: courseid,\r\n                                    },\r\n                                    done: function(response) {\r\n                                        let data = JSON.parse(response);\r\n\r\n                                        // Fill options.\r\n                                        modal.body.find('.select-quiz').empty();\r\n                                        $.each(data.activities, function(index, obj) {\r\n                                            modal.body.find('.select-quiz').append('<option value=\"' + obj.cmid + '\">' + obj.name + '</option>');\r\n                                        });\r\n                                    },\r\n                                    fail: Notification.exception\r\n                                }]);\r\n                            });\r\n\r\n                            // Send to cron.\r\n                            modal.getRoot().on(ModalEvents.save, function(e) {\r\n                                e.preventDefault();\r\n\r\n                                self.flag_background_enable = true;\r\n\r\n                                let value = modal.body.find('.select-quiz').val();\r\n\r\n                                if (value !== null) {\r\n\r\n                                    // Save to cron table.\r\n                                    Ajax.call([{\r\n                                        methodname: 'community_sharequestion_save_questions_to_cron',\r\n                                        args: {\r\n                                            type: 'copy_to_quiz',\r\n                                            targetid: value,\r\n                                            questionids: JSON.stringify(self.selected_questions)\r\n                                        },\r\n                                        done: function(response) {\r\n                                            let data = JSON.parse(response);\r\n                                            if (data.result) {\r\n                                                modal.destroy();\r\n                                                open_success_popup(strings[0], strings[3]);\r\n                                            }\r\n                                        },\r\n                                        fail: Notification.exception\r\n                                    }]);\r\n                                } else {\r\n                                    modal.body.find('.select-quiz-error').show();\r\n                                }\r\n                            });\r\n\r\n                            // Back button.\r\n                            modal.getRoot().on(ModalEvents.cancel, function(e) {\r\n                                self.flag_background_enable = true;\r\n                                open_selector();\r\n                            });\r\n\r\n                            modal.getRoot().on(ModalEvents.hidden, function(e) {\r\n                                if (self.flag_background_enable === true) {\r\n                                    $(\".modal-backdrop\").removeClass('hide');\r\n                                    $(\".modal-backdrop\").addClass('show');\r\n                                } else {\r\n                                    $(\".modal-backdrop\").removeClass('show');\r\n                                    $(\".modal-backdrop\").addClass('hide');\r\n                                }\r\n                            });\r\n\r\n                            modal.getRoot().on(ModalEvents.shown, function(e) {\r\n                                self.flag_background_enable = false;\r\n                            });\r\n\r\n                            modal.show();\r\n                        });\r\n\r\n                    },\r\n                    fail: Notification.exception\r\n                }]);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    function open_copy_to_category() {\r\n        let self = this;\r\n\r\n        if (this.selected_questions.length !== 0) {\r\n            Str.get_strings([\r\n                {key: 'copyquestionstocategory', component: 'community_sharequestion'},\r\n                {key: 'copy', component: 'community_sharequestion'},\r\n                {key: 'back', component: 'community_sharequestion'},\r\n                {key: 'copyquestionstoquizsuccess', component: 'community_sharequestion'},\r\n            ]).done(function(strings) {\r\n\r\n                // Set html in modal.\r\n                Ajax.call([{\r\n                    methodname: 'community_sharequestion_copy_to_category_html',\r\n                    args: {\r\n                        currentcourseid: self.currentcourseid\r\n                    },\r\n                    done: function(response) {\r\n\r\n                        ModalFactory.create({\r\n                            type: ModalFactory.types.SAVE_CANCEL,\r\n                            title: strings[0],\r\n                            body: response\r\n                        }).done(function(modal) {\r\n                            modal.setSaveButtonText(strings[1]);\r\n                            modal.setButtonText('cancel', strings[2]);\r\n\r\n                            // Build select2.\r\n                            modal.getRoot().addClass('copy-question-to-cat-modal');\r\n                            build_select2(modal, \".select-course\");\r\n                            build_select2(modal, \".select-category\");\r\n\r\n                            // Event change course.\r\n                            modal.body.find('.select-course').on(\"change\", function(e) {\r\n                                modal.body.find('.select-category-error').hide();\r\n\r\n                                let courseid = this.value;\r\n                                Ajax.call([{\r\n                                    methodname: 'community_sharequestion_get_categories_by_course',\r\n                                    args: {\r\n                                        courseid: courseid,\r\n                                    },\r\n                                    done: function(response) {\r\n                                        let data = JSON.parse(response);\r\n\r\n                                        // Fill options.\r\n                                        modal.body.find('.select-category').empty();\r\n                                        $.each(data.categories, function(index, obj) {\r\n                                            modal.body.find('.select-category').append('<option value=\"' + obj.id + '\">' + obj.name + '</option>');\r\n                                        });\r\n                                    },\r\n                                    fail: Notification.exception\r\n                                }]);\r\n                            });\r\n\r\n                            // Send to cron.\r\n                            modal.getRoot().on(ModalEvents.save, function(e) {\r\n                                e.preventDefault();\r\n\r\n                                self.flag_background_enable = true;\r\n\r\n                                let value = modal.body.find('.select-category').val();\r\n\r\n                                if (value != null) {\r\n\r\n                                    // Save to cron table.\r\n                                    Ajax.call([{\r\n                                        methodname: 'community_sharequestion_save_questions_to_cron',\r\n                                        args: {\r\n                                            type: 'copy_to_category',\r\n                                            targetid: value,\r\n                                            questionids: JSON.stringify(self.selected_questions)\r\n                                        },\r\n                                        done: function(response) {\r\n                                            let data = JSON.parse(response);\r\n                                            if (data.result) {\r\n                                                modal.destroy();\r\n                                                open_success_popup(strings[0], strings[3]);\r\n                                            }\r\n                                        },\r\n                                        fail: Notification.exception\r\n                                    }]);\r\n                                } else {\r\n                                    modal.body.find('.select-category-error').show();\r\n                                }\r\n                            });\r\n\r\n                            // Back button.\r\n                            modal.getRoot().on(ModalEvents.cancel, function(e) {\r\n                                self.flag_background_enable = true;\r\n                                open_selector();\r\n                            });\r\n\r\n                            modal.getRoot().on(ModalEvents.hidden, function(e) {\r\n                                if (self.flag_background_enable === true) {\r\n                                    $(\".modal-backdrop\").removeClass('hide');\r\n                                    $(\".modal-backdrop\").addClass('show');\r\n                                } else {\r\n                                    $(\".modal-backdrop\").removeClass('show');\r\n                                    $(\".modal-backdrop\").addClass('hide');\r\n                                }\r\n                            });\r\n\r\n                            modal.getRoot().on(ModalEvents.shown, function(e) {\r\n                                self.flag_background_enable = false;\r\n                            });\r\n\r\n                            modal.show();\r\n                        });\r\n\r\n                    },\r\n                    fail: Notification.exception\r\n                }]);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    function open_upload_to_catalog() {\r\n        let self = this;\r\n\r\n        if (this.selected_questions.length !== 0) {\r\n\r\n            const getBody = function() {\r\n\r\n                // Get the content of the modal.\r\n                var params = {courseid: self.currentcourseid, selected_questions: JSON.stringify(self.selected_questions)};\r\n                return Fragment.loadFragment('community_sharequestion', 'upload_questions_maagar', self.currentcoursecontext, params);\r\n            };\r\n\r\n            Str.get_strings([\r\n                {key: 'share_national_shared', component: 'community_sharequestion'},\r\n            ]).done(function(strings) {\r\n                var modalPromise = ModalFactory.create({\r\n                    type: ModalFactory.types.DEFAULT,\r\n                    title: strings[0],\r\n                    body: getBody()\r\n                });\r\n\r\n                $.when(modalPromise).then(function(fmodal) {\r\n\r\n                    fmodal.setLarge();\r\n\r\n                    var root = fmodal.getRoot();\r\n                    root.on(ModalEvents.bodyRendered, function() {\r\n                        root.find('.modal-body').animate({\r\n                            scrollTop: 0\r\n                        }, 0);\r\n\r\n                        setTimeout(function() {\r\n                            root.find('input:not([type=hidden])').first().focus();\r\n                        }, 300);\r\n                    });\r\n\r\n                    return fmodal;\r\n                }).done(function(modal) {\r\n                    modal.show();\r\n                }).fail(Notification.exception);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param title\r\n     * @param html\r\n     */\r\n    function open_success_popup(title, html) {\r\n        let self = this;\r\n\r\n        Str.get_strings([\r\n            {key: 'back', component: 'community_sharequestion'},\r\n            {key: 'end', component: 'community_sharequestion'},\r\n        ]).done(function(strings) {\r\n            var modalPromise = ModalFactory.create({\r\n                type: ModalFactory.types.SAVE_CANCEL,\r\n                // Large: true,\r\n                title: title,\r\n                body: html\r\n            });\r\n\r\n            $.when(modalPromise).then(function(modal) {\r\n                modal.setSaveButtonText(strings[0]);\r\n                modal.setButtonText('cancel', strings[1]);\r\n                modal.show();\r\n\r\n                // Close popup on timeout.\r\n                // setTimeout(function(){\r\n                //     self.flag_background_enable = false;\r\n                //     modal.destroy()\r\n                // }, 4000);\r\n\r\n                // Back button.\r\n                modal.getRoot().on(ModalEvents.save, function(e) {\r\n                    self.flag_background_enable = true;\r\n                    open_selector();\r\n                });\r\n\r\n                modal.getRoot().on(ModalEvents.hidden, function(e) {\r\n                    if (self.flag_background_enable === true) {\r\n                        $(\".modal-backdrop\").removeClass('hide');\r\n                        $(\".modal-backdrop\").addClass('show');\r\n                    } else {\r\n                        $(\".modal-backdrop\").removeClass('show');\r\n                        $(\".modal-backdrop\").addClass('hide');\r\n                    }\r\n                });\r\n\r\n                modal.getRoot().on(ModalEvents.shown, function(e) {\r\n                    self.flag_background_enable = false;\r\n                });\r\n\r\n                return modal;\r\n            }).fail(Notification.exception);\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    function open_copy_to_teacher() {\r\n        let self = this;\r\n\r\n        if (this.selected_questions.length !== 0) {\r\n            Str.get_strings([\r\n                {key: 'copyquestionstoteacher', component: 'community_sharequestion'},\r\n                {key: 'send', component: 'community_sharequestion'},\r\n                {key: 'back', component: 'community_sharequestion'},\r\n                {key: 'copyquestionstoquizsuccess', component: 'community_sharequestion'},\r\n            ]).done(function(strings) {\r\n\r\n                // Set html in modal.\r\n                Ajax.call([{\r\n                    methodname: 'community_sharequestion_copy_to_teacher_html',\r\n                    args: {\r\n                        currentcourseid: self.currentcourseid,\r\n                        questionids: JSON.stringify(self.selected_questions)\r\n                    },\r\n                    done: function(response) {\r\n\r\n                        ModalFactory.create({\r\n                            type: ModalFactory.types.SAVE_CANCEL,\r\n                            title: strings[0],\r\n                            body: response\r\n                        }).done(function(modal) {\r\n                            modal.setSaveButtonText(strings[1]);\r\n                            modal.setButtonText('cancel', strings[2]);\r\n                            $(modal.body).closest('.modal-content').addClass('share-with-teacher-modal');\r\n\r\n                            // Send to teacher.\r\n                            modal.getRoot().on(ModalEvents.save, function(e) {\r\n                                e.preventDefault();\r\n                                self.flag_background_enable = true;\r\n                                modal.body.find('.error-teachers').hide();\r\n\r\n                                var message = modal.body.find('[data-handler=\"messageForTeacher\"]').val();\r\n\r\n                                var teachersId = [];\r\n                                modal.body.find('.tag-wrapper [data-teacherid]').each(function() {\r\n                                    teachersId.push($(this).attr('data-teacherid'));\r\n                                });\r\n\r\n                                // Validation\r\n                                var errors = [];\r\n                                if (!teachersId.length) {\r\n                                    errors.push('No users');\r\n                                }\r\n\r\n                                if (errors.length === 0) {\r\n                                    Ajax.call([{\r\n                                        methodname: 'community_sharequestion_submit_teachers',\r\n                                        args: {\r\n                                            questionids: JSON.stringify(self.selected_questions),\r\n                                            teachersid: JSON.stringify(teachersId),\r\n                                            message: message\r\n                                        },\r\n                                        done: function(response) {\r\n                                            let data = JSON.parse(response);\r\n                                            if (data.result) {\r\n                                                modal.destroy();\r\n                                                open_success_popup(strings[0], strings[3]);\r\n                                            }\r\n                                        },\r\n                                        fail: Notification.exception\r\n                                    }]);\r\n                                } else {\r\n                                    self.flag_background_enable = false;\r\n                                    modal.body.find('.error-teachers').show();\r\n                                }\r\n                            });\r\n\r\n                            // Back button.\r\n                            modal.getRoot().on(ModalEvents.cancel, function(e) {\r\n                                self.flag_background_enable = true;\r\n                                open_selector();\r\n                            });\r\n\r\n                            modal.getRoot().on(ModalEvents.hidden, function(e) {\r\n                                if (self.flag_background_enable === true) {\r\n                                    $(\".modal-backdrop\").removeClass('hide');\r\n                                    $(\".modal-backdrop\").addClass('show');\r\n                                } else {\r\n                                    $(\".modal-backdrop\").removeClass('show');\r\n                                    $(\".modal-backdrop\").addClass('hide');\r\n                                }\r\n                            });\r\n\r\n                            modal.getRoot().on(ModalEvents.shown, function(e) {\r\n                                self.flag_background_enable = false;\r\n                                SendToTeacher.init(modal);\r\n                            });\r\n\r\n                            modal.show();\r\n                        });\r\n\r\n                    },\r\n                    fail: Notification.exception\r\n                }]);\r\n            });\r\n        }\r\n    }\r\n\r\n    return {\r\n        question_edit_init: function(currentcourseid, currentcoursecontext, visiblebuttons) {\r\n\r\n            // Insert button via JS.\r\n            $('.modulespecificbuttonscontainer').find('input').each(function(index) {\r\n                if (index === 1) {\r\n\r\n                    let self = this;\r\n\r\n                    Str.get_strings([\r\n                        {key: 'sharingbutton', component: 'community_sharequestion'},\r\n                    ]).done(function(strings) {\r\n\r\n                        let disabled = 'disabled=\"1\"';\r\n\r\n                        let element = '<input type=button class=\"btn-share-questions btn btn-secondary mr-1\" value=\"' + strings[0] + '\" data-action=\"toggle\" data-togglegroup=\"qbank\" data-toggle=\"action\" ' + disabled + '>';\r\n                        $(element).insertBefore($(self));\r\n\r\n                        // Event on button.\r\n                        $('.btn-share-questions').on(\"click\", function(e) {\r\n                            // Get selected questions.\r\n                            var checkedVals = $('#categoryquestions').find('input:checked').map(function() {\r\n                                return this.name;\r\n                            }).get();\r\n\r\n                            let selected = [];\r\n                            $.each(checkedVals, function(index, value) {\r\n                                var sd = value.replace(/[^0-9]/gi, '');\r\n                                if (sd.length !== 0) {\r\n                                    var number = parseInt(sd, 10);\r\n                                    selected.push(number);\r\n                                }\r\n                            });\r\n\r\n                            open_selector(selected, currentcourseid, currentcoursecontext, visiblebuttons);\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        mod_quiz_edit_init: function(currentcourseid, currentcoursecontext, visiblebuttons) {\r\n\r\n            mod_quiz_edit_toogle_buttons();\r\n\r\n            // Event on button share.\r\n            $('.btn-share-questions').on(\"click\", function(e) {\r\n\r\n                // Selected_questions.\r\n                const questionsContainer = document.querySelector('div.mod-quiz-edit-content');\r\n                const checkboxes = questionsContainer.querySelectorAll('input.select-multiple-checkbox:checked');\r\n                const selected_questions = [];\r\n                checkboxes.forEach(checkbox => {\r\n                    const questionContainer = checkbox.closest('li.activity');\r\n                    if (questionContainer) {\r\n                        const activityInstance = questionContainer.querySelector('div.activityinstance');\r\n                        if (activityInstance) {\r\n                            const link = activityInstance.querySelector('a[href*=\"id=\"]');\r\n                            if (link) {\r\n                                const questionHref = link.getAttribute('href');\r\n                                const questionIdMatch = questionHref.match(/[?&]id=(\\d+)/);\r\n                                if (questionIdMatch) {\r\n                                    const questionRealId = questionIdMatch[1];\r\n                                    selected_questions.push(questionRealId);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                open_selector(selected_questions, currentcourseid, currentcoursecontext, visiblebuttons);\r\n            });\r\n\r\n            /**\r\n             *\r\n             */\r\n            function mod_quiz_edit_recalculate_page() {\r\n                let pageid = '';\r\n\r\n                $('.section li').each(function(index) {\r\n                    if ($(this).hasClass('pagenumber')) {\r\n                        pageid = $(this).attr('id');\r\n                    }\r\n\r\n                    $(this).find('input').data('pageid', pageid);\r\n                });\r\n            }\r\n\r\n            /**\r\n             *\r\n             */\r\n            function mod_quiz_edit_toogle_buttons() {\r\n\r\n                let flag = false;\r\n\r\n                $('.select-multiple-checkbox-share').each(function(index) {\r\n                    if ($(this).find('input').is(':checked')) {\r\n                        flag = true;\r\n                    }\r\n                });\r\n\r\n                if (flag) {\r\n                    $('.btn-delete-questions').attr('disabled', false);\r\n                    $('.btn-share-questions').attr('disabled', false);\r\n                } else {\r\n                    $('.btn-delete-questions').attr('disabled', true);\r\n                    $('.btn-share-questions').attr('disabled', true);\r\n                }\r\n\r\n                if ($('.btn-delete-questions').data('hasattempts') === 1) {\r\n                    $('.btn-delete-questions').attr('disabled', true);\r\n                }\r\n            }\r\n\r\n            // Select all checkboxes in group.\r\n            $('.checkbox-select-all-questions').on(\"click\", function(e) {\r\n\r\n                mod_quiz_edit_recalculate_page();\r\n\r\n                let pageid = $(this).data('pageid');\r\n\r\n                if ($(this).is(':checked')) {\r\n                    $('.select-multiple-checkbox-share').each(function(index) {\r\n                        if ($(this).find('input').data('pageid') === pageid) {\r\n                            $(this).find('input').prop(\"checked\", true);\r\n                        }\r\n                    });\r\n                } else {\r\n                    $('.select-multiple-checkbox-share').each(function(index) {\r\n                        if ($(this).find('input').data('pageid') === pageid) {\r\n                            $(this).find('input').prop(\"checked\", false);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                mod_quiz_edit_toogle_buttons();\r\n            });\r\n\r\n            // Click on single button.\r\n            $('.select-multiple-checkbox').on(\"click\", function(e) {\r\n\r\n                mod_quiz_edit_recalculate_page();\r\n\r\n                if (!$(this).is(':checked')) {\r\n                    let pageid = $(this).data('pageid');\r\n\r\n                    $('.checkbox-select-all-questions').each(function(index) {\r\n                        if ($(this).data('pageid') === pageid) {\r\n                            $(this).prop(\"checked\", false);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                mod_quiz_edit_toogle_buttons();\r\n            });\r\n        },\r\n\r\n        message_edit_init: function(currentcourseid, currentcoursecontext) {\r\n\r\n            // Event on button.\r\n            $('body').on(\"click\", function(e) {\r\n                if ($(e.target).data('handler') === 'copyQuestionsFromMessage') {\r\n\r\n                    let selected = $(e.target).data('questionids');\r\n                    open_selector(selected, currentcourseid, currentcoursecontext, 'message');\r\n                }\r\n            });\r\n        },\r\n\r\n        community_oer_question: function(selected) {\r\n            open_selector(selected, 0, 0, 'oer');\r\n        },\r\n    };\r\n});\r\n"],"names":["define","$","Y","Str","ModalFactory","ModalEvents","Ajax","Templates","Notification","Fragment","SendToTeacher","M","cfg","sesskey","build_select2","modal","sclass","select2Target","body","find","dropdownParent","closest","select2","dropdownAutoWidth","open_selector","selected","arguments","length","undefined","currentcourseid","currentcoursecontext","type","self","this","selected_questions","large","context_template","questionupload","copyquestionstoteacher","copyquestionstocategory","copyquestionstoquiz","get_strings","key","component","done","strings","render","html","modalPromise","create","types","DEFAULT","title","when","then","setButtonText","getRoot","classList","add","addClass","show","on","e","stopPropagation","currentTarget","dataset","handler","flag_background_enable","destroy","call","methodname","args","response","SAVE_CANCEL","setSaveButtonText","hide","courseid","value","data","JSON","parse","empty","each","activities","index","obj","append","cmid","name","fail","exception","save","preventDefault","val","targetid","questionids","stringify","result","open_success_popup","cancel","hidden","removeClass","shown","open_copy_to_quiz","categories","id","open_copy_to_category","getBody","params","loadFragment","fmodal","setLarge","root","bodyRendered","animate","scrollTop","setTimeout","first","focus","open_upload_to_catalog","message","teachersId","push","attr","errors","teachersid","init","open_copy_to_teacher","question_edit_init","visiblebuttons","element","insertBefore","checkedVals","map","get","sd","replace","number","parseInt","mod_quiz_edit_init","mod_quiz_edit_recalculate_page","pageid","hasClass","mod_quiz_edit_toogle_buttons","flag","is","checkboxes","document","querySelector","querySelectorAll","forEach","checkbox","questionContainer","activityInstance","link","questionIdMatch","getAttribute","match","questionRealId","prop","message_edit_init","target","community_oer_question"],"mappings":"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"}