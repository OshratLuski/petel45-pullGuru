define("community_sharecourse/treeview",["jquery","core/yui","core/str"],(function($,Y,Str){return{init:function(datas,options,target){this.root=document.createElement("div"),this.root.className="treeview";var t=this;function groupOpen(){$(this).parent().find(">.group").slideDown("fast")}function groupClose(){$(this).parent().find(">.group").slideUp("fast")}function groupToggle(){$(this).toggleClass("rotated"),$(this).parent().find(">.group").slideToggle("fast")}function changeCheckState(value,allChildCheck){var c=this.checked;null==value||value instanceof MouseEvent?0==c?c=1:1==c?c=0:2==c&&(c=1):c=value,this.checked=c,setCheckState.bind(this)(c),2!=c&&checkAllChilds.bind(this)(c),checkControlParents.bind(this)()}function checkAllChilds(value){$(this).parent(".group").find(".item").each((function(index,el){setCheckState.bind(el)(value)}))}function checkControlParents(){for(var $parents=$(this).parents(".treeview .group"),index=1;index<$parents.length;index++){var el=$parents[index];item=$(el).find(">.item").get(0),$children=$(el).find(".group .item");for(var all1=!0,all0=!0,i=0;i<$children.length;i++)1!=$children[i].checked&&(all1=!1),0!=$children[i].checked&&(all0=!1);all1?setCheckState.bind(item)(1):all0?setCheckState.bind(item)(0):setCheckState.bind(item)(2)}}function setCheckState(value){this.checked=value,this.setAttribute("check-value",value),0==value&&($(this).find(">[check-icon]")[0].className="fa fa-square-o"),1==value&&($(this).find(">[check-icon]")[0].className="fa fa-check-square-o"),2==value&&($(this).find(">[check-icon]")[0].className="fa fa-square")}function createTreeViewReq(parentNode,datas,options){for(var i=0;i<datas.length;i++)if(null!=datas[i]){var data=datas[i],item=createSingleItem(data);parentNode.appendChild(item),"children"in data&&data.children.length>0&&createTreeViewReq(item,data.children,options)}}function createSingleItem(data){var group=document.createElement("p");if(group.className="group","className"in options&&(group.className+=options.className),"fold"in options){var foldButton=document.createElement("i");foldButton.className="fa fa-caret-left fold-btn",foldButton.setAttribute("fold-button",1),foldButton.onclick=groupToggle.bind(foldButton),foldButton.isOpened=options.fold,group.appendChild(foldButton)}var item=document.createElement("span");item.className="item",item.innerHTML=data.text,item.data=data;for(var keys=Object.keys(data),i=0;i<keys.length;i++)item.setAttribute("data-"+keys[i],data[keys[i]]);if("checked"in data||1==options.showAlwaysCheckBox){var checked=document.createElement("i");checked.setAttribute("check-icon","1"),checked.className="fa ",item.prepend(checked),"checked"in data&&data.checked?setCheckState.bind(item)(data.checked?1:0):setCheckState.bind(item)(0)}return item.onclick=changeCheckState.bind(item),group.appendChild(item),group}function saveSingle(el){return null==el&&(el=this),ret=Object.assign({children:[]},el.data,{checked:el.checked}),ret}return options=Object.assign({showAlwaysCheckBox:!0,fold:!0,openAllFold:!1},options),this.update=function(){$(t.root).find(".group").each((function(index,el){$(el).find(".group").length>0?($(el).find(">[fold-button]").css("visibility","visible"),0==index&&($(el).find(".fa-caret-left.fold-btn").first().addClass("rotated"),$(el).find("p.group").each((function(){$(this).attr("style","display: block;")})))):$(el).find(">[fold-button]").css("visibility","hidden"),checkControlParents.bind($(el).find(">.item"))()}))},this.load=function(datas){$(this.root).empty(),createTreeViewReq(this.root,datas,options),this.update()},this.save=function(type,node){if(null==type&&(type="tree"),"tree"==type){if(null==node){for(var data=[],$children=$(this.root).find(">.group"),i=0;i<$children.length;i++){var child=this.save("tree",$children[i]);data.push(child)}return data}(data=saveSingle($(node).find(">.item")[0])).children=[];for($children=$(node).find(">.group"),i=0;i<$children.length;i++){child=this.save("tree",$children[i]);data.children.push(child)}return data}if("list"==type){data=[];var $items=$(this.root).find(".item");for(i=0;i<$items.length;i++)data.push(saveSingle($items[i]));return data}},this.load(datas),this.openAllFold=function(item){null==item&&(item=this.root),$(item).find("[fold-button]").each((function(index,el){groupOpen.bind(this)()}))},this.closeAllFold=function(item){null==item&&(item=this.root),$(item).find("[fold-button]").each((function(index,el){0!=index&&groupClose.bind(this)()}))},options.openAllFold?this.openAllFold():this.closeAllFold(),$(target).html(this.root),this}}}));

//# sourceMappingURL=treeview.min.js.map