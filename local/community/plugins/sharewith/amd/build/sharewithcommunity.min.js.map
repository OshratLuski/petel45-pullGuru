{"version":3,"file":"sharewithcommunity.min.js","sources":["../src/sharewithcommunity.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript controller for the \"Actions\" panel at the bottom of the page.\n *\n * @module     community_sharewith/sharewithcommunity\n * @package\n * @copyright  2018 Devlion <info@devlion.co>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.6\n */\n\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'community_sharewith/modal',\n    'community_sharewith/storage'\n], function($, Ajax, Notification, modal, St) {\n\n    /** @alias module:community_sharewith/sharewithteacher */\n    return {\n\n        resultBlock: '',\n        tagWrapper: '',\n        input: '',\n\n        init: function() {\n\n            var root = modal.modalWrapper;\n            root.addEventListener('click', function(e) {\n                var target = e.target;\n                while (root.contains(target)) {\n                    switch (target.dataset.handler) {\n                        case 'sendToTeachersCommunity':\n                            this.submitCommunity();\n                            break;\n                        case 'shareCommunity':\n                            this.shareCommunity();\n                            break;\n                    }\n                    target = target.parentNode;\n                }\n            }.bind(this));\n\n        },\n        /**\n         * Choose a teacher for copying the activity.\n         *\n         * @method shareActivity\n         * @param {Node} target element.\n         */\n        shareCommunity: function() {\n            var self = this;\n            var parseResponse = function(response) {\n                var context = JSON.parse(response);\n                modal.render(modal.template.sharecommunity, context)\n                    .done(function() {\n                        self.resultBlock = document.querySelector('.result-block');\n                        self.tagWrapper = document.querySelector('.tag-wrapper');\n                        self.input = document.querySelector('input[data-handler = \"selectTeacher\"]');\n                    });\n            };\n\n            Ajax.call([{\n                methodname: 'community_sharewith_get_community',\n                args: {\n                    activityid: Number(St.cmid),\n                    courseid: Number(St.getCurrentCourse())\n                },\n                done: parseResponse,\n                fail: Notification.exception\n            }]);\n        },\n\n        submitCommunity: function() {\n            var teachersId = [];\n            var coursesId = [];\n\n            $.each($('#teachers_courses').select2('data'), function(index, obj) {\n                if (obj.id.length !== 0) {\n                    coursesId.push(obj.id);\n                }\n            });\n\n            // Validate.\n            if (coursesId.length === 0) {\n                $('#error_share_to_community').show();\n                return;\n            }\n            modal.addBtnSpinner();\n            var message = $(\"#message_for_teacher\").val();\n            var parseResponse = function(response) {\n                var template = modal.template.error,\n                    context = {\n                        title: M.util.get_string('eventcopytoteacher', 'community_sharewith'),\n                        text: M.util.get_string('system_error_contact_administrator', 'community_sharewith'),\n                    };\n                if (response) {\n                    template = modal.template.confirm;\n                    context.text = M.util.get_string('succesfullyshared', 'community_sharewith');\n                }\n                modal.render(template, context);\n            };\n\n            Ajax.call([{\n                methodname: 'community_sharewith_submit_teachers',\n                args: {\n                    activityid: Number(St.cmid),\n                    courseid: Number(St.getCurrentCourse()),\n                    teachersid: JSON.stringify(teachersId),\n                    coursesid: JSON.stringify(coursesId),\n                    message: message,\n                    sequence: JSON.stringify(St.activityChain)\n                },\n                done: parseResponse,\n                fail: Notification.exception\n            }]);\n\n        },\n    };\n});\n"],"names":["define","$","Ajax","Notification","modal","St","resultBlock","tagWrapper","input","init","root","modalWrapper","addEventListener","e","target","contains","dataset","handler","submitCommunity","shareCommunity","parentNode","bind","this","self","call","methodname","args","activityid","Number","cmid","courseid","getCurrentCourse","done","response","context","JSON","parse","render","template","sharecommunity","document","querySelector","fail","exception","coursesId","each","select2","index","obj","id","length","push","addBtnSpinner","message","val","teachersid","stringify","coursesid","sequence","activityChain","error","title","M","util","get_string","text","confirm","show"],"mappings":";;;;;;;;;AAyBAA,gDAAO,CACH,SACA,YACA,oBACA,4BACA,gCACD,SAASC,EAAGC,KAAMC,aAAcC,MAAOC,UAG/B,CAEHC,YAAa,GACbC,WAAY,GACZC,MAAO,GAEPC,KAAM,eAEEC,KAAON,MAAMO,aACjBD,KAAKE,iBAAiB,QAAS,SAASC,WAChCC,OAASD,EAAEC,OACRJ,KAAKK,SAASD,SAAS,QAClBA,OAAOE,QAAQC,aACd,+BACIC,4BAEJ,sBACIC,iBAGbL,OAASA,OAAOM,aAEtBC,KAAKC,QASXH,eAAgB,eACRI,KAAOD,KAWXpB,KAAKsB,KAAK,CAAC,CACPC,WAAY,oCACZC,KAAM,CACFC,WAAYC,OAAOvB,GAAGwB,MACtBC,SAAUF,OAAOvB,GAAG0B,qBAExBC,KAhBgB,SAASC,cACrBC,QAAUC,KAAKC,MAAMH,UACzB7B,MAAMiC,OAAOjC,MAAMkC,SAASC,eAAgBL,SACvCF,MAAK,WACFT,KAAKjB,YAAckC,SAASC,cAAc,iBAC1ClB,KAAKhB,WAAaiC,SAASC,cAAc,gBACzClB,KAAKf,MAAQgC,SAASC,cAAc,6CAW5CC,KAAMvC,aAAawC,cAI3BzB,gBAAiB,eAET0B,UAAY,MAEhB3C,EAAE4C,KAAK5C,EAAE,qBAAqB6C,QAAQ,SAAS,SAASC,MAAOC,KACrC,IAAlBA,IAAIC,GAAGC,QACPN,UAAUO,KAAKH,IAAIC,OAKF,IAArBL,UAAUM,QAId9C,MAAMgD,oBACFC,QAAUpD,EAAE,wBAAwBqD,MAcxCpD,KAAKsB,KAAK,CAAC,CACPC,WAAY,sCACZC,KAAM,CACFC,WAAYC,OAAOvB,GAAGwB,MACtBC,SAAUF,OAAOvB,GAAG0B,oBACpBwB,WAAYpB,KAAKqB,UAlCR,IAmCTC,UAAWtB,KAAKqB,UAAUZ,WAC1BS,QAASA,QACTK,SAAUvB,KAAKqB,UAAUnD,GAAGsD,gBAEhC3B,KAvBgB,SAASC,cACrBK,SAAWlC,MAAMkC,SAASsB,MAC1B1B,QAAU,CACN2B,MAAOC,EAAEC,KAAKC,WAAW,qBAAsB,uBAC/CC,KAAMH,EAAEC,KAAKC,WAAW,qCAAsC,wBAElE/B,WACAK,SAAWlC,MAAMkC,SAAS4B,QAC1BhC,QAAQ+B,KAAOH,EAAEC,KAAKC,WAAW,oBAAqB,wBAE1D5D,MAAMiC,OAAOC,SAAUJ,UAcvBQ,KAAMvC,aAAawC,kBA7BnB1C,EAAE,6BAA6BkE"}