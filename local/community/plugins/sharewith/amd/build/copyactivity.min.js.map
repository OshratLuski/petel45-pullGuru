{"version":3,"file":"copyactivity.min.js","sources":["../src/copyactivity.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript controller for the \"Actions\" panel at the bottom of the page.\r\n *\r\n * @module     community_sharewith/copyactivity\r\n * @package\r\n * @copyright  2018 Devlion <info@devlion.co>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      3.6\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'core/ajax',\r\n    'core/notification',\r\n    'community_sharewith/modal',\r\n    'community_sharewith/storage'\r\n\r\n], function($, Ajax, Notification, modal, St) {\r\n\r\n    return /** @alias module:community_sharewith/copyActivity */ {\r\n\r\n        cmid: null,\r\n        firstCmid: null,\r\n        sectionid: null,\r\n        activityChain: [],\r\n        flagCopyFromMessage: 0,\r\n        messageId: 0,\r\n\r\n        init: function() {\r\n            var root = document.querySelector('body');\r\n\r\n            root.addEventListener('click', function(e) {\r\n                var target = e.target;\r\n                while (root.contains(target)) {\r\n                    switch (target.dataset.handler) {\r\n                        // Copy Section to course.\r\n                        case 'selectCourseForSection':\r\n                            St.hassubsections = $(target).closest('li.section').hasClass('hassubsections') || $(target).closest('li.tile').hasClass('hassubsections');\r\n                            if (St.hassubsections) {\r\n                                this.subOrNot(target);\r\n                            } else {\r\n                                this.selectCourseForSection(target);\r\n                            }\r\n                            break;\r\n\r\n                        case 'copyLinkSection':\r\n                            let courseid = $(target).data('courseid');\r\n                            let sectionid = $(target).data('sectionid');\r\n\r\n                            const url = M.cfg.wwwroot + '/course/view.php?id=' + courseid + '&sectionid=' + sectionid;\r\n                            let temp = $(\"<input>\");\r\n                            $(\"body\").append(temp);\r\n                            temp.val(url).select();\r\n                            document.execCommand(\"copy\");\r\n                            temp.remove();\r\n\r\n                            let title = M.util.get_string('copylinksectionsuccess', 'community_sharewith');\r\n                            alert(title);\r\n                            break;\r\n\r\n                        case 'selectCourseForSectionSub':\r\n                            this.selectCourseForSectionSub(target);\r\n                            break;\r\n\r\n                        case 'copySectionToCourse':\r\n                            this.copySectionToCourse();\r\n                            break;\r\n\r\n                        // Copy Activity.\r\n                        case 'openDialog':\r\n                            this.openDialog(target);\r\n                            break;\r\n\r\n                        case 'saveChain':\r\n                            this.saveChain(target);\r\n                            break;\r\n\r\n                        case 'selectCourse':\r\n                            this.flagCopyFromMessage = 0;\r\n                            this.messageId = 0;\r\n\r\n                            this.selectCourse(target);\r\n                            break;\r\n                        case 'selectCourseForNotification':\r\n                            this.flagCopyFromMessage = 1;\r\n                            this.messageId = target.dataset.message_id;\r\n\r\n                            this.selectCourseForNotification(target);\r\n                            break;\r\n                        case 'selectSection':\r\n                            this.selectSection();\r\n                            break;\r\n                        case 'copyActivityToCourse':\r\n                            this.copyActivityToCourse();\r\n                            break;\r\n                    }\r\n                    target = target.parentNode;\r\n                }\r\n            }.bind(this));\r\n        },\r\n\r\n        selectCourseForSection: function(target) {\r\n            St.initState();\r\n            St.sectionid = $(target).data('sectionid');\r\n\r\n            var parseResponse = function(response) {\r\n                var context = {\r\n                        copySection: true,\r\n                        courses: JSON.parse(response.courses),\r\n                        hidebtn: true,\r\n                        copysub: St.copysub,\r\n                    },\r\n                    template = modal.template.copyinstance;\r\n\r\n                if (!response.result) {\r\n                    context.text = M.util.get_string('no_matching_courses_found', 'community_sharewith');\r\n                    context.isAmit = true;\r\n                    template = modal.template.empty;\r\n                }\r\n\r\n                modal.render(template, context).done(modal.triggerBtn.click());\r\n\r\n            };\r\n\r\n            if (!St.sectionid) {\r\n                Ajax.call([{\r\n                    methodname: 'community_sharewith_get_sectionid',\r\n                    args: {\r\n                        courseid: Number(St.getCurrentCourse()),\r\n                        firstcmid: $(target).data('firstcmid')\r\n                    },\r\n                    done: function(response) {\r\n                        St.sectionid = response.sectionid ? response.sectionid : null;\r\n                    },\r\n                    fail: Notification.exception\r\n                }]);\r\n            }\r\n\r\n            Ajax.call([{\r\n                methodname: 'community_sharewith_get_courses',\r\n                args: {},\r\n                done: parseResponse,\r\n                fail: Notification.exception\r\n            }]);\r\n        },\r\n\r\n        selectCourseForSectionSub: function(target) {\r\n            St.initState();\r\n            St.sectionid = $(target).data('sectionid');\r\n            St.copysub = $(target).data('copysub');\r\n\r\n            var parseResponse = function(response) {\r\n                var context = {\r\n                        copySection: true,\r\n                        courses: JSON.parse(response.courses),\r\n                        hidebtn: true,\r\n                        copysub: St.copysub,\r\n                    },\r\n                    template = modal.template.copyinstance;\r\n\r\n                if (!response.result) {\r\n                    context.text = M.util.get_string('no_matching_courses_found', 'community_sharewith');\r\n                    context.isAmit = true;\r\n                    template = modal.template.empty;\r\n                }\r\n\r\n                modal.render(template, context);\r\n            };\r\n\r\n            if (!St.sectionid) {\r\n                Ajax.call([{\r\n                    methodname: 'community_sharewith_get_sectionid',\r\n                    args: {\r\n                        courseid: Number(St.getCurrentCourse()),\r\n                        firstcmid: $(target).data('firstcmid')\r\n                    },\r\n                    done: function(response) {\r\n                        St.sectionid = response.sectionid ? response.sectionid : null;\r\n                    },\r\n                    fail: Notification.exception\r\n                }]);\r\n            }\r\n\r\n            Ajax.call([{\r\n                methodname: 'community_sharewith_get_courses',\r\n                args: {},\r\n                done: parseResponse,\r\n                fail: Notification.exception\r\n            }]);\r\n        },\r\n\r\n        subOrNot: function(target) {\r\n            var context = {\r\n                    title: M.util.get_string('settingssectionscopy', 'community_sharewith'),\r\n                    text: M.util.get_string('copy_all_sub', 'community_sharewith'),\r\n                    sectionid: $(target).data('sectionid'),\r\n                },\r\n                template = modal.template.subornot;\r\n\r\n            modal.render(template, context).done(modal.triggerBtn.click());\r\n        },\r\n\r\n        /**\r\n         * Copy section to selected course.\r\n         *\r\n         * @method copySectionToCourse\r\n         */\r\n        copySectionToCourse: function() {\r\n            var modalContent = $(modal.modalContent),\r\n                courseid = modalContent.find(':selected').data('courseid');\r\n            modal.addBtnSpinner();\r\n            var parseResponse = function(response) {\r\n                var template = modal.template.error,\r\n                    context = {\r\n                        title: M.util.get_string('eventsectioncopy', 'community_sharewith'),\r\n                        text: M.util.get_string('system_error_contact_administrator', 'community_sharewith'),\r\n                        hidebtnback: true\r\n                    };\r\n                if (response.result) {\r\n                    template = modal.template.confirm;\r\n                    context.text = M.util.get_string('section_copied_to_course', 'community_sharewith');\r\n                }\r\n                modal.render(template, context).done(()=>{$('#modalSharewith .modal-body span').addClass('px-3 text-center mx-auto')});\r\n            };\r\n\r\n            Ajax.call([{\r\n                methodname: 'community_sharewith_add_sharewith_task',\r\n                args: {\r\n                    courseid: Number(courseid),\r\n                    sourcecourseid: Number(St.getCurrentCourse()),\r\n                    sourcesectionid: Number(St.sectionid),\r\n                    type: 'sectioncopy',\r\n                    copysub: true, // St.copysub\r\n                },\r\n                done: parseResponse,\r\n                fail: Notification.exception\r\n            }]);\r\n        },\r\n\r\n        openDialog: function(target) {\r\n            St.initState();\r\n            St.cmlink = $(target).data('cmlink');\r\n            St.cmid = $(target).data('cmid');\r\n            St.amit = $(target).data('amit') ? true : false;\r\n            St.sequence = $(target).data('sequence') ? true : false;\r\n            St.haveviewlink = true;\r\n\r\n            var methodname = 'community_sharewith_check_cm_status',\r\n                data = {cmid: St.cmid},\r\n                context = {amit: St.amit},\r\n                template = modal.template.selector;\r\n\r\n            if (St.amit) {\r\n                methodname = 'community_sharewith_get_amit_teacher';\r\n                data = {\r\n                    cmid: St.cmid,\r\n                    courseid: St.getCurrentCourse()\r\n                };\r\n            }\r\n\r\n            var parseResponse = function(data) {\r\n                if (data.cmstatus === 'chain') {\r\n                    context = JSON.parse(data.data);\r\n                    template = modal.template.chain;\r\n                } else if (data.isamit) {\r\n                    context.amit = JSON.parse(data.amit);\r\n                } else if (data.cmstatus === 'wrongquizcategory') {\r\n                    template = modal.template.error;\r\n                    context.text = data.data;\r\n                    context.title = M.util.get_string('eventactivitycopy', 'community_sharewith');\r\n                }\r\n\r\n                if (data.cmstatus === '') {\r\n                    context.haveviewlink = data.haveviewlink;\r\n                    St.haveviewlink = data.haveviewlink;\r\n                }\r\n\r\n                modal.render(template, context)\r\n                    .done(modal.triggerBtn.click());\r\n            };\r\n\r\n            Ajax.call([{\r\n                methodname: methodname,\r\n                args: data,\r\n                done: parseResponse,\r\n                fail: Notification.exception\r\n            }]);\r\n        },\r\n\r\n        saveChain: function(target) {\r\n            $.each($(\"input[name='cmid[]']:checked\"), function() {\r\n                St.activityChain.push(Number($(this).val()));\r\n            });\r\n            if (St.sequence) {\r\n                this.selectCourse(target);\r\n            } else {\r\n                modal.render(modal.template.selector, {});\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Choose a course for copying the activity.\r\n         *\r\n         * @method selectCourse\r\n         * @param {Node} target element.\r\n         */\r\n        selectCourse: function(target) {\r\n            var self = this;\r\n\r\n            var parseResponse = function(response) {\r\n                var context = {\r\n                    courses: JSON.parse(response.courses),\r\n                    copyActivity: true\r\n                };\r\n                if (!context.courses.length) {\r\n                    context.text = M.util.get_string('no_matching_courses_found', 'community_sharewith');\r\n                    modal.render(modal.template.empty, context);\r\n                    return;\r\n                }\r\n                if (target.dataset.activitysharing) {\r\n                    St.cmid = target.dataset.activitysharing;\r\n                    context.hidebtn = true;\r\n                    modal.render(modal.template.copyinstance, context)\r\n                        .done(modal.triggerBtn.click())\r\n                        .done(self.selectSection);\r\n                } else {\r\n                    modal.render(modal.template.copyinstance, context)\r\n                        .done(self.selectSection);\r\n                }\r\n            };\r\n\r\n            Ajax.call([{\r\n                methodname: 'community_sharewith_get_courses',\r\n                args: {},\r\n                done: parseResponse,\r\n                fail: Notification.exception\r\n            }]);\r\n        },\r\n\r\n        /**\r\n         * Choose a course for copying the activity.\r\n         *\r\n         * @method selectCourse\r\n         * @param {Node} target element.\r\n         */\r\n        selectCourseForNotification: function(target) {\r\n            var self = this;\r\n\r\n            var parseResponse = function(response) {\r\n                var context = {\r\n                    courses: JSON.parse(response.courses),\r\n                    copyActivity: true\r\n                };\r\n\r\n                if (target.dataset.activitysharing) {\r\n                    St.cmid = target.dataset.activitysharing;\r\n                    context.hidebtn = true;\r\n                    modal.render(modal.template.copyinstance, context)\r\n                        .done(modal.triggerBtn.click())\r\n                        .done(self.selectSection);\r\n                } else {\r\n                    modal.render(modal.template.copyinstance, context)\r\n                        .done(self.selectSection);\r\n                }\r\n            };\r\n\r\n            Ajax.call([{\r\n                methodname: 'community_sharewith_get_courses',\r\n                args: {},\r\n                done: parseResponse,\r\n                fail: Notification.exception\r\n            }]);\r\n        },\r\n\r\n        /**\r\n         * Choose a section for copying the activity.\r\n         *\r\n         * @method selectSection\r\n         */\r\n        selectSection: function() {\r\n            var modalContent = $(modal.modalContent),\r\n                courseid = modalContent.find(':selected').attr('data-courseid');\r\n\r\n            if (!courseid) {\r\n                courseid = St.getCurrentCourse();\r\n            }\r\n\r\n            var parseResponse = function(response) {\r\n                var sections = JSON.parse(response.sections);\r\n                modalContent.find('.sections').html('');\r\n                sections.forEach(function(section) {\r\n                    modalContent.find('.sections')\r\n                        .append($('<option data-sectionid =' + section.section_id + '>' + section.section_name + '</option>'));\r\n                });\r\n            };\r\n\r\n            Ajax.call([{\r\n                methodname: 'community_sharewith_get_sections',\r\n                args: {\r\n                    courseid: Number(courseid)\r\n                },\r\n                done: parseResponse,\r\n                fail: Notification.exception\r\n            }]);\r\n        },\r\n\r\n        /**\r\n         * Copy activity to selected course.\r\n         *\r\n         * @method copyActivityToCourse\r\n         */\r\n\r\n        copyActivityToCourse: function() {\r\n            let self = this;\r\n\r\n            var modalContent = $(modal.modalContent),\r\n                courseid = modalContent.find('.courses option:selected').attr('data-courseid'),\r\n                sectionid = modalContent.find('.sections option:selected').attr('data-sectionid');\r\n\r\n            modal.addBtnSpinner();\r\n            var parseResponse = function(response) {\r\n                var context = {\r\n                    title: M.util.get_string('eventdublicatetoteacher', 'community_sharewith'),\r\n                };\r\n                var template = modal.template.error;\r\n\r\n                switch (response.result) {\r\n                    case 0:\r\n                        context.text = M.util.get_string('system_error_contact_administrator', 'community_sharewith');\r\n                        break;\r\n                    case 1:\r\n                        context.text = M.util.get_string('error_coursecopy', 'community_sharewith');\r\n                        break;\r\n                    case 2:\r\n                        context.text = M.util.get_string('error_sectioncopy', 'community_sharewith');\r\n                        break;\r\n                    case 3:\r\n                        context.text = M.util.get_string('error_activitycopy', 'community_sharewith');\r\n                        break;\r\n                    case 4:\r\n                        context.text = M.util.get_string('error_permission_allow_copy', 'community_sharewith');\r\n                        break;\r\n                    case 10:\r\n                        if (self.flagCopyFromMessage === 1) {\r\n                            context.text = M.util.get_string('activity_copied_to_course', 'community_sharewith');\r\n\r\n                            let link = M.cfg.wwwroot + '/user/profile.php?id=' + response.userid;\r\n                            let a = {\r\n                                'link': link,\r\n                                'userfirstname': response.userfirstname,\r\n                                'userlastname': response.userlastname\r\n                            };\r\n                            context.text2 = M.util.get_string('activity_copied_to_course_from_message', 'community_sharewith', a);\r\n\r\n                            context.userid = response.userid;\r\n                            context.modname = response.modname;\r\n                            context.coursename = response.coursename;\r\n\r\n                            template = modal.template.confirm2;\r\n                        } else {\r\n                            context.text = M.util.get_string('activity_copied_to_course', 'community_sharewith');\r\n                            template = modal.template.confirm;\r\n                        }\r\n\r\n                        break;\r\n                }\r\n                modal.render(template, context);\r\n            };\r\n\r\n            Ajax.call([{\r\n                methodname: 'community_sharewith_add_sharewith_task',\r\n                args: {\r\n                    courseid: Number(courseid),\r\n                    sourcecourseid: Number(St.getCurrentCourse()),\r\n                    sectionid: Number(sectionid),\r\n                    sourceactivityid: Number(St.cmid),\r\n                    type: 'activitycopy',\r\n                    chain: JSON.stringify(St.activityChain),\r\n                    messageid: self.messageId\r\n                },\r\n                done: parseResponse,\r\n                fail: Notification.exception\r\n            }]);\r\n        },\r\n    };\r\n});\r\n"],"names":["define","$","Ajax","Notification","modal","St","cmid","firstCmid","sectionid","activityChain","flagCopyFromMessage","messageId","init","root","document","querySelector","addEventListener","e","target","contains","dataset","handler","hassubsections","closest","hasClass","this","subOrNot","selectCourseForSection","courseid","data","url","M","cfg","wwwroot","temp","append","val","select","execCommand","remove","title","util","get_string","alert","selectCourseForSectionSub","copySectionToCourse","openDialog","saveChain","selectCourse","message_id","selectCourseForNotification","selectSection","copyActivityToCourse","parentNode","bind","initState","call","methodname","args","Number","getCurrentCourse","firstcmid","done","response","fail","exception","context","copySection","courses","JSON","parse","hidebtn","copysub","template","copyinstance","result","text","isAmit","empty","render","triggerBtn","click","subornot","modalContent","find","addBtnSpinner","sourcecourseid","sourcesectionid","type","error","hidebtnback","confirm","addClass","cmlink","amit","sequence","haveviewlink","selector","cmstatus","chain","isamit","each","push","self","copyActivity","length","activitysharing","attr","sections","html","forEach","section","section_id","section_name","sourceactivityid","stringify","messageid","a","link","userid","userfirstname","userlastname","text2","modname","coursename","confirm2"],"mappings":"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"}