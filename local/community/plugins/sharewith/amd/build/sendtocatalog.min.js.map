{"version":3,"file":"sendtocatalog.min.js","sources":["../src/sendtocatalog.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/str',\n    'core/notification',\n    'community_sharewith/modal',\n    'community_sharewith/storage',\n    'core/modal_factory',\n    \"core/modal_events\",\n    'core/fragment',\n    'jqueryui',\n\n], function($, Ajax, str, Notification, modal, St, ModalFactory, ModalEvents, Fragment) {\n\n    var contextid = 0;\n\n    return /** @alias module:community_sharewith/sendToCatalog */ {\n\n        init: function(contextid) {\n            this.contextid = contextid;\n\n            var root = modal.modalWrapper,\n                self = this;\n            root.addEventListener('click', function(e) {\n                var target = e.target;\n                while (root.contains(target)) {\n\n                    switch (target.dataset.handler) {\n                        // Copy Section to course.\n                        case 'selectUploadActivity':\n                            this.selectUploadActivity();\n                            break;\n                        case 'addAssociation':\n                            this.addAssociation(target);\n                            break;\n                        case 'removeAssociation':\n                            $(target).parent().remove();\n                            break;\n                        case 'selectCategoryOnCatalog':\n                            this.selectCategory(target);\n                            break;\n                    }\n                    target = target.parentNode;\n                }\n            }.bind(this));\n\n            root.addEventListener('change', function(e) {\n                var target = e.target;\n                while (root.contains(target)) {\n                    if (target.dataset.handler === 'selectCourseOnCatalog') {\n                        this.selectCourse(target);\n                        return;\n                    }\n                    if (target.dataset.handler === 'selectSectionOnCatalog') {\n                        $(target).next().removeClass('d-none');\n                        return;\n                    }\n                    target = target.parentNode;\n                }\n            }.bind(this));\n        },\n        /**\n         * Choose a course for copying the activity.\n         *\n         * @method selectUploadActivity\n         * @param {Node} target element.\n         */\n        selectUploadActivity: function() {\n            let self = this;\n\n            const getBody = function() {\n\n                // Get the content of the modal.\n                var params = {cmid: St.cmid, courseid: St.getCurrentCourse()};\n                return Fragment.loadFragment('community_sharewith', 'upload_activity_maagar', self.contextid, params);\n            };\n\n            var modalPromise = ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: M.util.get_string('share_national_shared', 'community_sharewith'),\n                body: getBody()\n            });\n\n            $.when(modalPromise).then(function(fmodal) {\n\n                // TODO needed close correctly\n                $('#modalSharewith .close').click();\n\n                fmodal.setLarge();\n\n                var root = fmodal.getRoot();\n                root.on(ModalEvents.bodyRendered, function() {\n                    root.find('.modal-body').animate({\n                        scrollTop: 0\n                    }, 200);\n                    /* $(root).find('.first-paragraph').delay(200).trigger('focus'); */\n                });\n\n                return fmodal;\n            }).done(function(modal) {\n                modal.show();\n            }).fail(Notification.exception);\n\n        },\n\n        selectCourse: function(target) {\n            var courseid = $(target).val();\n            var selectedItem = (th, e, value, courseid) => {\n                compid = competencies.indexOf(value);\n                if (value && compid > 0) {\n                    var competency = $('<div class = \"competencies-item\">' + value +\n                        '<input type = \"hidden\" name = \"choosedcompetencies-' + courseid + '\" value = \"' + compid + '\"></div>');\n                    competency.css(\"background-color\", '#053468');\n                    competency.appendTo(th.parent());\n                    competency.on('click', function() {\n                        competency.remove();\n                    });\n                    th.val('');\n                    e.preventDefault();\n                }\n            };\n\n            var parseResponse = function(response) {\n                var section = response.sections;\n                var oldSection = $(target).next();\n                oldSection.replaceWith($(section));\n                var cc = JSON.parse(response.competencies);\n                var compcontainer = $(target).closest('.select-course').find('.coursecompetencies');\n                if (cc.length !== 0) {\n                    compcontainer.html(response.competencieshtml);\n                    competencies = [];\n                    Object.keys(cc).map(function(key) {\n                        competencies[Number(key)] = cc[key];\n                        return;\n                    });\n                    $(\"#coursecompetencies-\" + courseid).autocomplete(\n                        {\n                            source: function(request, response) {\n                                var results = $.ui.autocomplete.filter(Object.values(competencies), request.term);\n                                response(results.slice(0, 10));\n                            },\n                            select: function(e, ui) {\n                                selectedItem($(this), e, ui.item.value, courseid);\n                            },\n                            minLength: 0,\n                            response: function(event, ui) {\n                                if (!ui.content.length) {\n                                    var noResult = '';\n                                    ui.content.push(noResult);\n                                }\n                            }\n                        }).click(function() {\n                        if (this.value === \"\") {\n                            $(this).autocomplete(\"search\");\n                        }\n                    });\n                    var root = modal.modalWrapper,\n                        self = this;\n                } else {\n                    compcontainer.html('');\n                }\n\n            };\n            Ajax.call([{\n                methodname: 'community_sharewith_get_sections_html',\n                args: {courseid: courseid},\n                done: parseResponse,\n                fail: Notification.exeption\n            }]);\n        },\n\n        addAssociation: function(target) {\n            var association = $(target).parent().clone();\n            var catid = Number($(target).parent().attr('data-catid'));\n\n            if ($(target).parent().siblings('[data-catid=' + catid + ']').length >= 2) {\n                return;\n                /* TODO association.find('button').toggleClass('d-none'); */\n            }\n            $(target).toggleClass('btn-outline-primary btn-outline-danger');\n            $(target).attr('data-handler', 'removeAssociation');\n\n            var compcontainer = association.closest('.select-course').find('.coursecompetencies');\n            compcontainer.html('');\n\n            association.insertAfter($(target).parent());\n        },\n\n        selectCategory: function(target) {\n            var catid = $(target).val();\n            $('#selectCourse').find('.select-course').addClass('d-none');\n            $('#selectCourse').find('select').attr('disabled', 'true');\n            $('#selectCourse')\n                .find('.select-course[data-catid=' + catid + ']')\n                .removeClass('d-none')\n                .find('select').attr('disabled', false);\n            $('#selectCourse').removeClass('d-none');\n        },\n    };\n});\n"],"names":["define","$","Ajax","str","Notification","modal","St","ModalFactory","ModalEvents","Fragment","init","contextid","root","modalWrapper","addEventListener","e","target","contains","dataset","handler","selectUploadActivity","addAssociation","parent","remove","selectCategory","parentNode","bind","this","selectCourse","next","removeClass","self","params","modalPromise","create","type","types","DEFAULT","title","M","util","get_string","body","cmid","courseid","getCurrentCourse","loadFragment","when","then","fmodal","click","setLarge","getRoot","on","bodyRendered","find","animate","scrollTop","done","show","fail","exception","val","call","methodname","args","response","section","sections","replaceWith","cc","JSON","parse","competencies","compcontainer","closest","length","html","competencieshtml","Object","keys","map","key","Number","autocomplete","source","request","ui","filter","values","term","slice","select","th","value","compid","indexOf","competency","css","appendTo","preventDefault","selectedItem","item","minLength","event","content","push","exeption","association","clone","catid","attr","siblings","toggleClass","insertAfter","addClass"],"mappings":"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"}