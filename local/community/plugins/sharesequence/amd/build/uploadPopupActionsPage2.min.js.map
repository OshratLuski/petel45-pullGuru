{"version":3,"file":"uploadPopupActionsPage2.min.js","sources":["../src/uploadPopupActionsPage2.js"],"sourcesContent":["/* eslint-disable promise/always-return */\n/* eslint-disable promise/catch-or-return */\n/* eslint-disable no-constant-condition */\n/* eslint-disable camelcase */\n/* eslint-disable require-jsdoc */\n// eslint-disable-next-line require-jsdoc\n\ndefine([\n    'jquery',\n    'core/str',\n    'core/templates',\n    'core/ajax',\n    'core/notification',\n    'community_sharesequence/inview',\n    'community_sharesequence/jquery-ui',\n], function ($, Str, Templates, Ajax, Notification, inView) {\n\n    return {\n        PARENT: null,\n        UNIQUEID: null,\n        TRANSLATED_STRINGS: {},\n        SELECTED_ACTIVITIES: {},\n        CREATED_SEQUENCES: {},\n        SELECTORS: {\n\n        },\n        selectUnselectUnitChecbox: function (el) {\n            let target = $(el);\n            let targetName = target.data('checkbox-name');\n            /*  Let parent = $(el).closest(`.${targetName}-item-wrapper`).parent(); */\n\n\n            // Select/unselect all children checkboxes\n            if (targetName === 'section' || targetName === 'subsection') {\n                let collapseCheckboxes = $(`[data-checbox-parent=${target.attr('id')}]`);\n                collapseCheckboxes.find(\"input:checkbox\").prop('checked', target.prop(\"checked\"));\n            }\n\n            // Select/unselect parent checkboxes\n            function checkSelectedParent(target, targetName) {\n\n                let checkboxWrapper = target.closest('.multicollapse');\n                let parentName = target.closest('.multicollapse').data('checbox-parent');\n                let parentCheckbox = $(`#${parentName}`);\n                let siblings;\n                let siblingCheckedCheckboxes;\n                if (targetName === 'activity') {\n                    siblings = checkboxWrapper.find(`[data-checkbox-name=${targetName}]`);\n                    siblingCheckedCheckboxes = siblings.filter(':checked');\n                } else if (targetName === 'subsection') {\n                    siblings = checkboxWrapper.find('input:checkbox');\n                    siblingCheckedCheckboxes = siblings.filter(':checked');\n                }\n\n                if (siblings.length === siblingCheckedCheckboxes.length) {\n                    parentCheckbox.prop('checked', true);\n                } else {\n                    parentCheckbox.prop('checked', false);\n                }\n                if (targetName === 'activity') {\n                    target = parentCheckbox;\n                    targetName = 'subsection';\n                    return checkSelectedParent(target, targetName);\n                }\n            }\n\n            if (targetName === 'activity' || targetName === 'subsection') {\n                checkSelectedParent(target, targetName);\n            }\n            this.updateSequences();\n        },\n\n        updateSequences: function () {\n            const self = this;\n\n            // Check select checboxes\n            let selectedActivities = $(this.PARENT).find('[data-checkbox-name=\"activity\"]').filter(':checked');\n            this.SELECTED_ACTIVITIES = {};\n\n            // If no activities is checked - remove all sequences\n            if (selectedActivities.length === 0) {\n                let createdSequences = $(this.PARENT).find(this.SELECTORS.SEQUENCE_LIST).find('li');\n                createdSequences.each((index, el) => {\n                    $(el).remove();\n                });\n            } else {\n                selectedActivities.each((index, el) => {\n                    let elId = el.id;\n                    if (!this.SELECTED_ACTIVITIES.hasOwnProperty(elId)) {\n                        this.SELECTED_ACTIVITIES[elId] = $(el).data('name');\n                    }\n                });\n                // Check is there already created sequences units\n                let createdSequences = $(this.PARENT).find(this.SELECTORS.SEQUENCE_LIST).find('li');\n                this.CREATED_SEQUENCES = {};\n                createdSequences.each((index, el) => {\n                    let elId = $(el).data('activity_id');\n                    if (!this.CREATED_SEQUENCES.hasOwnProperty(elId)) {\n                        this.CREATED_SEQUENCES[elId] = $(el).data('name');\n                    }\n                });\n\n                // Add checked units to sequence.\n                for (let key in this.SELECTED_ACTIVITIES) {\n                    if (!this.CREATED_SEQUENCES.hasOwnProperty(key)) {\n                        let icon = $(`[for=\"${key}\"]`).find('.activity-item-icon').html();\n                        let dataCmid = key.replace(\"sequence_cm_\", \"\");\n                        const sequenceTemplate = `\n                        <li class=\"sequence-item d-flex align-items-center justify-content-start border mb-3\" data-name=\"${this.SELECTED_ACTIVITIES[key]}\" data-activity_id=\"${key}\">\n                            <span class=\"sequence-item-sort\">\n                                <i class=\"fal fa-arrows\"></i>\n                            </span>\n                            <span class=\"sequence-item-icon activity-icon d-block\">${icon}</span>\n                            <span class=\"sequence-item-name mr-auto\" title=\"${this.SELECTED_ACTIVITIES[key]}\">${this.SELECTED_ACTIVITIES[key]}</span>\n                            <input class=\"sequence-item-text mr-auto\" name=\"sequence-item-text\" type=\"hidden\" value=\"${this.SELECTED_ACTIVITIES[key]}\" data-cmid=\"${dataCmid}\">\n                            <button class=\"sequence-item-rename\" type=\"button\" aria-label=\"${this.TRANSLATED_STRINGS.rename_sequence_unit}\">\n                                <i class=\"fal fa-pencil\"></i>\n                            </button>\n                            <label class=\"sequence-item-delete ml-auto\" role=\"button\" aria-label=\"${this.TRANSLATED_STRINGS.delete_unit_from_sequence}\" for=\"${key}\">\n                                <i class=\"fal fa-times\"></i>\n                            </label>\n                        </li>`;\n\n                        // Add new sequence to the list.\n                        $(sequenceTemplate).appendTo($(this.PARENT).find(this.SELECTORS.SEQUENCE_LIST));\n                    }\n                }\n\n                // Remove unchecked units from sequence\n                for (let key in this.CREATED_SEQUENCES) {\n                    if (!this.SELECTED_ACTIVITIES.hasOwnProperty(key)) {\n                        let sequenceItem = $(`[data-activity_id=${key}]`);\n\n                        // Remove sequence from the list.\n                        sequenceItem.remove();\n                    }\n                }\n\n            }\n\n            // Make sequence list items sortable\n            $(this.PARENT).find(this.SELECTORS.SEQUENCE_LIST).sortable({\n                change: function (event, ui) {\n                    self.setIndexes($(self.PARENT).find(self.SELECTORS.SEQUENCE_LIST));\n\n                },\n                create:\n                    function (event, ui) {\n                        self.setIndexes($(self.PARENT).find(self.SELECTORS.SEQUENCE_LIST));\n                    },\n            });\n            $(this.PARENT).find(this.SELECTORS.SEQUENCE_LIST).disableSelection();\n\n            this.setIndexes($(this.PARENT).find(this.SELECTORS.SEQUENCE_LIST));\n        },\n        setIndexes: function (target) {\n\n            let items = $(target).find('li.sequence-item');\n            items.each((index, el) => {\n                $(el).find('input').data('index', index);\n            });\n\n        },\n        renameSequence: function (target) {\n\n            let nameInput = target.find('input');\n            let unitName = target.find(this.SELECTORS.SEQUENCE_ITEM_NAME);\n            let editBtn = target.find(this.SELECTORS.RENAME_BTN);\n\n            editBtn.hide();\n            unitName.hide();\n            nameInput.show();\n            nameInput.attr('type', 'text');\n            nameInput.focus();\n\n\n\n            nameInput.on('change keypress focusout', function (e) {\n                if (e.which === 13 || e.type === 'change' || e.type === 'focusout') {\n                    let value = $(e.target).val();\n                    target.data('name', value);\n                    unitName.text(value);\n                    unitName.show();\n                    unitName.attr('title', value);\n                    nameInput.hide();\n                    editBtn.attr('style', '');\n                }\n            });\n        },\n        updateSelectors: function (uniqueid) {\n            // Set selectors.\n            this.SELECTORS.UNITS_BLOCK = '.units-block';\n            this.SELECTORS.SEQUENCE_BLOCK = '.sequence-block';\n            this.SELECTORS.SEQUENCE_LIST = '#sequence-item-list-' + uniqueid;\n            this.SELECTORS.COLLAPSE_UNIT_BTNS = '.check-section-label';\n            this.SELECTORS.COLLAPSE_TOPIC_BTNS = '.collapse-subsection-btn';\n            this.SELECTORS.SECTION_CHEKBOX = '.check-section-checkbox';\n            this.SELECTORS.SUBSECTION_CHEKBOX = '.check-subsection-checkbox';\n            this.SELECTORS.ACTIVITY_CHEKBOX = '.check-activity-checkbox';\n            this.SELECTORS.SEQUENCE_ITEM_NAME = '.sequence-item-name';\n            this.SELECTORS.RENAME_BTN = '.sequence-item-rename';\n        },\n        openInviewSection: function (name) {\n            inView(name).on('enter', function (e) {\n                let parent = $(e);\n                if (!parent.hasClass('inview-done')) {\n                    parent.addClass('inview-done');\n\n                    let sectionid = parent.data('sectionid');\n\n                    Ajax.call([{\n                        methodname: 'community_sharesequence_get_data_for_section',\n                        args: {\n                            sectionid: sectionid\n                        },\n                        done: function (response) {\n                            let data = JSON.parse(response.data);\n\n                            Templates.render('community_sharesequence/section_data', data)\n                                .done(function (html, js) {\n                                    Templates.appendNodeContents(parent, html, js);\n                                })\n                                .fail(Notification.exception);\n                        },\n                        fail: Notification.exception\n                    }]);\n                }\n\n            }).on('exit', el => { });\n        },\n        selectActivities: function () {\n            let self = this;\n\n            self.updateSelectors(self.UNIQUEID);\n\n            // Listen changes (select/unselect) on unit checkboxes and mark/unmark parent checbox.\n            $(self.PARENT).find(self.SELECTORS.SECTION_CHEKBOX).on('change', (e) => {\n                $('.sequence-item-list-alert').hide();\n                self.selectUnselectUnitChecbox(e.target);\n            });\n            $(self.PARENT).find(self.SELECTORS.SUBSECTION_CHEKBOX).on('change', (e) => {\n                $('.sequence-item-list-alert').hide();\n                self.selectUnselectUnitChecbox(e.target);\n            });\n            $(self.PARENT).find(self.SELECTORS.ACTIVITY_CHEKBOX).on('change', (e) => {\n                $('.sequence-item-list-alert').hide();\n                this.selectUnselectUnitChecbox(e.target);\n            });\n\n        },\n        init: function (parent, uniqid) {\n            const self = this;\n            this.PARENT = $(parent);\n            this.UNIQUEID = uniqid;\n\n            // Get translated string for sequence unit.\n            const strings = [\n                {\n                    key: 'rename_sequence_unit',\n                    component: 'community_sharesequence'\n                },\n                {\n                    key: 'delete_unit_from_sequence',\n                    component: 'community_sharesequence',\n                }\n            ];\n\n            Str.get_strings(strings).then(function (results) {\n                self.TRANSLATED_STRINGS.rename_sequence_unit = results[0];\n                self.TRANSLATED_STRINGS.delete_unit_from_sequence = results[1];\n            });\n\n            self.updateSelectors(self.UNIQUEID);\n\n            // Toggle active state of unit\n            $(self.PARENT).find(self.SELECTORS.COLLAPSE_UNIT_BTNS).on('click', (e) => {\n                $(e.target).closest('.section-item').toggleClass('active');\n            });\n\n            // Add rename function.\n            $(self.PARENT).on('click', self.SELECTORS.RENAME_BTN, (e) => {\n\n                let target = $(e.target).closest('li.sequence-item');\n                e.preventDefault();\n                self.renameSequence(target);\n            });\n\n            $(\"form\").submit(function(e){\n                e.preventDefault();\n                return false;\n            });\n        }\n    };\n});\n"],"names":["define","$","Str","Templates","Ajax","Notification","inView","PARENT","UNIQUEID","TRANSLATED_STRINGS","SELECTED_ACTIVITIES","CREATED_SEQUENCES","SELECTORS","selectUnselectUnitChecbox","el","target","targetName","data","attr","find","prop","checkSelectedParent","siblings","siblingCheckedCheckboxes","checkboxWrapper","closest","parentName","parentCheckbox","filter","length","updateSequences","self","this","selectedActivities","SEQUENCE_LIST","each","index","remove","elId","id","_this","hasOwnProperty","createdSequences","key","icon","html","dataCmid","replace","sequenceTemplate","rename_sequence_unit","delete_unit_from_sequence","appendTo","sortable","change","event","ui","setIndexes","create","disableSelection","renameSequence","nameInput","unitName","SEQUENCE_ITEM_NAME","editBtn","RENAME_BTN","hide","show","focus","on","e","which","type","value","val","text","updateSelectors","uniqueid","UNITS_BLOCK","SEQUENCE_BLOCK","COLLAPSE_UNIT_BTNS","COLLAPSE_TOPIC_BTNS","SECTION_CHEKBOX","SUBSECTION_CHEKBOX","ACTIVITY_CHEKBOX","openInviewSection","name","parent","hasClass","addClass","sectionid","call","methodname","args","done","response","JSON","parse","render","js","appendNodeContents","fail","exception","selectActivities","_this2","init","uniqid","get_strings","component","then","results","toggleClass","preventDefault","submit"],"mappings":"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"}