{"version":3,"file":"tracker.min.js","sources":["../src/tracker.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/notification'], function ($, Ajax, Notification) {\r\n    return {\r\n        init: function (type, cmid) {\r\n\r\n            var onIframeReady = function ($i, successFn, errorFn) {\r\n                try {\r\n                    const iCon = $i.first()[0].contentWindow,\r\n                        bl = \"about:blank\",\r\n                        compl = \"complete\";\r\n                    const callCallback = () => {\r\n                        try {\r\n                            const $con = $i.contents();\r\n                            if ($con.length === 0) {\r\n                                throw new Error(\"iframe inaccessible\");\r\n                            }\r\n                            successFn($con);\r\n                        } catch (e) { // accessing contents failed\r\n                            errorFn();\r\n                        }\r\n                    };\r\n                    const observeOnload = () => {\r\n                        $i.on(\"load.jqueryMark\", () => {\r\n                            try {\r\n                                const src = $i.attr(\"src\").trim(),\r\n                                    href = iCon.location.href;\r\n                                if (href !== bl || src === bl || src === \"\") {\r\n                                    $i.off(\"load.jqueryMark\");\r\n                                    callCallback();\r\n                                }\r\n                            } catch (e) {\r\n                                errorFn();\r\n                            }\r\n                        });\r\n                    };\r\n                    if (iCon.document.readyState === compl) {\r\n                        const src = $i.attr(\"src\").trim(),\r\n                            href = iCon.location.href;\r\n                        if (href === bl && src !== bl && src !== \"\") {\r\n                            observeOnload();\r\n                        } else {\r\n                            callCallback();\r\n                        }\r\n                    } else {\r\n                        observeOnload();\r\n                    }\r\n                } catch (e) { // accessing contentWindow failed\r\n                    errorFn();\r\n                }\r\n            };\r\n\r\n            $(document).ready(function() {\r\n\r\n                let selector = '';\r\n                switch (type) {\r\n                    case 'h5pactivity':\r\n                        selector = '.h5p-player';\r\n                        break;\r\n                    default:\r\n                        selector = '.h5p-iframe';\r\n                        break;\r\n                }\r\n                var parentiFrame = $(selector);\r\n                onIframeReady(parentiFrame, function ($contents) {\r\n                    // Check for H5P iFrame.\r\n                    var iFrame = type === 'h5pactivity' ? $contents.find('.h5p-iframe') : parentiFrame;\r\n                    if (!iFrame[0] || !iFrame[0].contentWindow) {\r\n                        return;\r\n                    }\r\n                    var H5P = iFrame[0].contentWindow.H5P;\r\n\r\n                    // Check for H5P instances.\r\n                    if (!H5P || !H5P.instances || !H5P.instances[0]) {\r\n                        return;\r\n                    }\r\n\r\n                    let iframeVideo = H5P.instances[0].video;\r\n                    iframeVideo.on('stateChange', function (event) {\r\n                        let seconds = iframeVideo.getCurrentTime();\r\n                        let action = 'undefined';\r\n                        switch (event.data) {\r\n                            case H5P.Video.ENDED:\r\n                                action = 'ended';\r\n                                break;\r\n\r\n                            case H5P.Video.PLAYING:\r\n                                action = 'playing';\r\n                                break;\r\n\r\n                            case H5P.Video.PAUSED:\r\n                                action = 'paused';\r\n                                break;\r\n                        }\r\n\r\n                        Ajax.call([{\r\n                            methodname: 'local_h5ptracker_track_actions',\r\n                            args: {\r\n                                cmid: cmid,\r\n                                action: action,\r\n                                seconds: seconds\r\n                            }\r\n                        }])[0].fail(Notification.exception);\r\n                    });\r\n\r\n                    iframeVideo.on('playbackRateChange', function (event) {\r\n                        let seconds = iframeVideo.getCurrentTime();\r\n                        let action = 'playbackrate';\r\n                        Ajax.call([{\r\n                            methodname: 'local_h5ptracker_track_actions',\r\n                            args: {\r\n                                cmid: cmid,\r\n                                action: action,\r\n                                seconds: seconds\r\n                            }\r\n                        }])[0].fail(Notification.exception);\r\n                    });\r\n\r\n                    H5P.$body.find('.ui-slider-horizontal').on('click', function () {\r\n                        let seconds = iframeVideo.getCurrentTime();\r\n                        let action = 'seek';\r\n                        Ajax.call([{\r\n                            methodname: 'local_h5ptracker_track_actions',\r\n                            args: {\r\n                                cmid: cmid,\r\n                                action: action,\r\n                                seconds: seconds\r\n                            }\r\n                        }])[0].fail(Notification.exception);\r\n                    })\r\n                });\r\n            });\r\n        }\r\n    }\r\n})"],"names":["define","$","Ajax","Notification","init","type","cmid","document","ready","selector","parentiFrame","$i","successFn","errorFn","iCon","first","contentWindow","bl","callCallback","$con","contents","length","Error","e","observeOnload","on","src","attr","trim","location","href","off","readyState","onIframeReady","$contents","iFrame","find","H5P","instances","iframeVideo","video","event","seconds","getCurrentTime","action","data","Video","ENDED","PLAYING","PAUSED","call","methodname","args","fail","exception","$body"],"mappings":"AAAAA,kCAAO,CAAC,SAAU,YAAa,sBAAsB,SAAUC,EAAGC,KAAMC,oBAC7D,CACHC,KAAM,SAAUC,KAAMC,MAgDlBL,EAAEM,UAAUC,OAAM,eAEVC,SAAW,MAEN,gBADDJ,KAEAI,SAAW,mBAGXA,SAAW,kBAGfC,aAAeT,EAAEQ,WAzDL,SAAUE,GAAIC,UAAWC,iBAE/BC,KAAOH,GAAGI,QAAQ,GAAGC,cACvBC,GAAK,cAEHC,aAAe,mBAEPC,KAAOR,GAAGS,cACI,IAAhBD,KAAKE,aACC,IAAIC,MAAM,uBAEpBV,UAAUO,MACZ,MAAOI,GACLV,YAGFW,cAAgB,WAClBb,GAAGc,GAAG,mBAAmB,mBAEXC,IAAMf,GAAGgB,KAAK,OAAOC,OAChBd,KAAKe,SAASC,OACZb,IAAMS,MAAQT,IAAc,KAARS,MAC7Bf,GAAGoB,IAAI,mBACPb,gBAEN,MAAOK,GACLV,kBAtBA,aA0BRC,KAAKP,SAASyB,WAAsB,KAC9BN,IAAMf,GAAGgB,KAAK,OAAOC,OAChBd,KAAKe,SAASC,OACZb,IAAMS,MAAQT,IAAc,KAARS,IAC7BF,gBAEAN,oBAGJM,gBAEN,MAAOD,GACLV,WAgBJoB,CAAcvB,cAAc,SAAUwB,eAE9BC,OAAkB,gBAAT9B,KAAyB6B,UAAUE,KAAK,eAAiB1B,gBACjEyB,OAAO,IAAOA,OAAO,GAAGnB,mBAGzBqB,IAAMF,OAAO,GAAGnB,cAAcqB,OAG7BA,KAAQA,IAAIC,WAAcD,IAAIC,UAAU,QAIzCC,YAAcF,IAAIC,UAAU,GAAGE,MACnCD,YAAYd,GAAG,eAAe,SAAUgB,WAChCC,QAAUH,YAAYI,iBACtBC,OAAS,mBACLH,MAAMI,WACLR,IAAIS,MAAMC,MACXH,OAAS,mBAGRP,IAAIS,MAAME,QACXJ,OAAS,qBAGRP,IAAIS,MAAMG,OACXL,OAAS,SAIjB1C,KAAKgD,KAAK,CAAC,CACPC,WAAY,iCACZC,KAAM,CACF9C,KAAMA,KACNsC,OAAQA,OACRF,QAASA,YAEb,GAAGW,KAAKlD,aAAamD,cAG7Bf,YAAYd,GAAG,sBAAsB,SAAUgB,WACvCC,QAAUH,YAAYI,iBAE1BzC,KAAKgD,KAAK,CAAC,CACPC,WAAY,iCACZC,KAAM,CACF9C,KAAMA,KACNsC,OALK,eAMLF,QAASA,YAEb,GAAGW,KAAKlD,aAAamD,cAG7BjB,IAAIkB,MAAMnB,KAAK,yBAAyBX,GAAG,SAAS,eAC5CiB,QAAUH,YAAYI,iBAE1BzC,KAAKgD,KAAK,CAAC,CACPC,WAAY,iCACZC,KAAM,CACF9C,KAAMA,KACNsC,OALK,OAMLF,QAASA,YAEb,GAAGW,KAAKlD,aAAamD,uBAMhD"}