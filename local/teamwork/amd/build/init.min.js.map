{"version":3,"file":"init.min.js","sources":["../src/init.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable complexity */\n/* eslint-disable max-len */\n/* eslint-disable no-empty-function */\n/* eslint-disable no-unused-vars */\n/* eslint-disable camelcase */\ndefine([\n    'jquery',\n    'core/str',\n    'core/ajax',\n    'core/modal_factory',\n    'core/modal_events',\n    'local_teamwork/popup',\n    'local_teamwork/render',\n    'local_teamwork/dragula',\n    'local_teamwork/skin',\n    'local_teamwork/loading',\n    'local_teamwork/voicecontrol',\n    'local_teamwork/keyboardnav',\n    'core/notification',\n], function($, Str, Ajax, ModalFactory, ModalEvents, popup, render, drag, skin, loadingIcon, Voicecontrol, Keyboardnav, Notification) {\n    'use strict';\n\n    const mainBlock = document.querySelector('body');\n\n    var voice = false;\n\n    const set_teamwork_enable = (courseid, activityid, moduletype, callback) => {\n        Ajax.call([{\n            methodname: 'local_teamwork_set_teamwork_enable',\n            args: {\n                activityid: Number(activityid),\n                moduletype: moduletype,\n            },\n            done: function(data) {\n                callback(data);\n            },\n            fail: function() {\n                popup.error();\n            }\n        }]);\n    };\n\n    const set_access_to_student = (courseid, activityid, moduletype, target) => {\n        const access = target.checked;\n\n        Ajax.call([{\n            methodname: 'local_teamwork_set_access_to_student',\n            args: {\n                activityid: Number(activityid),\n                moduletype: moduletype,\n            },\n            done: function(data) {\n\n            },\n            fail: function() {\n                popup.error();\n            }\n        }]);\n    };\n\n    const add_new_card = (courseid, activityid, moduletype, selectgroupid, teamname = null, callback) => {\n\n        loadingIcon.show();\n        Ajax.call([{\n            methodname: 'local_teamwork_add_new_card',\n            args: {\n                courseid: Number(courseid),\n                activityid: Number(activityid),\n                moduletype: moduletype,\n                selectgroupid: selectgroupid,\n                teamname: teamname,\n            },\n            done: function(data) {\n                loadingIcon.remove();\n                callback(data);\n            },\n            fail: function() {\n                loadingIcon.remove();\n                popup.error();\n            }\n        }]);\n    };\n\n    const delete_card = (teamid, courseid, activityid, moduletype, callback) => {\n\n        loadingIcon.show();\n        Ajax.call([{\n            methodname: 'local_teamwork_delete_card',\n            args: {\n                teamid: teamid\n            },\n            done: function(data) {\n                loadingIcon.remove();\n                callback(data);\n            },\n            fail: function() {\n                loadingIcon.remove();\n                popup.error();\n            }\n        }]);\n    };\n\n    const delete_user_submit = (userid, teamid, courseid, activityid, moduletype, ifdelete, callback) => {\n\n        loadingIcon.show();\n        Ajax.call([{\n            methodname: 'local_teamwork_delete_user_submit',\n            args: {\n                userid: userid,\n                teamid: teamid,\n                courseid: Number(courseid),\n                activityid: Number(activityid),\n                moduletype: moduletype,\n                ifdelete: ifdelete,\n            },\n            done: function(data) {\n                loadingIcon.remove();\n                callback(data);\n            },\n            fail: function() {\n                loadingIcon.remove();\n                popup.error();\n            }\n        }]);\n    };\n\n    const popup_delete_user_submit = (userid, teamid, courseid, activityid, moduletype) => {\n\n        Str.get_strings([\n            {key: 'titlepopupremoveuser', component: 'local_teamwork'},\n            {key: 'contentpopupremoveuser', component: 'local_teamwork'},\n            {key: 'buttonpopupremoveuser', component: 'local_teamwork'},\n        ]).done(function(strings) {\n            var modalPromise = ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: strings[0],\n                body: strings[1]\n            });\n\n            $.when(modalPromise).then(function(fmodal) {\n\n                fmodal.setSaveButtonText(strings[2]);\n\n                // Handle save event.\n                fmodal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n\n                    delete_user_submit(userid, teamid, courseid, activityid, moduletype, true, function() {\n                        render.setDefaultData();\n                        render.studentList();\n                        render.teamsCard();\n                        $('.skin.shadow').removeAttr(\"style\");\n                        fmodal.destroy();\n                    });\n                });\n\n                fmodal.getRoot().on(ModalEvents.cancel, function(e) {\n                    // delete_user_submit(userid, teamid, courseid, activityid, moduletype, false, function() {\n                    //     render.setDefaultData();\n                    //     render.studentList();\n                    //     render.teamsCard();\n                    //     $('.skin.shadow').removeAttr(\"style\");\n                    //     fmodal.destroy();\n                    //     Keyboardnav.setFocusOnPrevfocusedElement();\n                    // });\n\n                    render.setDefaultData();\n                    render.studentList();\n                    render.teamsCard();\n                    $('.skin.shadow').removeAttr(\"style\");\n                    fmodal.destroy();\n                    Keyboardnav.setFocusOnPrevfocusedElement();\n                });\n\n                var root = fmodal.getRoot();\n                root.on(ModalEvents.shown, function() {\n                    $('.skin.shadow').css(\"z-index\", \"1000\");\n                });\n\n                root.on(ModalEvents.hidden, function() {\n                    render.setDefaultData();\n                    render.studentList();\n                    render.teamsCard();\n                    $('.skin.shadow').removeAttr(\"style\");\n                    fmodal.destroy();\n                    Keyboardnav.setFocusOnPrevfocusedElement();\n                });\n\n                return fmodal;\n            }).done(function(modal) {\n                modal.show();\n            }).fail(Notification.exception);\n        });\n    };\n\n    const show_random_popup = () => {\n        Ajax.call([{\n            methodname: 'local_teamwork_show_random_popup',\n            args: {},\n            done: function(data) {\n                let result = JSON.parse(data.result);\n                popup.textHead = result.header;\n                popup.text = result.content;\n                popup.show();\n                Keyboardnav.getFocusableElements('.teamwork-modal');\n                Keyboardnav.setAccessabilityBehaviuor();\n                Keyboardnav.setFocusOnElement('#student_number');\n            },\n            fail: function() {\n                popup.error();\n            }\n        }]);\n    };\n\n    /* Toggle actions on allow enddate checkbox status change in student settings popup */\n    const student_settings_enddate_state = () => {\n        const teamuserallowenddatechkbox = document.querySelector(\"#teamuserallowenddate\");\n        const allinputs = Array.from(\n            document.querySelectorAll(\".teamuserenddate-inputs-wrapper input, .teamuserenddate-inputs-wrapper select\")\n        );\n        teamuserallowenddatechkbox.addEventListener(\"change\", e => {\n            if (e.target.checked) {\n                allinputs.forEach(item => {\n                    item.removeAttribute(\"disabled\");\n                });\n                e.target.value = \"1\";\n            } else {\n                allinputs.forEach(item => {\n                    item.setAttribute(\"disabled\", \"disabled\");\n                });\n                e.target.value = \"0\";\n            }\n            Keyboardnav.getFocusableElements('.teamwork-modal');\n            Keyboardnav.setAccessabilityBehaviuor();\n        });\n    };\n\n    /* Render_student_settings_popup */\n    const render_student_settings_popup = (activityid, moduletype) => {\n        Ajax.call([{\n            methodname: 'local_teamwork_render_student_settings_popup',\n            args: {\n                activityid: activityid,\n                moduletype: moduletype\n            },\n            done: function(data) {\n                let result = JSON.parse(data.result);\n                popup.textHead = result.header;\n                popup.text = result.content;\n                popup.show();\n\n                Keyboardnav.getFocusableElements('.teamwork-modal');\n                Keyboardnav.setAccessabilityBehaviuor();\n                Keyboardnav.setFocusOnElement('#teamnumbers');\n                setTimeout(student_settings_enddate_state, 1000);\n            },\n            fail: function() {\n                popup.error();\n            }\n        }]);\n    };\n\n    const student_settings_popup_data = (courseid, activityid, moduletype) => {\n        const popupForm = document.querySelector(\".teamwork-modal\");\n        const teamNumbers = popupForm.querySelector('#teamnumbers').value;\n        const teamUserNumbers = popupForm.querySelector('#teamusernumbers').value;\n        const teamUserendDate = popupForm.querySelector(\n            \"input[name=team-userend-date]\"\n        ).value;\n        const teamUserendMonth = popupForm.querySelector(\n            \"select[name=team-userend-month]\"\n        ).value;\n        const teamUserendYear = popupForm.querySelector(\n            \"input[name=team-userend-year]\"\n        ).value;\n        const teamUserendHour = popupForm.querySelector(\n            \"input[name=team-userend-hour]\"\n        ).value;\n        const teamUserendMinute = popupForm.querySelector(\n            \"input[name=team-userend-minute]\"\n        ).value;\n        const teamuserallowenddate = popupForm.querySelector(\n            \"input[name=teamuserallowenddate]\"\n        ).value;\n\n        loadingIcon.show();\n        Ajax.call([{\n            methodname: 'local_teamwork_student_settings_popup_data',\n            args: {\n                courseid: Number(courseid),\n                activityid: Number(activityid),\n                moduletype: moduletype,\n                teamnumbers: Number(teamNumbers),\n                teamusernumbers: Number(teamUserNumbers),\n                teamuserenddate: Number(teamUserendDate),\n                teamuserendmonth: Number(teamUserendMonth),\n                teamuserendyear: Number(teamUserendYear),\n                teamuserendhour: Number(teamUserendHour),\n                teamuserendminute: Number(teamUserendMinute),\n                teamuserallowenddate: Number(teamuserallowenddate),\n            },\n            done: function(data) {\n                loadingIcon.remove();\n            },\n            fail: function() {\n                popup.error();\n            }\n        }]);\n    };\n\n    const set_random_teams = (target, courseid, activityid, moduletype, selectgroupid, callback) => {\n        while (!target.classList.contains('teamwork-modal')) {\n            target = target.parentNode;\n        }\n        const numberofstudent = target.querySelector('#student_number').value;\n\n        loadingIcon.show();\n        Ajax.call([{\n            methodname: 'local_teamwork_set_random_teams',\n            args: {\n                courseid: Number(courseid),\n                activityid: Number(activityid),\n                moduletype: moduletype,\n                selectgroupid: selectgroupid,\n                numberofstudent: Number(numberofstudent),\n            },\n            done: function(data) {\n                loadingIcon.remove();\n                callback(data);\n            },\n            fail: function() {\n                loadingIcon.remove();\n                popup.error();\n            }\n        }]);\n    };\n\n    const set_new_team_name = (target, courseid, activityid, moduletype, selectgroupid, callback) => {\n        const cardid = target.dataset.team_id;\n        const cardname = target.value;\n\n        Ajax.call([{\n            methodname: 'local_teamwork_set_new_team_name',\n            args: {\n                cardid: Number(cardid),\n                cardname: cardname,\n            },\n            done: function(data) {\n                callback();\n            },\n            fail: function() {\n                popup.error();\n            }\n        }]);\n    };\n\n    // Search student by name on student list.\n    const searchStudentByName = target => {\n        const studentList = Array.from(\n            document.querySelectorAll(\"#studentList div[data-student_id]\")\n        );\n        const hiddenClass = 'visuallyhidden';\n        const searchItem = target.value;\n    if (!searchItem) {\n        studentList.forEach(item => {\n            item.classList.remove(hiddenClass);\n        });\n        return;\n    }\n\n        studentList.forEach(item => {\n            if (item.innerHTML.toLowerCase().search(searchItem.toLowerCase()) >= 0) {\n                item.classList.remove(hiddenClass);\n            } else {\n                item.classList.add(hiddenClass);\n            }\n        });\n    };\n\n    const searchInit = () => {\n        // Init search for student list.\n        const searchInput = mainBlock.querySelector(\n            'input[data-handler = \"search_student\"]'\n        );\n        searchInput.addEventListener(\"input\", function(e) {\n            searchStudentByName(searchInput);\n        });\n    };\n\n    const searchReset = target => {\n        const studentList = Array.from(\n            document.querySelectorAll(\"#studentList div[data-student_id]\")\n        );\n        const hiddenClass = 'visuallyhidden';\n        const searchInput = mainBlock.querySelector(\n            'input[data-handler = \"search_student\"]'\n        );\n\n        searchInput.value = '';\n        studentList.forEach(item => {\n            item.classList.remove(hiddenClass);\n        });\n    };\n\n    return {\n\n        // For voicerecognition.\n        add_new_card: function(courseid, activityid, moduletype, selectgroupid, teamname, callback) {\n            add_new_card(courseid, activityid, moduletype, selectgroupid, teamname, callback);\n        },\n        delete_card: function(teamid, courseid, activityid, moduletype, callback) {\n            delete_card(teamid, courseid, activityid, moduletype, callback);\n        },\n\n        init: function(courseid, activityid, moduletype, selectgroupid) {\n\n            let self = this;\n            let voice = 0;\n\n            Ajax.call([{\n                methodname: 'local_teamwork_render_block_html_page',\n                args: {\n                    courseid: Number(courseid),\n                    activityid: Number(activityid),\n                    moduletype: moduletype,\n                    selectgroupid: selectgroupid\n                },\n                done: function(data) {\n\n                    let paths = JSON.parse(data.paths);\n                    let tokens = JSON.parse(data.tokens);\n                    let schemes = JSON.parse(data.schemes);\n\n                    voice = data.voicecontrolenabled;\n                    if (voice !== 0) {\n                        Voicecontrol.init(data.currentlangcode, paths, tokens, schemes);\n                        Voicecontrol.reload(courseid, activityid, moduletype, selectgroupid, paths, data.currentlangcode);\n                    }\n\n                    if (moduletype === 'assign') {\n                        let assign = $(\"body#page-mod-assign-view #intro\");\n                        assign.append(data.html);\n                        self.renderHtmlToPage(courseid, activityid, moduletype, selectgroupid);\n                    }\n\n                    if (moduletype === 'quiz') {\n                        let quiz = $(\".quizinfo\");\n                        quiz.append(data.html);\n                        self.renderHtmlToPage(courseid, activityid, moduletype, selectgroupid);\n                    }\n                },\n                fail: Notification.exception\n            }]);\n\n        },\n\n        renderHtmlToPage: function(courseid, activityid, moduletype, selectgroupid) {\n            render.data = {\n                sesskey: M.cfg.sesskey,\n                courseid: courseid,\n                activityid: activityid,\n                moduletype: moduletype,\n                selectgroupid: selectgroupid\n            };\n\n            // Run and open local window.\n            $(\"#open_local\").on(\"click\", function() {\n                render.mainBlock(searchInit, voice);\n            });\n\n            document.addEventListener('click', function(event) {\n                let target = event.target;\n                event.stopPropagation();\n                while (target !== mainBlock) {\n\n                    if (target === null) {\n                        break;\n                    }\n\n                    // Activate/diactivate teamwork.\n                    if (target.dataset.handler === 'teamwork_toggle') {\n                        target.classList.toggle('active');\n                        let state = target.dataset.state === 'active' ? 'disabled' : 'active';\n                        target.dataset.state = state;\n                        target.setAttribute('aria-pressed', state);\n                        $(\".skin_shadow\").toggleClass(\"skin_show\").toggleClass(\"skin_hide\");\n\n                        skin.checkPopupSkinState(state);\n                        if(state === 'disabled') {\n                            Keyboardnav.getFocusableElements('.teamworkdialog', '[data-handler=\"teamwork_toggle\"], .skin_close');\n                        } else {\n                            Keyboardnav.getFocusableElements('.teamworkdialog');\n                        }\n                        Keyboardnav.setFocusOnElement('[data-handler=\"teamwork_toggle\"]');\n                        Keyboardnav.setAccessabilityBehaviuor();\n                        set_teamwork_enable(courseid, activityid, moduletype, function() {});\n                        return;\n                    }\n\n                    // Close popups.\n                    if (target.classList.contains('close_popup') || target.classList.contains('teamwork-modal_close')) {\n                        if (target.classList.contains('stop-close')) {\n                            return;\n                        }\n                        popup.remove();\n                        if (target.classList.contains('teamwork-modal_close')) {\n                            Keyboardnav.getFocusableElements('.teamworkdialog');\n                            Keyboardnav.setAccessabilityBehaviuor();\n                            Keyboardnav.setFocusOnPrevfocusedElement();\n                            return;\n                        }\n                        return;\n                    }\n\n\n                    // Close skin popup.\n                    if (target.classList.contains('skin_close') || target.classList.contains('close_btn')) {\n                        if (voice !== 0) {\n                            Voicecontrol.stop();\n                        }\n                        skin.remove();\n                        const oplocalbtn = document.getElementById(\"open_local\");\n                        if (oplocalbtn && oplocalbtn.hasAttribute(\"data-redirect\")) {\n                            location.reload();\n                        }\n                        return;\n                    }\n\n                    // Show student_setting popup.\n                    if (target.dataset.handler === 'access_to_student') {\n                        if (target.classList.contains('active')) {\n                            target.classList.remove('active');\n                            set_access_to_student(courseid, activityid, moduletype, target);\n                        } else {\n                            target.classList.add('active');\n                            render_student_settings_popup(activityid, moduletype);\n                            Keyboardnav.setPrevfocusedElement(`[data-handler=\"${target.dataset.handler}\"]`);\n                            set_access_to_student(courseid, activityid, moduletype, target);\n                        }\n                    }\n\n                    // Delete user submit.\n                    if (target.dataset.handler === 'delete_user_submit') {\n                        let userid = target.dataset.userid;\n                        let teamid = target.dataset.teamid;\n                        Keyboardnav.setPrevfocusedElement(`[data-userid=\"${userid}\"]`);\n\n                        // TODO\n\n                        Ajax.call([{\n                            methodname: 'local_teamwork_check_user_submit',\n                            args: {\n                                userid: userid,\n                                teamid: teamid,\n                                courseid: Number(courseid),\n                                activityid: Number(activityid),\n                                moduletype: moduletype,\n                            },\n                            done: function(data) {\n                                if (data.result === 'true') {\n                                    popup_delete_user_submit(userid, teamid, courseid, activityid, moduletype);\n                                } else {\n                                    delete_user_submit(userid, teamid, courseid, activityid, moduletype, false, function() {\n                                        render.setDefaultData();\n                                        render.studentList();\n                                        render.teamsCard();\n                                    });\n                                }\n                            },\n                            fail: function() {\n                                popup.error();\n                            }\n                        }]);\n\n                        return;\n                    }\n\n                    // Get data from popup form.\n                    if (target.dataset.handler === 'get_popup_data') {\n                        event.preventDefault();\n                        student_settings_popup_data(courseid, activityid, moduletype);\n                        popup.remove();\n                        Keyboardnav.getFocusableElements('.teamworkdialog');\n                        Keyboardnav.setAccessabilityBehaviuor();\n                        Keyboardnav.setFocusOnPrevfocusedElement();\n                        return;\n                    }\n\n                    // Open select group menu.\n                    if (target.dataset.handler === 'open_group_selection') {\n                        $(target)\n                            .next()\n                            .slideToggle();\n                        return;\n                    }\n\n                    // Handle select group.\n                    if (target.dataset.handler === 'select_groups') {\n                        let text = document.querySelector('html[lang=\"en\"]')\n                            ? \"choose grous\"\n                            : \"בחר קבוצה\";\n                        if (target.classList.contains('selected')) {\n                            return;\n                        }\n                        target.classList.toggle('selected');\n                        $('div[data-handler=\"open_group_selection\"]').html(\n                            target.classList.contains('selected') ? target.innerHTML : text\n                        );\n\n                        $(target).siblings().removeClass(\"selected\");\n\n                        let result = [];\n                        let val = Array.from(target.parentNode.children);\n                        val.forEach(item => {\n                            if (item.classList.contains('selected')) {\n                                result.push(item.dataset.value);\n                            }\n                        });\n                        $(target)\n                            .parent()\n                            .slideToggle();\n                        selectgroupid = JSON.stringify(result);\n                        render.data.selectgroupid = JSON.stringify(result);\n                        render.studentList();\n                        render.teamsCard();\n                        return;\n                    }\n\n                    // Add new team card.\n                    if (target.dataset.handler === 'add_new_teamcard') {\n                        add_new_card(\n                            courseid,\n                            activityid,\n                            moduletype,\n                            selectgroupid,\n                            null,\n                            function() {\n                                render.setDefaultData();\n                                render.studentList();\n                                render.teamsCard();\n                            }\n                        );\n\n                        return;\n                    }\n\n                    // Delete team card.\n                    if (target.dataset.handler === 'delete_teamcard') {\n                        let teamid = target.dataset.remove_team_id;\n                        delete_card(teamid, courseid, activityid, moduletype, function() {\n                            render.setDefaultData();\n                            render.teamsCard();\n                            render.studentList();\n                        });\n                        Keyboardnav.setPrevfocusedElement(`[data-handler=\"${target.dataset.handler}\"]`);\n\n                        return;\n                    }\n\n                    // Show popup to determine the random number of students on the each team.\n                    if (target.dataset.handler === 'random_popup') {\n                        show_random_popup();\n                        Keyboardnav.setPrevfocusedElement(`[data-handler=\"${target.dataset.handler}\"]`);\n                        return;\n                    }\n\n                    // Set random teams.\n                    if (target.dataset.handler === 'random') {\n                        set_random_teams(\n                            target,\n                            courseid,\n                            activityid,\n                            moduletype,\n                            render.data.selectgroupid,\n                            function() {\n                                render.teamsCard();\n                                render.studentList();\n                                popup.remove();\n//FIXME:\n                         /*        skin.getFocusableElements($('.teamworkdialog'));\n                                skin.setAccessabilityBehaviuor(); */\n                                // skin.setFocusOnElement(skin.PREVFOCUSED.element);\n                            }\n                        );\n                        return;\n                    }\n\n                    // Search reset.\n                    if (target.dataset.handler === 'search_reset') {\n                        searchReset(target);\n                        return;\n                    }\n\n                    target = target.parentNode;\n                }\n            });\n\n            // Close popup by keypres on close X btn\n            $(document).on(\"keydown\", \".skin_close\", function(e) {\n                let keycode = (e.keyCode ? e.keyCode : e.which);\n                if (keycode === 13) {\n                    if (voice !== 0) {\n                        Voicecontrol.stop();\n                    }\n                    skin.remove();\n                }\n            });\n\n\n            // Init drug and drop events.\n            drag.startDrag();\n\n            // Change team name.\n            document.addEventListener(\"change\", function(event) {\n                if (event.target.dataset.handler === 'input_team_name') {\n                    set_new_team_name(\n                        event.target,\n                        courseid,\n                        activityid,\n                        moduletype,\n                        render.data.selectgroupid,\n                        function() {\n                            render.teamsCard();\n                        }\n                    );\n                    Keyboardnav.setPrevfocusedElement(`[data-handler=\"${event.target.dataset.handler}\"]`);\n                }\n            });\n\n            // Change team name with keypress.\n            document.addEventListener(\"keypress\", function(event) {\n                if (event.target.dataset.handler === 'input_team_name' && event.keyCode === 13) {\n                    set_new_team_name(\n                        event.target,\n                        courseid,\n                        activityid,\n                        moduletype,\n                        render.data.selectgroupid,\n                        function() {\n                            render.teamsCard();\n                        }\n                    );\n                }\n            });\n\n            // Close all popups by esc.\n            document.addEventListener(\"keydown\", function(event) {\n                if (event.keyCode === 27) {\n                    skin.remove();\n                    popup.remove();\n                }\n            });\n\n        }\n    };\n});\n"],"names":["define","$","Str","Ajax","ModalFactory","ModalEvents","popup","render","drag","skin","loadingIcon","Voicecontrol","Keyboardnav","Notification","mainBlock","document","querySelector","set_teamwork_enable","courseid","activityid","moduletype","callback","call","methodname","args","Number","done","data","fail","error","set_access_to_student","target","checked","add_new_card","selectgroupid","teamname","show","remove","delete_card","teamid","delete_user_submit","userid","ifdelete","popup_delete_user_submit","get_strings","key","component","strings","modalPromise","create","type","types","SAVE_CANCEL","title","body","when","then","fmodal","setSaveButtonText","getRoot","on","save","e","preventDefault","setDefaultData","studentList","teamsCard","removeAttr","destroy","cancel","setFocusOnPrevfocusedElement","root","shown","css","hidden","modal","exception","student_settings_enddate_state","teamuserallowenddatechkbox","allinputs","Array","from","querySelectorAll","addEventListener","forEach","item","removeAttribute","value","setAttribute","getFocusableElements","setAccessabilityBehaviuor","render_student_settings_popup","result","JSON","parse","textHead","header","text","content","setFocusOnElement","setTimeout","student_settings_popup_data","popupForm","teamNumbers","teamUserNumbers","teamUserendDate","teamUserendMonth","teamUserendYear","teamUserendHour","teamUserendMinute","teamuserallowenddate","teamnumbers","teamusernumbers","teamuserenddate","teamuserendmonth","teamuserendyear","teamuserendhour","teamuserendminute","set_random_teams","classList","contains","parentNode","numberofstudent","set_new_team_name","cardid","dataset","team_id","cardname","searchInit","searchInput","searchItem","innerHTML","toLowerCase","search","add","searchStudentByName","searchReset","init","self","this","voice","paths","tokens","schemes","voicecontrolenabled","currentlangcode","reload","append","html","renderHtmlToPage","sesskey","M","cfg","event","stopPropagation","handler","toggle","state","toggleClass","checkPopupSkinState","stop","oplocalbtn","getElementById","hasAttribute","location","setPrevfocusedElement","next","slideToggle","siblings","removeClass","children","push","parent","stringify","remove_team_id","keyCode","which","startDrag"],"mappings":"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"}