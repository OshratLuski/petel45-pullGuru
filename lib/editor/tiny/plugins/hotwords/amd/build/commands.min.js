define("tiny_hotwords/commands",["exports","editor_tiny/utils","core/str","./common","core/modal","core/modal_events","core/templates","core/ajax","core/notification","core/fragment","./options","jquery"],(function(_exports,_utils,_str,_common,_modal,_modal_events,_templates,_ajax,_notification,_fragment,Options,_jquery){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Commands helper for the Moodle tiny_hotwords plugin.
   *
   * @module      tiny_hotwords/commands
   * @copyright   2025 Devlion <devlion@devlion.co>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0,_modal=_interopRequireDefault(_modal),_modal_events=_interopRequireDefault(_modal_events),_templates=_interopRequireDefault(_templates),_ajax=_interopRequireDefault(_ajax),_notification=_interopRequireDefault(_notification),_fragment=_interopRequireDefault(_fragment),Options=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Options),_jquery=_interopRequireDefault(_jquery);const setHotwords=async(editor,urlText,value)=>{let selectednode,isExpanded,textToDisplay;editor.focus(),isExpanded=!editor.selection.isCollapsed(),textToDisplay=urlText.replace(/(<([^>]+)>)/gi,"").trim(),""===textToDisplay&&(textToDisplay=urlText);const timecreated=(new Date).getTime(),isUpdatingOnlyLink="hotword"===editor.selection.getNode().dataset.toggle;if(isExpanded&&!isUpdatingOnlyLink){editor.execCommand("mceInsertLink",!1,{href:"#","data-timecreated":timecreated,"data-toggle":"hotword","data-text":value,title:textToDisplay});(selectednode=Array.from(editor.dom.select("a[data-timecreated]")).find((node=>node.getAttribute("data-timecreated")===timecreated.toString()))).innerText=textToDisplay}if(textToDisplay&&isUpdatingOnlyLink){if(selectednode=Array.from(editor.dom.select("a[data-timecreated]")).find((node=>node.getAttribute("data-timecreated")===timecreated.toString())),selectednode=selectednode||editor.selection.getNode(),!selectednode)return;selectednode.setAttribute("data-toggle","hotword"),selectednode.setAttribute("data-text",value),selectednode.setAttribute("title",textToDisplay),selectednode.innerText=textToDisplay}if(!isExpanded&&!isUpdatingOnlyLink){const hotwords=document.createElement("a");hotwords.innerText=textToDisplay,hotwords.setAttribute("href","#"),hotwords.setAttribute("data-toggle","hotword"),hotwords.setAttribute("data-text",value),hotwords.setAttribute("title",textToDisplay),editor.selection.setNode(hotwords),editor.selection.select(hotwords)}};_exports.getSetup=async()=>{const[buttonImage,buttonDeleteImage,buttonTitle,deleteButtonTitle]=await Promise.all([(0,_utils.getButtonImage)("icon",_common.component),(0,_utils.getButtonImage)("icon2",_common.component),await(0,_str.get_string)("title","tiny_hotwords"),await(0,_str.get_string)("deletetitle","tiny_hotwords")]);return editor=>{editor.ui.registry.addIcon("icon",buttonImage.html),editor.ui.registry.addButton(_common.hotwordsButtonName,{icon:"icon",tooltip:buttonTitle,onAction:()=>(async editor=>{var _selectionnode;const currentSelection=editor.selection.getContent({format:"text"});let selectionnode=editor.selection.getNode();selectionnode=editor.dom.getParent(selectionnode,'a[data-toggle="hotword"]');let prevcontent=selectionnode?selectionnode.dataset.text:"";if(!editor.selection.isCollapsed()&&!selectionnode){const match=editor.selection.getContent().match(/data-text="([^"]*)"/);let result=match?match[1]:"";const textarea=document.createElement("textarea");textarea.innerHTML=result,prevcontent=textarea.value}const modal=await _modal.default.create({title:await(0,_str.get_string)("modaltitle","tiny_hotwords"),body:await _templates.default.render("tiny_hotwords/modal")});await modal.getRoot().find(".modal-dialog").css({width:"60vw","max-width":"60vw"}),modal.show(),modal.getRoot().on(_modal_events.default.hidden,(function(){modal.destroy()})),_fragment.default.loadFragment("tiny_hotwords","form",Options.getContextId(editor),{contextId:Options.getContextId(editor),existingcode:prevcontent,urltext:currentSelection||(null===(_selectionnode=selectionnode)||void 0===_selectionnode?void 0:_selectionnode.innerText)||""}).done((async function(html,js){_templates.default.replaceNodeContents((0,_jquery.default)(".tiny_hotwords-wrap"),html,js),console.log(document.querySelector("#embedhotwordsform #id_submitbutton")),document.querySelector("#embedhotwordsform #id_submitbutton").addEventListener("click",(e=>{console.log("e"),console.log(e),e.preventDefault();const linktext=document.querySelector("input#id_urltext").value;_ajax.default.call([{methodname:"filter_hotwords_format_hotword",args:{content:document.querySelector("textarea#id_content").value}}])[0].done((function(response){var _document$querySelect;response.messages||(setHotwords(editor,linktext,response.content),modal.destroy(),null===(_document$querySelect=document.querySelector("#embedhotwordsform"))||void 0===_document$querySelect||_document$querySelect.remove())})).fail(_notification.default.exception)}))})).fail(_notification.default.exception)})(editor)}),editor.ui.registry.addIcon("icon2",buttonDeleteImage.html),editor.ui.registry.addButton(_common.hotwordsDeleteName,{icon:"icon2",tooltip:deleteButtonTitle,onAction:()=>(editor=>{editor.execCommand("unlink"),editor.nodeChanged()})(editor)})}}}));

//# sourceMappingURL=commands.min.js.map