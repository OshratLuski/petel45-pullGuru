{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["/* eslint-disable no-tabs */\n// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Commands helper for the Moodle tiny_hotwords plugin.\n *\n * @module      tiny_hotwords/commands\n * @copyright   2025 Devlion <devlion@devlion.co>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {get_string as getString} from 'core/str';\nimport {\n\tcomponent, hotwordsButtonName, hotwordsDeleteName\n} from './common';\nimport Modal from 'core/modal';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport Fragment from 'core/fragment';\nimport * as Options from './options';\nimport $ from 'jquery';\n\n/**\n * Handle the action for your plugin.\n * @param {TinyMCE.editor} editor The tinyMCE editor instance.\n */\nconst handleAction = async(editor) => {\n\n\tconst currentSelection = editor.selection.getContent({format: 'text'});\n\n\tlet selectionnode = editor.selection.getNode();\n\tselectionnode = editor.dom.getParent(selectionnode, 'a[data-toggle=\"hotword\"]');\n\tlet prevcontent = selectionnode ? selectionnode.dataset.text : '';\n\tconst isExpanded = !editor.selection.isCollapsed();\n\n\tif (isExpanded && !selectionnode) {\n\t\tconst match = editor.selection.getContent().match(/data-text=\"([^\"]*)\"/);\n\t\tlet result = match ? match[1] : '';\n\t\tconst textarea = document.createElement(\"textarea\");\n\t\ttextarea.innerHTML = result;\n\t\tprevcontent = textarea.value;\n\t}\n\n\tconst modal = await Modal.create({\n\t\ttitle: await getString('modaltitle', 'tiny_hotwords'),\n\t\tbody: await Templates.render('tiny_hotwords/modal'),\n\t});\n\tawait modal.getRoot().find('.modal-dialog').css({\n\t\t'width': '60vw',\n\t\t'max-width': '60vw'\n\t});\n\tmodal.show();\n\tmodal.getRoot().on(ModalEvents.hidden, function() {\n\t\tmodal.destroy();\n\t});\n\n\tFragment.loadFragment('tiny_hotwords', 'form', Options.getContextId(editor),\n\t\t{\n\t\t\tcontextId: Options.getContextId(editor),\n\t\t\texistingcode: prevcontent,\n\t\t\turltext: currentSelection || selectionnode?.innerText || ''\n\t\t}\n\t).done(async function(html, js) {\n\t\tTemplates.replaceNodeContents($('.tiny_hotwords-wrap'), html, js);\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(document.querySelector('#embedhotwordsform #id_submitbutton'));\n\t\tdocument.querySelector('#embedhotwordsform #id_submitbutton').addEventListener('click', (e) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log('e');\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(e);\n\t\t\te.preventDefault();\n\t\t\tconst linktext = document.querySelector('input#id_urltext').value;\n\t\t\tAjax.call([{\n\t\t\t\tmethodname: 'filter_hotwords_format_hotword', args: {\n\t\t\t\t\tcontent: document.querySelector('textarea#id_content').value,\n\t\t\t\t}\n\t\t\t}])[0].done(function(response) {\n\t\t\t\tif (!response.messages) {\n\t\t\t\t\tsetHotwords(editor, linktext, response.content);\n\t\t\t\t\tmodal.destroy();\n\t\t\t\t\tdocument.querySelector('#embedhotwordsform')?.remove();\n\t\t\t\t}\n\t\t\t}).fail(Notification.exception);\n\t\t});\n\t}).fail(Notification.exception);\n};\n\nconst setHotwords = async(editor, urlText, value) => {\n\tlet selectednode, isExpanded, textToDisplay;\n\n\teditor.focus();\n\tisExpanded = !editor.selection.isCollapsed();\n\n\ttextToDisplay = urlText.replace(/(<([^>]+)>)/gi, \"\").trim();\n\tif (textToDisplay === '') {\n\t\ttextToDisplay = urlText;\n\t}\n\n\tconst timecreated = new Date().getTime();\n\tconst isUpdatingOnlyLink = editor.selection.getNode().dataset.toggle === 'hotword';\n\n\tif (isExpanded && !isUpdatingOnlyLink) {\n\t\teditor.execCommand('mceInsertLink', false, {\n\t\t\t'href': '#',\n\t\t\t'data-timecreated': timecreated,\n\t\t\t'data-toggle': \"hotword\",\n\t\t\t'data-text': value,\n\t\t\t'title': textToDisplay,\n\t\t});\n\t\tconst creatednode = selectednode = Array.from(editor.dom.select('a[data-timecreated]'))\n\t\t\t.find(node => node.getAttribute('data-timecreated') === timecreated.toString());\n\t\tcreatednode.innerText = textToDisplay;\n\t}\n\n\tif (textToDisplay && isUpdatingOnlyLink) {\n\t\tselectednode = Array.from(editor.dom.select('a[data-timecreated]'))\n\t\t\t.find(node => node.getAttribute('data-timecreated') === timecreated.toString());\n\t\tselectednode = selectednode ? selectednode : editor.selection.getNode();\n\t\tif (!selectednode) {\n\t\t\treturn;\n\t\t}\n\t\tselectednode.setAttribute('data-toggle', \"hotword\");\n\t\tselectednode.setAttribute('data-text', value);\n\t\tselectednode.setAttribute('title', textToDisplay);\n\t\tselectednode.innerText = textToDisplay;\n\t}\n\tif (!isExpanded && !isUpdatingOnlyLink) {\n\t\tconst hotwords = document.createElement('a');\n\t\thotwords.innerText = textToDisplay;\n\t\thotwords.setAttribute('href', '#');\n\t\thotwords.setAttribute('data-toggle', 'hotword');\n\t\thotwords.setAttribute('data-text', value);\n\t\thotwords.setAttribute('title', textToDisplay);\n\t\teditor.selection.setNode(hotwords);\n\t\teditor.selection.select(hotwords);\n\t}\n};\n\n\nconst unlink = (editor) => {\n\teditor.execCommand('unlink');\n\n\t// Mark the editor as updated.\n\teditor.nodeChanged();\n};\n\n/**\n * Get the setup function for the buttons.\n *\n * This is performed in an async function which ultimately returns the registration function as the\n * Tiny.AddOnManager.Add() function does not support async functions.\n *\n * @returns {function} The registration function to call within the Plugin.add function.\n */\nexport const getSetup = async() => {\n\tconst [buttonImage, buttonDeleteImage, buttonTitle, deleteButtonTitle,] = await Promise.all([\n\t\tgetButtonImage('icon', component),\n\t\tgetButtonImage('icon2', component),\n\t\tawait getString('title', 'tiny_hotwords'),\n\t\tawait getString('deletetitle', 'tiny_hotwords')\n\t]);\n\treturn (editor) => {\n\t\t// Register the Moodle SVG as an icon suitable for use as a TinyMCE toolbar button.\n\t\teditor.ui.registry.addIcon('icon', buttonImage.html);\n\t\teditor.ui.registry.addButton(hotwordsButtonName, {\n\t\t\ticon: 'icon', tooltip: buttonTitle, onAction: () => handleAction(editor),\n\t\t});\n\n\t\teditor.ui.registry.addIcon('icon2', buttonDeleteImage.html);\n\t\teditor.ui.registry.addButton(hotwordsDeleteName, {\n\t\t\ticon: 'icon2', tooltip: deleteButtonTitle, onAction: () => unlink(editor),\n\t\t});\n\t};\n};\n"],"names":["setHotwords","async","editor","urlText","value","selectednode","isExpanded","textToDisplay","focus","selection","isCollapsed","replace","trim","timecreated","Date","getTime","isUpdatingOnlyLink","getNode","dataset","toggle","execCommand","Array","from","dom","select","find","node","getAttribute","toString","innerText","setAttribute","hotwords","document","createElement","setNode","buttonImage","buttonDeleteImage","buttonTitle","deleteButtonTitle","Promise","all","component","ui","registry","addIcon","html","addButton","hotwordsButtonName","icon","tooltip","onAction","currentSelection","getContent","format","selectionnode","getParent","prevcontent","text","match","result","textarea","innerHTML","modal","Modal","create","title","body","Templates","render","getRoot","css","show","on","ModalEvents","hidden","destroy","loadFragment","Options","getContextId","contextId","existingcode","urltext","_selectionnode","done","js","replaceNodeContents","console","log","querySelector","addEventListener","e","preventDefault","linktext","call","methodname","args","content","response","messages","remove","fail","Notification","exception","handleAction","hotwordsDeleteName","nodeChanged","unlink"],"mappings":"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"}