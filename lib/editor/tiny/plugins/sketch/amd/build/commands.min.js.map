{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Sketch commands.\n *\n * @module      tiny_sketch/commands\n * @copyright   2023 Matt Davidson <davidso1@rose-hulman.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {component, buttonName, icon} from 'tiny_sketch/common';\nimport {SketchEmbed} from 'tiny_sketch/embed';\n\nexport const getSetup = async() => {\n    const isImage = (node) => node.nodeName.toLowerCase() === 'img';\n\n    const [\n        buttonText,\n        buttonImage,\n    ] = await Promise.all([\n        getString('pluginname', component),\n        getButtonImage('icon', component),\n    ]);\n\n    const handleSketchAction = (editor) => {\n        const sketchImage = new SketchEmbed(editor);\n        sketchImage.displayDialogue();\n    };\n\n    // Note: The function returned here must be synchronous and cannot use promises.\n    // All promises must be resolved prior to returning the function.\n    return (editor) => {\n        // Register the Icon.\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        // Register the Menu Button as a toggle.\n        // This means that when highlighted over an existing image element it will show as toggled on.\n        editor.ui.registry.addToggleButton(buttonName, {\n            icon,\n            tooltip: buttonText,\n            onAction: () => handleSketchAction(editor),\n            onSetup: api => {\n                return editor.selection.selectorChangedWithUnbind(\n                    'img:not([data-mce-object]):not([data-mce-placeholder]),figure.image',\n                    api.setActive\n                ).unbind;\n            }\n        });\n\n        // Add the Sketch Menu Item.\n        // This allows it to be added to a standard menu, or a context menu.\n        editor.ui.registry.addMenuItem(buttonName, {\n            icon,\n            text: buttonText,\n            onAction: () => handleSketchAction(editor),\n        });\n\n        editor.ui.registry.addContextToolbar(buttonName, {\n            predicate: isImage,\n            items: buttonName,\n            position: 'node',\n            scope: 'node'\n        });\n\n        editor.ui.registry.addContextMenu(buttonName, {\n            update: () =>  '',\n        });\n    };\n};\n"],"names":["async","isImage","node","nodeName","toLowerCase","buttonText","buttonImage","Promise","all","component","handleSketchAction","editor","SketchEmbed","displayDialogue","ui","registry","addIcon","icon","html","addToggleButton","buttonName","tooltip","onAction","onSetup","api","selection","selectorChangedWithUnbind","setActive","unbind","addMenuItem","text","addContextToolbar","predicate","items","position","scope","addContextMenu","update"],"mappings":"oQA4BwBA,gBACdC,QAAWC,MAAyC,QAAhCA,KAAKC,SAASC,eAGpCC,WACAC,mBACMC,QAAQC,IAAI,EAClB,mBAAU,aAAcC,oBACxB,yBAAe,OAAQA,qBAGrBC,mBAAsBC,SACJ,IAAIC,mBAAYD,QACxBE,0BAKRF,SAEJA,OAAOG,GAAGC,SAASC,QAAQC,aAAMX,YAAYY,MAI7CP,OAAOG,GAAGC,SAASI,gBAAgBC,mBAAY,CAC3CH,KAAAA,aACAI,QAAShB,WACTiB,SAAU,IAAMZ,mBAAmBC,QACnCY,QAASC,KACEb,OAAOc,UAAUC,0BACpB,sEACAF,IAAIG,WACNC,SAMVjB,OAAOG,GAAGC,SAASc,YAAYT,mBAAY,CACvCH,KAAAA,aACAa,KAAMzB,WACNiB,SAAU,IAAMZ,mBAAmBC,UAGvCA,OAAOG,GAAGC,SAASgB,kBAAkBX,mBAAY,CAC7CY,UAAW/B,QACXgC,MAAOb,mBACPc,SAAU,OACVC,MAAO,SAGXxB,OAAOG,GAAGC,SAASqB,eAAehB,mBAAY,CAC1CiB,OAAQ,IAAO"}