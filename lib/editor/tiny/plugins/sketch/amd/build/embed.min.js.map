{"version":3,"file":"embed.min.js","sources":["../src/embed.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Sketch plugin Embed class for Moodle.\n *\n * @module      tiny_sketch/embed\n * @copyright   2023 Matt Davidson <davidso1@rose-hulman.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport * as ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport * as Modal from 'core/modal_factory';\nimport Config from 'core/config';\n\nexport const SketchEmbed = class {\n    editor = null;\n    canShowFilePicker = false;\n\n    /**\n     * @property {Object} The names of the alignment options.\n     */\n    helpStrings = null;\n\n    /**\n     * @property {boolean} Indicate that the user is updating the media or not.\n     */\n    isUpdating = false;\n\n    constructor(editor) {\n        this.editor = editor;\n    }\n\n    async displayDialogue() {\n        Modal.create({\n            type: Modal.types.DEFAULT,\n            title: getString('sketchtitle', 'tiny_sketch'),\n            body: Templates.render('tiny_sketch/sketch_iframe', {\n                src: this.getIframeURL()\n            })\n        }).then(modal => {\n            modal.getRoot().on(ModalEvents.hidden, () => {\n                modal.destroy();\n            });\n            modal.show();\n            document.querySelector('.modal-dialog').style.cssText = \"max-width: unset;width:100%;height:100vh;margin:0;padding:0;\";\n            document.querySelector('.modal-content').style.cssText = \"max-height: unset;height:100vh;\";\n            document.querySelector('.modal-body').style.cssText = \"padding:0\";\n            return modal;\n        }).catch();\n    }\n\n    getIframeURL = () => {\n        const url = new URL(`${Config.wwwroot}/lib/editor/tiny/plugins/sketch/miniPaint/sketch.html`);\n        return url.toString();\n    };\n};\n"],"names":["editor","canShowFilePicker","helpStrings","isUpdating","constructor","Modal","create","type","types","DEFAULT","title","body","Templates","render","src","this","getIframeURL","then","modal","getRoot","on","ModalEvents","hidden","destroy","show","document","querySelector","style","cssText","catch","URL","Config","wwwroot","toString"],"mappings":";;;;;;;0RA6B2B,MACvBA,OAAS,KACTC,mBAAoB,EAKpBC,YAAc,KAKdC,YAAa,EAEbC,YAAYJ,aACHA,OAASA,+BAIdK,MAAMC,OAAO,CACTC,KAAMF,MAAMG,MAAMC,QAClBC,OAAO,mBAAU,cAAe,eAChCC,KAAMC,mBAAUC,OAAO,4BAA6B,CAChDC,IAAKC,KAAKC,mBAEfC,MAAKC,QACJA,MAAMC,UAAUC,GAAGC,YAAYC,QAAQ,KACnCJ,MAAMK,aAEVL,MAAMM,OACNC,SAASC,cAAc,iBAAiBC,MAAMC,QAAU,+DACxDH,SAASC,cAAc,kBAAkBC,MAAMC,QAAU,kCACzDH,SAASC,cAAc,eAAeC,MAAMC,QAAU,YAC/CV,SACRW,QAGPb,aAAe,IACC,IAAIc,IAAK,GAAEC,gBAAOC,gEACnBC"}