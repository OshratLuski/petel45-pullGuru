define("tiny_sketch/commands",["exports","core/str","editor_tiny/utils","tiny_sketch/common","tiny_sketch/embed"],(function(_exports,_str,_utils,_common,_embed){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0;_exports.getSetup=async()=>{const isImage=node=>"img"===node.nodeName.toLowerCase(),[buttonText,buttonImage]=await Promise.all([(0,_str.get_string)("pluginname",_common.component),(0,_utils.getButtonImage)("icon",_common.component)]),handleSketchAction=editor=>{new _embed.SketchEmbed(editor).displayDialogue()};return editor=>{editor.ui.registry.addIcon(_common.icon,buttonImage.html),editor.ui.registry.addToggleButton(_common.buttonName,{icon:_common.icon,tooltip:buttonText,onAction:()=>handleSketchAction(editor),onSetup:api=>editor.selection.selectorChangedWithUnbind("img:not([data-mce-object]):not([data-mce-placeholder]),figure.image",api.setActive).unbind}),editor.ui.registry.addMenuItem(_common.buttonName,{icon:_common.icon,text:buttonText,onAction:()=>handleSketchAction(editor)}),editor.ui.registry.addContextToolbar(_common.buttonName,{predicate:isImage,items:_common.buttonName,position:"node",scope:"node"}),editor.ui.registry.addContextMenu(_common.buttonName,{update:()=>""})}}}));

//# sourceMappingURL=commands.min.js.map