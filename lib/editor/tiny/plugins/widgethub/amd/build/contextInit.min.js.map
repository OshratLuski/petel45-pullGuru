{"version":3,"file":"contextInit.min.js","sources":["../src/contextInit.js"],"sourcesContent":["/* eslint-disable max-len */\r\n// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport {getWidgetDict} from './options';\r\nimport jQuery from \"jquery\";\r\nimport {getDomSrv} from './service/dom_service';\r\nimport {getWidgetPropertiesCtrl} from './controller/widgetproperties_ctrl';\r\nimport {getMenuItemProviders, getListeners} from './extension';\r\n// eslint-disable-next-line camelcase\r\nimport {get_strings} from 'core/str';\r\n\r\n/**\r\n * Tiny WidgetHub plugin.\r\n *\r\n * @module      tiny_widgethub/plugin\r\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/**\r\n * Defines the type PathResult\r\n * @typedef {Object} PathResult\r\n * @property {JQuery<HTMLElement>} selectedElement - The DOM element from which the search starts.\r\n * @property {JQuery<HTMLElement>} [elem] - Indicates the element corresponding to the selector of the widget found\r\n * @property {JQuery<HTMLElement>} [targetElement] - Indicates the element corresponding the intermediate selector\r\n * @property {import('./options').Widget=} widget - The current widget definition associated with the elem\r\n */\r\n\r\n/**\r\n * @typedef {Object} ICONS\r\n * @property {string} gear\r\n * @property {string} arrowUpFromBracket\r\n * @property {string} arrowUp\r\n * @property {string} arrowDown\r\n * @property {string} arrowLeft\r\n * @property {string} arrowRight\r\n * @property {string} remove\r\n * @property {string} clone\r\n */\r\nconst ICONS = {\r\n    gear: 'gear',\r\n    arrowUpFromBracket: 'arrow-up-from-bracket',\r\n    arrowUp: 'arrow-up',\r\n    arrowDown: 'arrow-down',\r\n    arrowLeft: 'arrow-left',\r\n    arrowRight: 'arrow-right',\r\n    remove: 'remove',\r\n    clone: 'clone'\r\n};\r\n\r\n/**\r\n * Define icons used by the context menus. Source: FontAwesome 6\r\n * <!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->\r\n * @param {import(\"./plugin\").TinyMCE} editor - The tinyMCE editor instance\r\n */\r\nconst defineIcons = function(editor) {\r\n    editor.ui.registry.addIcon(ICONS.gear, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 512 512\"><path d=\"M495.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-43.3 39.4c1.1 8.3 1.7 16.8 1.7 25.4s-.6 17.1-1.7 25.4l43.3 39.4c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-55.7-17.7c-13.4 10.3-28.2 18.9-44 25.4l-12.5 57.1c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-12.5-57.1c-15.8-6.5-30.6-15.1-44-25.4L83.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l43.3-39.4C64.6 273.1 64 264.6 64 256s.6-17.1 1.7-25.4L22.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l55.7 17.7c13.4-10.3 28.2-18.9 44-25.4l12.5-57.1c2-9.1 9-16.3 18.2-17.8C227.3 1.2 241.5 0 256 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l12.5 57.1c15.8 6.5 30.6 15.1 44 25.4l55.7-17.7c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM256 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z\"/></svg>');\r\n    editor.ui.registry.addIcon(ICONS.arrowUpFromBracket, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 448 512\"><path d=\"M246.6 9.4c-12.5-12.5-32.8-12.5-45.3 0l-128 128c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 109.3 192 320c0 17.7 14.3 32 32 32s32-14.3 32-32l0-210.7 73.4 73.4c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-128-128zM64 352c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 64c0 53 43 96 96 96l256 0c53 0 96-43 96-96l0-64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 64c0 17.7-14.3 32-32 32L96 448c-17.7 0-32-14.3-32-32l0-64z\"/></svg>');\r\n    editor.ui.registry.addIcon(ICONS.arrowUp, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 384 512\"><path d=\"M214.6 41.4c-12.5-12.5-32.8-12.5-45.3 0l-160 160c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 141.2 160 448c0 17.7 14.3 32 32 32s32-14.3 32-32l0-306.7L329.4 246.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-160-160z\"/></svg>');\r\n    editor.ui.registry.addIcon(ICONS.arrowDown, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 384 512\"><path d=\"M169.4 470.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 370.8 224 64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 306.7L54.6 265.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\"/></svg>');\r\n    editor.ui.registry.addIcon(ICONS.arrowLeft, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 448 512\"><path d=\"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z\"/></svg>');\r\n    editor.ui.registry.addIcon(ICONS.arrowRight, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 448 512\"><path d=\"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\"/></svg>');\r\n    editor.ui.registry.addIcon(ICONS.clone, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 512 512\"><path d=\"M64 464l224 0c8.8 0 16-7.2 16-16l0-64 48 0 0 64c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 224c0-35.3 28.7-64 64-64l64 0 0 48-64 0c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16zM224 304l224 0c8.8 0 16-7.2 16-16l0-224c0-8.8-7.2-16-16-16L224 48c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16zm-64-16l0-224c0-35.3 28.7-64 64-64L448 0c35.3 0 64 28.7 64 64l0 224c0 35.3-28.7 64-64 64l-224 0c-35.3 0-64-28.7-64-64z\"/></svg>');\r\n};\r\n\r\n/**\r\n * @param {import('./options').Widget} widget\r\n * @returns {boolean}\r\n */\r\nfunction hasBindings(widget) {\r\n    return widget.parameters?.some(param => param.bind !== undefined);\r\n}\r\n\r\n/**\r\n * Decides if a widget needs some kind of context menu or toolbar\r\n * @param {import('./options').Widget} widget - The widget\r\n * @returns {boolean}\r\n */\r\nconst needsContextMenu = function(widget) {\r\n    return widget.hasBindings() || (widget.unwrap ?? '').trim().length > 0;\r\n};\r\n\r\n/**\r\n * @param {string | RegExp | (() => boolean) | undefined} condition\r\n * @param {string} key\r\n * @returns {boolean}\r\n */\r\nconst matchesCondition = function(condition, key) {\r\n    if (typeof condition === 'string') {\r\n        return condition.split(',').map(e => e.trim()).includes(key);\r\n    } else if (condition instanceof RegExp) {\r\n        return condition.test(key);\r\n    } else if (typeof condition === 'function') {\r\n        return condition();\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * @param {import('./plugin').TinyMCE} editor\r\n * @param {import('./service/dom_service').DomSrv} domSrv\r\n */\r\nconst predefinedActionsFactory = function(editor, domSrv) {\r\n    /** @type {Record<string, Function>} */\r\n    return ({\r\n        /**\r\n         * Unwraps or destroys the contents of a widget\r\n         * @param {PathResult} context\r\n         */\r\n        unwrap: (context) => {\r\n            if (!context?.elem || !context?.widget?.unwrap) {\r\n                return;\r\n            }\r\n            /** @type {JQuery<HTMLElement> | string} */\r\n            let toUnpack = context.elem.find(context.widget.unwrap);\r\n            if (!toUnpack[0]) {\r\n                // Create a text element\r\n                toUnpack = context.elem.text();\r\n            }\r\n            context.elem.replaceWith(toUnpack);\r\n            // Call any subscribers\r\n            getListeners('widgetRemoved').forEach(listener => listener(editor, context.widget));\r\n        },\r\n        /**\r\n         * Moves the selected element above in the parent container\r\n         * unless it is the first one\r\n         * Only on tabbed widgets!\r\n         * If $e or any of its descendants references another element in\r\n         * the widget, then it also must be moved before its sibling\r\n         * @param {PathResult} context\r\n         */\r\n        movebefore: (context) => {\r\n            const $e = context?.targetElement;\r\n            const $root = context?.elem;\r\n            if (!$e || !$root) {\r\n                return;\r\n            }\r\n            const prev = $e.prev();\r\n            if (prev) {\r\n                prev.insertAfter($e);\r\n                if (prev.closest(\".nav\").length) {\r\n                    domSrv.findReferences($e, $root).forEach($ref => {\r\n                        const prev2 = $ref.prev();\r\n                        if (prev2) {\r\n                            prev2.insertAfter($ref);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Moves the selected element above in the parent container\r\n         * unless it is the first one\r\n         * Only on tabbed widgets!\r\n         * If $e or any of its descendants references another element in\r\n         * the widget, then it also must be moved after its sibling\r\n         * @param {PathResult} context\r\n         */\r\n        moveafter: (context) => {\r\n            const $e = context?.targetElement;\r\n            const $root = context?.elem;\r\n            if (!$e || !$root) {\r\n                return;\r\n            }\r\n            const next = $e.next();\r\n            if (next) {\r\n                next.insertBefore($e);\r\n                if (next.closest(\".nav\").length) {\r\n                    domSrv.findReferences($e, $root).forEach($ref => {\r\n                        const next2 = $ref.next();\r\n                        if (next2) {\r\n                            next2.insertBefore($ref);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Inserts a clone of the selected element after it\r\n         * @param {PathResult} context\r\n         */\r\n        insertafter: (context) => {\r\n            const $e = context?.targetElement;\r\n            const $root = context?.elem;\r\n            if (!$e || !$root) {\r\n                return;\r\n            }\r\n            /** @type {Record<string, string>} */\r\n            const idMap = {};\r\n            const clone = domSrv.smartClone($e, $root, idMap);\r\n            clone.insertAfter($e).removeClass(\"active show\");\r\n        },\r\n        /**\r\n         * Removes the selected element\r\n         * @param {PathResult} context\r\n         */\r\n        remove: (context) => {\r\n            const $e = context?.targetElement;\r\n            const $root = context?.elem;\r\n            if (!$e || !$root) {\r\n                return;\r\n            }\r\n            // Does the $e or its descendants reference another element in the widget?\r\n            // If so, it must be removed too\r\n            domSrv.findReferences($e, $root).forEach($ref => $ref.remove());\r\n            const $parent = $e.parent();\r\n            $e.remove();\r\n            if ($parent.children().length === 0) {\r\n                // Good candidate to remove the entire widget\r\n                $root.remove();\r\n            }\r\n        },\r\n        /**\r\n         * Toggles a snippet as printable or not\r\n         * @param {PathResult} context\r\n         */\r\n        printable: (context) => {\r\n            const elem = context?.elem;\r\n            if (!elem) {\r\n                return;\r\n            }\r\n            elem.toggleClass('d-print-none');\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * @typedef {{editor: import('./plugin').TinyMCE, path?: PathResult, jQuery: JQueryStatic}} ItemMenuContext\r\n */\r\n\r\n/**\r\n * Looks for widgets that need to display context toolbars or menus\r\n * and binds the corresponding actions.\r\n * @param {import(\"./plugin\").TinyMCE} editor\r\n */\r\nexport async function initContextActions(editor) {\r\n    // Setup context shared by the entire structure of menus\r\n    /**\r\n     * Keep track of the last context found\r\n     * @type {ItemMenuContext}\r\n     */\r\n    const ctx = {\r\n        editor: editor,\r\n        jQuery\r\n    };\r\n\r\n    // Define icons\r\n    defineIcons(editor);\r\n\r\n    // Get translations\r\n    const component = 'tiny_widgethub';\r\n    const [\r\n        strProperties, strUnwrap, strMoveUp, strMoveDown, strMoveAfter, strMoveBefore,\r\n        strInsert, strRemove, strPrintable\r\n    ] = await get_strings([\r\n        {key: 'properties', component},\r\n        {key: 'unwrap', component},\r\n        {key: 'moveup', component},\r\n        {key: 'movedown', component},\r\n        {key: 'moveafter', component},\r\n        {key: 'movebefore', component},\r\n        {key: 'insert', component},\r\n        {key: 'remove', component},\r\n        {key: 'printable', component}\r\n    ]);\r\n\r\n    const widgetList = Object.values(getWidgetDict(editor));\r\n    const domSrv = getDomSrv();\r\n\r\n    /** @type {Record<string, Function>} */\r\n    const predefinedActions = predefinedActionsFactory(editor, domSrv);\r\n\r\n    const showPropertiesAction = async() => {\r\n        const path = domSrv.findWidgetOnEventPath(widgetList, editor.selection.getNode());\r\n        ctx.path = path;\r\n        if (!path.widget) {\r\n            return;\r\n        }\r\n        // Display modal dialog on this context\r\n        const widgetPropertiesCtrl = getWidgetPropertiesCtrl(editor);\r\n        await widgetPropertiesCtrl.show(path);\r\n    };\r\n\r\n    // Generic button action for opening the properties modal\r\n    editor.ui.registry.addButton('widgethub_modal_btn', {\r\n        icon: ICONS.gear,\r\n        tooltip: strProperties,\r\n        onAction: showPropertiesAction\r\n    });\r\n    editor.ui.registry.addMenuItem('widgethub_modal_item', {\r\n        icon: ICONS.gear,\r\n        text: strProperties,\r\n        onAction: showPropertiesAction\r\n    });\r\n\r\n    /**\r\n     * Defines a generic action\r\n     * @param {string} name\r\n     */\r\n    function genericAction(name) {\r\n        return function() {\r\n            if (!ctx.path?.widget) {\r\n                ctx.path = domSrv.findWidgetOnEventPath(widgetList, editor.selection.getNode());\r\n                if (!ctx.path?.widget) {\r\n                    return;\r\n                }\r\n            }\r\n            const action = predefinedActions[name];\r\n            if (action) {\r\n                action(ctx.path);\r\n                // Call any subscriber\r\n                getListeners('ctxAction').forEach(listener => listener(editor, ctx.path?.widget));\r\n            }\r\n        };\r\n    }\r\n\r\n    // Generic button action for unwrapping those widgets that support this feature\r\n    editor.ui.registry.addButton('widgethub_unwrap_btn', {\r\n        icon: ICONS.arrowUpFromBracket,\r\n        tooltip: strUnwrap,\r\n        onAction: genericAction('unwrap')\r\n    });\r\n    editor.ui.registry.addMenuItem('widgethub_unwrap_item', {\r\n        icon: ICONS.arrowUpFromBracket,\r\n        text: strUnwrap,\r\n        onAction: genericAction('unwrap')\r\n    });\r\n    editor.ui.registry.addMenuItem('widgethub_moveup_item', {\r\n        icon: ICONS.arrowUp,\r\n        text: strMoveUp,\r\n        onAction: genericAction('movebefore')\r\n    });\r\n    editor.ui.registry.addMenuItem('widgethub_movedown_item', {\r\n        icon: ICONS.arrowDown,\r\n        text: strMoveDown,\r\n        onAction: genericAction('moveafter')\r\n    });\r\n    editor.ui.registry.addMenuItem('widgethub_moveleft_item', {\r\n        icon: ICONS.arrowLeft,\r\n        text: strMoveBefore,\r\n        onAction: genericAction('movebefore')\r\n    });\r\n    editor.ui.registry.addMenuItem('widgethub_moveright_item', {\r\n        icon: ICONS.arrowRight,\r\n        text: strMoveAfter,\r\n        onAction: genericAction('moveafter')\r\n    });\r\n    editor.ui.registry.addMenuItem('widgethub_insertafter_item', {\r\n        icon: ICONS.clone,\r\n        text: strInsert,\r\n        onAction: genericAction('insertafter')\r\n    });\r\n    editor.ui.registry.addMenuItem('widgethub_remove_item', {\r\n        icon: ICONS.remove,\r\n        text: strRemove,\r\n        onAction: genericAction('remove')\r\n    });\r\n    editor.ui.registry.addToggleMenuItem('widgethub_printable_item', {\r\n        icon: 'print',\r\n        text: strPrintable,\r\n        onAction: genericAction('printable'),\r\n        onSetup: (/** @type {*} */ api) => {\r\n            let toggleState = true;\r\n            if (ctx.path?.elem?.hasClass('d-print-none')) {\r\n                toggleState = false;\r\n            }\r\n            api.setActive(toggleState);\r\n            return () => ({});\r\n        }\r\n    });\r\n\r\n    // Let extensions to register additional menuItem and nestedMenuItem\r\n    /** @type {import('./extension').UserDefinedItem[]} */\r\n    const widgetsWithExtensions = getMenuItemProviders().flatMap(provider => provider(ctx));\r\n    widgetsWithExtensions.forEach(menuItem => {\r\n        if (menuItem.subMenuItems) {\r\n                // It is a nested menu.\r\n                editor.ui.registry.addNestedMenuItem(`widgethub_${menuItem.name}`, {\r\n                    icon: menuItem.icon,\r\n                    text: menuItem.title,\r\n                    getSubmenuItems: menuItem.subMenuItems\r\n                });\r\n            } else if (menuItem.onAction) {\r\n                // It is a simple menu item.\r\n                editor.ui.registry.addMenuItem(`widgethub_${menuItem.name}`, {\r\n                    icon: menuItem.icon,\r\n                    text: menuItem.title,\r\n                    onAction: menuItem.onAction\r\n                });\r\n            }\r\n    });\r\n\r\n    editor.ui.registry.addContextMenu('tiny_widgethub', {\r\n        /** @param {HTMLElement} element */\r\n        update: (element) => {\r\n            // Look for a context\r\n            ctx.path = domSrv.findWidgetOnEventPath(widgetList, element);\r\n            if (!ctx.path?.widget || ctx.path.widget.prop(\"contexttoolbar\")) {\r\n                // Widget not found in the searchPath or it must be displayed as toolbar\r\n                return '';\r\n            }\r\n            const widget = ctx.path.widget;\r\n            let menuItems = [];\r\n            if (hasBindings(widget)) {\r\n                menuItems.push('modal');\r\n            }\r\n            // Now look for contextmenu property in widget definition\r\n            /** @type {{predicate: string, actions: string}[] | undefined} */\r\n            let contextmenu = widget.prop(\"contextmenu\");\r\n            if (contextmenu) {\r\n                if (!Array.isArray(contextmenu)) {\r\n                    contextmenu = [contextmenu];\r\n                }\r\n                contextmenu.forEach(cm => {\r\n                    // Does the element matches the predicate?\r\n                    /** @type {HTMLElement | null} */\r\n                    let targetElem = null;\r\n                    // If predicate is unset then use the widget root elem\r\n                    if (!cm.predicate) {\r\n                        targetElem = ctx.path?.elem?.[0] ?? null;\r\n                    } else if (element.matches(cm.predicate)) {\r\n                        targetElem = element;\r\n                    } else {\r\n                        targetElem = element.closest(cm.predicate);\r\n                    }\r\n                    if (!targetElem) {\r\n                        return;\r\n                    }\r\n                    if (ctx.path) {\r\n                        ctx.path.targetElement = jQuery(targetElem);\r\n                    }\r\n                    menuItems.push(...cm.actions.split(' ').map(e => e.trim()));\r\n                });\r\n            }\r\n            menuItems = menuItems.map(e => e === '|' ? '|' : `widgethub_${e}_item`);\r\n            // Check if the current widget has any action registered by extensions\r\n            const actionNames = widgetsWithExtensions\r\n                .filter(e => matchesCondition(e.condition, widget.key))\r\n                .map(e => `widgethub_${e.name}`);\r\n            menuItems.push(...actionNames);\r\n\r\n            // Unwrap action always to the end\r\n            if (widget.unwrap) {\r\n                menuItems.push('widgethub_unwrap_item');\r\n            }\r\n            return menuItems.join(' ');\r\n        }\r\n    });\r\n\r\n    // Look for widgets that need context toolbar\r\n    widgetList.filter(widget => needsContextMenu(widget)).forEach(widget => {\r\n        const items = [];\r\n        if (hasBindings(widget)) {\r\n            items.push('modal');\r\n        }\r\n        if (widget.unwrap) {\r\n            items.push('unwrap');\r\n        }\r\n        if (widget.prop(\"contexttoolbar\")) {\r\n            editor.ui.registry.addContextToolbar(`widgethub_ctb_${widget.key}`, {\r\n                /** @param {HTMLElement} node */\r\n                predicate: function(node) {\r\n                    return domSrv.matchesSelectors(node, widget.selectors);\r\n                },\r\n                items: items.map(e => `widgethub_${e}_btn`).join(' '),\r\n                position: 'node'\r\n            });\r\n        }\r\n    });\r\n}\r\n"],"names":["e","async","editor","ctx","jQuery","defineIcons","component","strProperties","strUnwrap","strMoveUp","strMoveDown","strMoveAfter","strMoveBefore","strInsert","strRemove","strPrintable","get_strings","key","widgetList","Object","values","getWidgetDict","domSrv","getDomSrv","predefinedActions","predefinedActionsFactory","showPropertiesAction","path","findWidgetOnEventPath","selection","getNode","widget","widgetPropertiesCtrl","getWidgetPropertiesCtrl","show","genericAction","name","_ctx$path","_ctx$path2","action","getListeners","forEach","listener","_ctx$path3","ui","registry","addButton","icon","ICONS","gear","tooltip","onAction","addMenuItem","text","arrowUpFromBracket","arrowUp","arrowDown","arrowLeft","arrowRight","clone","remove","addToggleMenuItem","onSetup","api","_ctx$path4","_ctx$path4$elem","toggleState","elem","hasClass","setActive","widgetsWithExtensions","getMenuItemProviders","flatMap","provider","menuItem","subMenuItems","addNestedMenuItem","title","getSubmenuItems","addContextMenu","update","element","_ctx$path5","prop","menuItems","hasBindings","push","contextmenu","Array","isArray","cm","targetElem","_ctx$path6","_ctx$path6$elem","predicate","matches","closest","targetElement","actions","split","map","trim","actionNames","filter","matchesCondition","condition","unwrap","join","needsContextMenu","items","addContextToolbar","node","matchesSelectors","selectors","position","_jquery","__esModule","default","addIcon","_widget$parameters","parameters","some","param","undefined","bind","length","includes","RegExp","test","context","_context$widget","toUnpack","find","replaceWith","movebefore","$e","$root","prev","insertAfter","findReferences","$ref","prev2","moveafter","next","insertBefore","next2","insertafter","smartClone","removeClass","$parent","parent","children","printable","toggleClass"],"mappings":"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"}