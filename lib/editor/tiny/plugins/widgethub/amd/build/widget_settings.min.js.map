{"version":3,"file":"widget_settings.min.js","sources":["../src/widget_settings.js"],"sourcesContent":["/* eslint-disable no-console */\r\n/* eslint-disable no-alert */\r\n// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny WidgetHub plugin.\r\n *\r\n * @module      tiny_widgethub/plugin\r\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport jQuery from 'jquery';\r\nimport YmlEditor from './libs/ymleditor-lazy';\r\nimport {load, dump} from './libs/js_yaml-lazy';\r\n// eslint-disable-next-line camelcase\r\nimport {get_strings as getStrings, get_string} from 'core/str';\r\nimport {getTemplateSrv} from './service/template_service';\r\nimport {applyPartials} from './options';\r\n\r\nconst templateSrv = getTemplateSrv();\r\nconst DEFAULT_DOC =\r\n`key: minimal-sample-key\r\nname: Minimal sample widget\r\ncategory: Examples\r\ntemplate: |\r\n  <p><br></p>\r\n  <p>Write your template {{greeting}}</p>\r\n  <p><br></p>\r\nparameters:\r\n  - name: greeting\r\n    value: Hello world!\r\nauthor: Your name <email@site.com>\r\nversion: 1.0.0`;\r\n\r\n/**\r\n * @class\r\n * @member {any[]} presetdata\r\n * */\r\nexport default {\r\n    /**\r\n     * @param {number} id\r\n     * @returns {{\r\n     *     $ymlArea: JQuery<HTMLTextAreaElement>,\r\n     *     $jsonArea: JQuery<HTMLTextAreaElement>,\r\n     *     $partialInput: JQuery<HTMLInputElement>,\r\n     * }}\r\n     */\r\n    getAreas: function(id) {\r\n        /** @type {*} */\r\n        const $ymlArea = jQuery(`#id_s_tiny_widgethub_defyml_${id}`);\r\n        /** @type {*} */\r\n        const $jsonArea = jQuery(`#id_s_tiny_widgethub_def_${id}`);\r\n        /** @type {*} */\r\n        const $partialInput = jQuery(`#id_s_tiny_widgethub_partials_${id}`);\r\n        return {\r\n            $ymlArea, $jsonArea, $partialInput\r\n        };\r\n    },\r\n    /**\r\n     * @param {number} id\r\n     * @param {*} codeProEditor\r\n     * @returns\r\n     */\r\n    updateYaml: function(id, codeProEditor) {\r\n        const {$jsonArea} = this.getAreas(id);\r\n        const json = (($jsonArea.val() ?? '') + '').trim();\r\n        if (!json) {\r\n            if (id) {\r\n                codeProEditor.setValue('');\r\n            } else {\r\n                codeProEditor.setValue(DEFAULT_DOC);\r\n            }\r\n            return;\r\n        }\r\n        try {\r\n            const obj = JSON.parse(json);\r\n            const yml = dump(obj, {});\r\n            codeProEditor.setValue(yml);\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            $jsonArea.val('');\r\n            codeProEditor.setValue('');\r\n        }\r\n    },\r\n    /**\r\n     * @param {string} yml\r\n     * @param {{id: number, keys: string[]}} opts\r\n     * @param {Record<string, *>} partials\r\n     * @returns {Promise<{msg: string, json?: string, html?: string}>}\r\n     */\r\n    // eslint-disable-next-line complexity\r\n    validate: async function(yml, opts, partials) {\r\n        /**\r\n         * @type {{\r\n         *     msg: string,\r\n         *     html: string,\r\n         *     json: string | undefined\r\n         * }}\r\n         * */\r\n        const validation = {msg: '', html: '', json: undefined};\r\n        try {\r\n            // Check if the code is a valid Yaml\r\n            /** @type {import('./options').RawWidget} */\r\n            let jsonObj;\r\n            try {\r\n                jsonObj = load(yml, null) ?? {};\r\n            } catch (ex) {\r\n                validation.msg = await get_string('erryaml', 'tiny_widgethub') + ':: ' + ex;\r\n                return validation;\r\n            }\r\n            validation.json = JSON.stringify(jsonObj, null, 0);\r\n\r\n            // Check if the structure is correct\r\n            if (!jsonObj?.key) {\r\n                validation.msg = await get_string('errproprequired', 'tiny_widgethub', \"'key'\") + ' ';\r\n            } else if (jsonObj.key === 'partials') {\r\n                return validation;\r\n            } else if (jsonObj.key !== 'partials') {\r\n                if (!jsonObj.name) {\r\n                    validation.msg += await get_string('errproprequired', 'tiny_widgethub', \"'name'\") + ' ';\r\n                } else if (!(jsonObj.template || jsonObj.filter)) {\r\n                    validation.msg += await get_string('errproprequired', 'tiny_widgethub', \"'template' | 'filter'\") + ' ';\r\n                } else if (jsonObj.template && jsonObj.filter) {\r\n                    validation.msg += await get_string('errpropincompatible', 'tiny_widgethub', \"'template' & 'filter'\") + ' ';\r\n                } else if (!jsonObj.author || !jsonObj.version) {\r\n                    validation.msg += await get_string('errproprequired', 'tiny_widgethub', \"'author' & 'version'\") + ' ';\r\n                }\r\n            }\r\n            // Check for duplicated keys (TODO: also check for key renaming when id > 0)\r\n            if (opts.id === 0 && jsonObj?.key) {\r\n                const keys = opts.keys || [];\r\n                if (keys.includes(jsonObj.key)) {\r\n                    validation.msg += await get_string('errkeyinuse', 'tiny_widgethub', jsonObj.key) + ' ';\r\n                }\r\n            }\r\n            // Handle partials in parameters\r\n            applyPartials(jsonObj, partials);\r\n            // Try to parse the template with the correct renderer\r\n            const translations = jsonObj?.I18n ?? {};\r\n            /** @type {Object.<string, any>} */\r\n            const ctx = {};\r\n            (jsonObj.parameters ?? []).forEach(param => {\r\n                ctx[param.name] = param.value;\r\n            });\r\n            const engine = jsonObj?.engine;\r\n            const html = await templateSrv.render(jsonObj?.template || '', ctx, translations, engine);\r\n            validation.html = html;\r\n        } catch (ex) {\r\n            validation.msg = await get_string('errpreview', 'tiny_widgethub') + ':: ' + ex;\r\n        }\r\n        return validation;\r\n    },\r\n\r\n    /**\r\n     * Load all widgets\r\n     * @param {{id: number, keys: string[]}} opts\r\n     * @returns\r\n     */\r\n    init: async function(opts) {\r\n        const i18n = await getStrings([\r\n            {key: 'confirmdelete', component: 'tiny_widgethub'},\r\n            {key: 'delete', component: 'tiny_widgethub'},\r\n            {key: 'preview', component: 'tiny_widgethub'},\r\n            {key: 'savechanges', component: 'tiny_widgethub'}\r\n        ]);\r\n        const [confirmdeleteStr, deleteStr, previewStr, savechangesStr] = i18n;\r\n\r\n        const {$ymlArea, $jsonArea, $partialInput} = this.getAreas(opts.id);\r\n        $ymlArea.css({\r\n            \"min-height\": \"200px\",\r\n            \"border\": \"1px solid gray\"\r\n        });\r\n        // Partials are passed through a hidden input element\r\n        const partials = JSON.parse($partialInput.val() || '{}');\r\n\r\n        // Hide the control that handles JSON and it is actually saved\r\n        $jsonArea.css(\"display\", \"none\");\r\n        const $target = $jsonArea.parent();\r\n        const $form = $jsonArea.closest(\"form\");\r\n        // Hide any submit button if found\r\n        $form.find('button[type=\"submit\"], input[type=\"submit\"]').hide();\r\n        // Add submit buttons and manually trigger form submit.\r\n        const $formButtons = jQuery(`<div class=\"row\"><div class=\"form-buttons offset-sm-3 col-sm-3\">\r\n            <button type=\"button\" class=\"btn btn-primary form-submit\">${savechangesStr}</button></div></div>`);\r\n        $form.append($formButtons);\r\n        const $saveBtn = $formButtons.find(\"button\");\r\n\r\n        // Create a preview panel\r\n        const $previewPanel = jQuery(`<div id=\"tiny_widgethub_pp_${opts.id}\" class=\"tiny_widgethub-previewpanel d-none\"></div>`);\r\n        $target.append($previewPanel);\r\n\r\n        const $previewBtn = jQuery(`<button type=\"button\" class=\"btn btn-secondary m-1\">\r\n            <i class=\"fas fa fa-magnifying-glass\"></i> ${previewStr}</button>`);\r\n        $previewBtn.on('click', async() => {\r\n            const yml = ymleditor.getValue();\r\n            const validation = await this.validate(yml, opts, partials);\r\n            if (validation.msg) {\r\n                alert(validation.msg);\r\n            } else if (validation.html) {\r\n                $previewPanel.removeClass('d-none');\r\n                $jsonArea.trigger('focusin');\r\n                $jsonArea.val(validation.json ?? '');\r\n                $jsonArea.trigger('change');\r\n                $previewPanel.html(validation.html);\r\n            }\r\n        });\r\n        $target.append($previewBtn);\r\n\r\n        if (opts.id > 0) {\r\n            // Only show delete button on saved widgets (id=0 is reserved for new ones)\r\n            const $deleteBtn = jQuery(`<button type=\"button\" class=\"btn btn-outline-danger m-1\">\r\n                <i class=\"fas fa fa-trash\"></i> ${deleteStr}</button>`);\r\n            $deleteBtn.on('click', async() => {\r\n                // Ask confirmation\r\n                const answer = confirm(confirmdeleteStr);\r\n                if (!answer) {\r\n                    return;\r\n                }\r\n                // Clear all the controls\r\n                $jsonArea.trigger('focusin');\r\n                $jsonArea.val('');\r\n                $jsonArea.trigger('change');\r\n                $ymlArea.val('');\r\n                $previewPanel.html('');\r\n                // Send form by skipping validation\r\n                $form.trigger('submit');\r\n            });\r\n            $target.append($deleteBtn);\r\n        }\r\n\r\n        const ymleditor = new YmlEditor($ymlArea[0]);\r\n\r\n        $saveBtn.on(\"click\",\r\n            async() => {\r\n            // Must update the content from the Yaml control\r\n            const yml = ymleditor.getValue();\r\n            // First validate the definition of the widget\r\n            const validation = await this.validate(yml, opts, partials);\r\n            if (validation.msg) {\r\n                alert(validation.msg);\r\n            } else {\r\n                // Ensure that there is a change in the form value to force\r\n                // the set_updatedcallback to be called\r\n                $jsonArea.trigger('focusin');\r\n                $jsonArea.val((validation.json ?? '') + ' ');\r\n                $jsonArea.trigger('change');\r\n                // Submit form\r\n                $form.trigger('submit');\r\n            }\r\n        });\r\n\r\n        this.updateYaml(opts.id, ymleditor);\r\n    }\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_jquery","_ymleditorLazy","templateSrv","getTemplateSrv","_default","getAreas","id","$ymlArea","jQuery","$jsonArea","$partialInput","updateYaml","codeProEditor","this","json","val","trim","obj","JSON","parse","yml","dump","setValue","ex","console","error","validate","async","opts","partials","validation","msg","html","undefined","_jsonObj","_jsonObj2","_jsonObj3","_jsonObj4","_jsonObj5","jsonObj","load","get_string","stringify","key","name","template","filter","author","version","keys","includes","applyPartials","translations","I18n","ctx","parameters","forEach","param","value","engine","render","init","i18n","getStrings","component","confirmdeleteStr","deleteStr","previewStr","savechangesStr","css","border","$target","parent","$form","closest","find","hide","$formButtons","append","$saveBtn","$previewPanel","$previewBtn","on","ymleditor","getValue","alert","removeClass","trigger","$deleteBtn","confirm","YmlEditor","_exports"],"mappings":"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"}