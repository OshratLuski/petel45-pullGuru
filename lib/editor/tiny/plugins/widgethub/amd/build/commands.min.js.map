{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["/* eslint-disable no-console */\r\n// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny WidgetHub plugin.\r\n *\r\n * @module      tiny_widgethub/plugin\r\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {getButtonImage} from 'editor_tiny/utils';\r\nimport * as coreStr from 'core/str';\r\nimport Common from './common';\r\nimport * as cfg from 'core/config';\r\nimport {initContextActions} from './contextInit';\r\nimport {getAdditionalCss, getGlobalConfig, getWidgetDict, isPluginVisible, Shared, getEditorOptions} from './options';\r\nimport jQuery from \"jquery\";\r\nimport {getWidgetPickCtrl} from './controller/widgetpicker_ctrl';\r\nimport {getListeners} from './extension';\r\nimport {getUserStorage} from './service/userstorage_service';\r\nimport {applyWidgetFilterFactory, findVariableByName, searchComp} from './util';\r\n\r\nexport const getSetup = async() => {\r\n    // Get some translations\r\n    const [widgetNameTitle, buttonImage] = await Promise.all([\r\n        coreStr.get_string('settings', Common.component),\r\n        getButtonImage('icon', Common.component),\r\n    ]);\r\n\r\n    /** @param {import('./plugin').TinyMCE} editor */\r\n    return (editor) => {\r\n        // Check if the option visible is set.\r\n        if (!isPluginVisible(editor)) {\r\n            // No capabilities required.\r\n            return;\r\n        }\r\n        // Check if there is a config option to disable the plugin for the current page.\r\n        /** @type {string[]} */\r\n        const disableOnPages = getGlobalConfig(editor, \"disable.plugin.pages\", \"\").split(\",\");\r\n        if (disableOnPages.includes(Shared.currentScope)) {\r\n            console.warn('WidgetHub plugin is disabled on this page.');\r\n            return;\r\n        }\r\n\r\n        // Register the Icon.\r\n        editor.ui.registry.addIcon(Common.icon, buttonImage.html);\r\n\r\n        const defaultAction = () => {\r\n            const widgetPickCtrl = getWidgetPickCtrl(editor);\r\n            widgetPickCtrl.handleAction();\r\n        };\r\n\r\n        const storage = getUserStorage(editor);\r\n        const widgetsDict = getWidgetDict(editor);\r\n        // Register the Toolbar SplitButton - including recently used widgets\r\n        editor.ui.registry.addSplitButton(Common.component, {\r\n            icon: Common.icon,\r\n            tooltip: widgetNameTitle,\r\n            columns: 1,\r\n            fetch: (/** @type ((items: *[]) => void) */callback) => {\r\n                const items = storage.getRecentUsed().map(e => ({\r\n                    type: 'choiceitem',\r\n                    text: widgetsDict[e.key]?.name,\r\n                    value: e.key\r\n                })).filter(item => item.text !== undefined);\r\n                callback(items);\r\n            },\r\n            onAction: defaultAction,\r\n            onItemAction: (/** @type {*} */ api, /** @type {string} */ key) => {\r\n                const widgetPickCtrl = getWidgetPickCtrl(editor);\r\n                const ctx = storage.getRecentUsed().filter(e => e.key === key)[0].p;\r\n                widgetPickCtrl.handlePickModalAction(widgetsDict[key], true, ctx);\r\n            }\r\n        });\r\n\r\n        // Add the Menu Item.\r\n        // This allows it to be added to a standard menu, or a context menu.\r\n        editor.ui.registry.addMenuItem(Common.component, {\r\n            icon: Common.icon,\r\n            text: widgetNameTitle,\r\n            onAction: defaultAction,\r\n        });\r\n\r\n        const getMatchedWidgets = (/** @type {string} */ pattern) => {\r\n            return Object.values(widgetsDict).filter((w) => searchComp(w.name, pattern));\r\n        };\r\n\r\n        // Add an Autocompleter @<search widget name>.\r\n        const autoCompleteTrigger = getGlobalConfig(editor, 'autocomplete.trigger', '@');\r\n        if (autoCompleteTrigger) {\r\n            editor.ui.registry.addAutocompleter(Common.component + '_autocompleter', {\r\n                trigger: autoCompleteTrigger,\r\n                columns: 1,\r\n                minChars: 3,\r\n                fetch: (/** @type {string}*/ pattern) => {\r\n                        /** @type {{type: string, value: string, text: string}[]} */\r\n                        const results = [];\r\n                        getMatchedWidgets(pattern).forEach((/** @type {import('./options').Widget} */ w) => {\r\n                            const varname = w.prop('autocomplete')?.trim();\r\n                            const param = findVariableByName(varname, w.parameters);\r\n                            if (!param?.options) {\r\n                                results.push({\r\n                                    type: 'autocompleteitem',\r\n                                    value: w.key,\r\n                                    text: w.name\r\n                                });\r\n                            } else {\r\n                                param.options.forEach(opt => {\r\n                                    let value = opt;\r\n                                    let label = opt;\r\n                                    if (typeof opt === 'object') {\r\n                                        value = opt.v;\r\n                                        label = opt.l;\r\n                                    }\r\n                                    results.push({\r\n                                        type: 'autocompleteitem',\r\n                                        value: `${w.key}|${varname}:${value}`,\r\n                                        text: w.name + \" \" + label\r\n                                    });\r\n                                });\r\n                            }\r\n                        });\r\n                        return Promise.resolve(results);\r\n                },\r\n                onAction: (/** @type {*}*/ api, /** @type {Range}*/ rng, /** @type {string}*/ value) => {\r\n                    api.hide();\r\n                    const pair = value.split('|');\r\n                    const key = pair[0].trim();\r\n                    /** @type {Record<string, *>} */\r\n                    const ctx = {};\r\n                    if (pair.length === 2) {\r\n                        const [varname, value] = pair[1].split(\":\");\r\n                        ctx[varname] = value;\r\n                    }\r\n                    editor.selection.setRng(rng);\r\n                    editor.insertContent('');\r\n                    const widgetPickCtrl = getWidgetPickCtrl(editor);\r\n                    widgetPickCtrl.handlePickModalAction(widgetsDict[key], true, ctx);\r\n                }\r\n            });\r\n        }\r\n\r\n        // Initialize context menus, styles and scripts into editor's iframe\r\n        initializer(editor);\r\n    };\r\n};\r\n\r\n/**\r\n * If the user has selected automatic apply of filters on startup, apply them!\r\n * @param {import('./plugin').TinyMCE} editor\r\n */\r\nconst autoFilter = (editor) => {\r\n    const storage = getUserStorage(editor);\r\n    const requiresFilter = storage.getFromLocal(\"startup.filters\", \"\").split(\",\");\r\n\r\n    if (requiresFilter.length > 0) {\r\n        const editorOptions = getEditorOptions(editor);\r\n        const widgetsFound = requiresFilter.map(key => editorOptions.widgetDict[key]).filter(w => w !== undefined);\r\n        const applyWidgetFilter = applyWidgetFilterFactory(editor, coreStr);\r\n\r\n        // Apply the filters and show the result\r\n        widgetsFound.forEach(w => applyWidgetFilter(w.template ?? '', true));\r\n\r\n        // Apply it also on save\r\n        const pageForm = document.querySelector('form.mform');\r\n        if (pageForm && pageForm.querySelector('div[data-fieldtype=\"editor\"]')) {\r\n            pageForm.addEventListener('submit', () => {\r\n                widgetsFound.forEach(w => applyWidgetFilter(w.template ?? '', true));\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Inject styles and scripts into editor's iframe\r\n * @param {import('./plugin').TinyMCE} editor\r\n */\r\nfunction initializer(editor) {\r\n    editor.once('SetContent', () => {\r\n        // Run all subscribers\r\n        autoFilter(editor);\r\n        getListeners('contentSet').forEach(listener => listener(editor));\r\n    });\r\n    // Add the bootstrap, CSS, etc... into the editor's iframe\r\n    editor.on('init', () => {\r\n        // On init editor.dom is ready\r\n        // Inject css all generated by Moodle into the editor's iframe\r\n        // http://localhost:4141/theme/styles.php/boost/1721728984_1/all\r\n        // TODO: Missing themesubrevision\r\n        const subversion = 1;\r\n        // @ts-ignore\r\n        const allCss = `${cfg.wwwroot}/theme/styles.php/${cfg.theme}/${cfg.themerev}_${subversion}/all`;\r\n        editor.dom.loadCSS(allCss);\r\n\r\n        // Inject styles and Javascript into the editor's iframe\r\n        // editor.dom.loadCSS(`${baseUrl}/libs/fontawesome/css/font-awesome.min.css`);\r\n        // Discover the jQuery version\r\n        // @ts-ignore\r\n        const jQueryVersion = jQuery.fn.jquery ?? '3.6.1';\r\n        const scriptJQ = editor.dom.create(\"script\", {src: `https://code.jquery.com/jquery-${jQueryVersion}.min.js`});\r\n        const head = editor.getDoc().querySelector(\"head\");\r\n        scriptJQ.onload = () => {\r\n            // Cannot load BS until JQ is fully loaded on editor's iframe\r\n            // @ts-ignore\r\n            const bsVersion = jQuery.fn.tooltip?.Constructor?.VERSION ?? '4.6.2';\r\n            const scriptBS = editor.dom.create(\"script\",\r\n                {src: `https://cdn.jsdelivr.net/npm/bootstrap@${bsVersion}/dist/js/bootstrap.bundle.min.js`});\r\n            head.appendChild(scriptBS);\r\n\r\n            // Activate popover and tooltips\r\n            scriptBS.onload = () => {\r\n                const scriptInitBS = editor.dom.create(\"script\");\r\n                scriptInitBS.innerHTML = `\r\n                $(document).ready(function() {\r\n                    $('body').tooltip({\r\n                        selector: '[data-toggle=\"tooltip\"]',\r\n                        trigger: 'hover'\r\n                    });\r\n                    $('body').popover({\r\n                        selector: '[data-toggle=\"popover\"]',\r\n                        trigger: 'hover'\r\n                    });\r\n                });`;\r\n                head.appendChild(scriptInitBS);\r\n            };\r\n            // Run all subscribers\r\n            getListeners('onInit').forEach(listener => listener(editor));\r\n\r\n            // Inject css from site Admin\r\n            let adminCss = (getAdditionalCss(editor) ?? '').trim();\r\n            if (adminCss) {\r\n                // Commented URLs are interpreted as loadCss\r\n                const regex = /\\/\\*{2}\\s+(http(s?):\\/\\/.*)\\s+\\*{2}\\//gm;\r\n                adminCss = adminCss.replace(regex, (_, $1) => {\r\n                    editor.dom.loadCSS($1);\r\n                    return '';\r\n                });\r\n                if (adminCss.trim()) {\r\n                    editor.dom.addStyle(adminCss);\r\n                }\r\n            }\r\n\r\n            if (parseInt(getGlobalConfig(editor, 'enable.contextmenu.level', '1')) > 0) {\r\n                // Initialize context toolbars and menus\r\n                initContextActions(editor);\r\n            }\r\n        };\r\n\r\n        head.appendChild(scriptJQ);\r\n    });\r\n}\r\n\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","_interopRequireWildcard","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","coreStr","_common","cfg","_jquery","_exports","getSetup","async","widgetNameTitle","buttonImage","Promise","all","get_string","Common","component","getButtonImage","editor","isPluginVisible","getGlobalConfig","split","includes","Shared","currentScope","console","warn","ui","registry","addIcon","icon","html","defaultAction","getWidgetPickCtrl","handleAction","storage","getUserStorage","widgetsDict","getWidgetDict","addSplitButton","tooltip","columns","fetch","callback","getRecentUsed","map","_widgetsDict$e$key","type","text","key","name","value","filter","item","undefined","onAction","onItemAction","api","widgetPickCtrl","ctx","p","handlePickModalAction","addMenuItem","autoCompleteTrigger","addAutocompleter","trigger","minChars","pattern","results","getMatchedWidgets","values","w","searchComp","forEach","_w$prop","varname","prop","trim","param","findVariableByName","parameters","options","opt","label","v","l","push","resolve","rng","hide","pair","length","selection","setRng","insertContent","once","autoFilter","getListeners","listener","on","subversion","allCss","wwwroot","theme","themerev","dom","loadCSS","jQueryVersion","jQuery","fn","jquery","scriptJQ","create","src","head","getDoc","querySelector","onload","_jQuery$fn$tooltip","_jQuery$fn$tooltip$Co","bsVersion","Constructor","VERSION","scriptBS","appendChild","scriptInitBS","innerHTML","adminCss","getAdditionalCss","regex","replace","_","$1","addStyle","parseInt","initContextActions","initializer","requiresFilter","getFromLocal","editorOptions","getEditorOptions","widgetsFound","widgetDict","applyWidgetFilter","applyWidgetFilterFactory","template","pageForm","document","addEventListener"],"mappings":"wWA8B4B,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA,CAAA,SAAAG,yBAAAH,GAAA,GAAA,mBAAAI,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAD,yBAAA,SAAAH,GAAAA,OAAAA,EAAAM,EAAAD,IAAAL,EAAA,CAAA,SAAAO,wBAAAP,EAAAK,GAAAA,IAAAA,GAAAL,GAAAA,EAAAC,WAAAD,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAE,MAAAA,CAAAA,QAAAF,GAAAM,IAAAA,EAAAH,yBAAAE,GAAA,GAAAC,GAAAA,EAAAE,IAAAR,GAAA,OAAAM,EAAAG,IAAAT,GAAA,IAAAU,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAhB,EAAAgB,GAAAA,YAAAA,GAAAC,CAAAA,EAAAA,eAAAC,KAAAlB,EAAAgB,GAAAG,CAAAA,IAAAA,EAAAP,EAAAC,OAAAE,yBAAAf,EAAAgB,GAAAG,KAAAA,IAAAA,EAAAV,KAAAU,EAAAC,KAAAP,OAAAC,eAAAJ,EAAAM,EAAAG,GAAAT,EAAAM,GAAAhB,EAAAgB,GAAAN,OAAAA,EAAAR,QAAAF,EAAAM,GAAAA,EAAAc,IAAApB,EAAAU,GAAAA;;;;;;;KAAA,kFAL5BW,QAAAd,wBAAAc,SACAC,QAAAvB,uBAAAuB,SACAC,IAAAhB,wBAAAgB,KAGAC,QAAAzB,uBAAAyB,SAiIEC,SAAAC,SA3HsBC,UAEpB,MAAOC,gBAAiBC,mBAAqBC,QAAQC,IAAI,CACrDV,QAAQW,WAAW,WAAYC,QAAM/B,QAACgC,YACtC,EAAAC,OAAAA,gBAAe,OAAQF,QAAM/B,QAACgC,aAIlC,OAAQE,SAEJ,KAAK,EAAAC,SAAAA,iBAAgBD,QAEjB,OAKJ,IADuB,EAAAE,SAAAA,iBAAgBF,OAAQ,uBAAwB,IAAIG,MAAM,KAC9DC,SAASC,gBAAOC,cAE/B,YADAC,QAAQC,KAAK,8CAKjBR,OAAOS,GAAGC,SAASC,QAAQd,QAAM/B,QAAC8C,KAAMnB,YAAYoB,MAEpD,MAAMC,cAAgBA,MACK,EAAAC,mBAAiBA,mBAACf,QAC1BgB,cAAc,EAG3BC,SAAU,EAAAC,qBAAcA,gBAAClB,QACzBmB,aAAc,EAAAC,SAAaA,eAACpB,QAElCA,OAAOS,GAAGC,SAASW,eAAexB,QAAAA,QAAOC,UAAW,CAChDc,KAAMf,QAAM/B,QAAC8C,KACbU,QAAS9B,gBACT+B,QAAS,EACTC,MAA2CC,WAMvCA,SALcR,QAAQS,gBAAgBC,KAAI/D,IAAC,IAAAgE,mBAAA,MAAK,CAC5CC,KAAM,aACNC,KAAwBF,QAApBA,mBAAET,YAAYvD,EAAEmE,YAAdH,IAAkBA,wBAAlBA,EAAAA,mBAAoBI,KAC1BC,MAAOrE,EAAEmE,IACZ,IAAGG,QAAOC,WAAsBC,IAAdD,KAAKL,OACT,EAEnBO,SAAUvB,cACVwB,aAAcA,CAAkBC,IAA2BR,OACvD,MAAMS,gBAAiB,EAAAzB,mBAAiBA,mBAACf,QACnCyC,IAAMxB,QAAQS,gBAAgBQ,QAAOtE,GAAKA,EAAEmE,MAAQA,MAAK,GAAGW,EAClEF,eAAeG,sBAAsBxB,YAAYY,MAAM,EAAMU,IAAI,IAMzEzC,OAAOS,GAAGC,SAASkC,YAAY/C,QAAAA,QAAOC,UAAW,CAC7Cc,KAAMf,QAAM/B,QAAC8C,KACbkB,KAAMtC,gBACN6C,SAAUvB,gBAGd,MAKM+B,qBAAsB,EAAA3C,SAAeA,iBAACF,OAAQ,uBAAwB,KACxE6C,qBACA7C,OAAOS,GAAGC,SAASoC,iBAAiBjD,QAAAA,QAAOC,UAAY,iBAAkB,CACrEiD,QAASF,oBACTtB,QAAS,EACTyB,SAAU,EACVxB,MAA6ByB,UAErB,MAAMC,QAAU,GA0BhB,MAvCUC,CAAuBF,SACtCxE,OAAO2E,OAAOjC,aAAae,QAAQmB,IAAM,EAAAC,MAAAA,YAAWD,EAAErB,KAAMiB,WAavDE,CAAkBF,SAASM,SAAmDF,IAAM,IAAAG,QAChF,MAAMC,gBAAOD,QAAGH,EAAEK,KAAK,uBAAe,IAAAF,aAAA,EAAtBA,QAAwBG,OAClCC,OAAQ,EAAAC,MAAkBA,oBAACJ,QAASJ,EAAES,YACvCF,aAAAA,MAAOG,QAORH,MAAMG,QAAQR,SAAQS,MAClB,IAAI/B,MAAQ+B,IACRC,MAAQD,IACO,iBAARA,MACP/B,MAAQ+B,IAAIE,EACZD,MAAQD,IAAIG,GAEhBjB,QAAQkB,KAAK,CACTvC,KAAM,mBACNI,MAAO,GAAGoB,EAAEtB,OAAO0B,WAAWxB,QAC9BH,KAAMuB,EAAErB,KAAO,IAAMiC,OACvB,IAjBNf,QAAQkB,KAAK,CACTvC,KAAM,mBACNI,MAAOoB,EAAEtB,IACTD,KAAMuB,EAAErB,MAgBhB,IAEGtC,QAAQ2E,QAAQnB,QAAQ,EAEvCb,SAAUA,CAAiBE,IAAyB+B,IAA0BrC,SAC1EM,IAAIgC,OACJ,MAAMC,KAAOvC,MAAM9B,MAAM,KACnB4B,IAAMyC,KAAK,GAAGb,OAEdlB,IAAM,CAAA,EACZ,GAAoB,IAAhB+B,KAAKC,OAAc,CACnB,MAAOhB,QAASxB,OAASuC,KAAK,GAAGrE,MAAM,KACvCsC,IAAIgB,SAAWxB,KACnB,CACAjC,OAAO0E,UAAUC,OAAOL,KACxBtE,OAAO4E,cAAc,KACE,EAAA7D,mBAAiBA,mBAACf,QAC1B2C,sBAAsBxB,YAAYY,MAAM,EAAMU,IAAI,IAyCrF,SAAqBzC,QACjBA,OAAO6E,KAAK,cAAc,KAEtBC,WAAW9E,SACX,EAAA+E,WAAYA,cAAC,cAAcxB,SAAQyB,UAAYA,SAAShF,SAAQ,IAGpEA,OAAOiF,GAAG,QAAQ,KAKd,MAAMC,WAAa,EAEbC,OAAS,GAAGhG,IAAIiG,4BAA4BjG,IAAIkG,SAASlG,IAAImG,YAAYJ,iBAC/ElF,OAAOuF,IAAIC,QAAQL,QAMnB,MAAMM,cAAgBC,QAAM5H,QAAC6H,GAAGC,QAAU,QACpCC,SAAW7F,OAAOuF,IAAIO,OAAO,SAAU,CAACC,IAAK,kCAAkCN,yBAC/EO,KAAOhG,OAAOiG,SAASC,cAAc,QAC3CL,SAASM,OAAS,KAAM,IAAAC,mBAAAC,sBAGpB,MAAMC,WAA6BF,QAAjBA,mBAAAV,gBAAOC,GAAGrE,mBAAO8E,oBAAa,QAAbC,sBAAjBD,mBAAmBG,mBAAW,IAAAF,6BAA9BA,sBAAgCG,UAAW,QACvDC,SAAWzG,OAAOuF,IAAIO,OAAO,SAC/B,CAACC,IAAK,0CAA0CO,8CACpDN,KAAKU,YAAYD,UAGjBA,SAASN,OAAS,KACd,MAAMQ,aAAe3G,OAAOuF,IAAIO,OAAO,UACvCa,aAAaC,UAAY,gaAWzBZ,KAAKU,YAAYC,aAAa,GAGlC,EAAA5B,WAAYA,cAAC,UAAUxB,SAAQyB,UAAYA,SAAShF,UAGpD,IAAI6G,WAAY,EAAAC,SAAgBA,kBAAC9G,SAAW,IAAI2D,OAChD,GAAIkD,SAAU,CAEV,MAAME,MAAQ,0CACdF,SAAWA,SAASG,QAAQD,OAAO,CAACE,EAAGC,MACnClH,OAAOuF,IAAIC,QAAQ0B,IACZ,MAEPL,SAASlD,QACT3D,OAAOuF,IAAI4B,SAASN,SAE5B,CAEIO,UAAS,EAAAlH,SAAAA,iBAAgBF,OAAQ,2BAA4B,MAAQ,IAErE,EAAAqH,aAAAA,oBAAmBrH,OACvB,EAGJgG,KAAKU,YAAYb,SAAS,GAElC,CA5GQyB,CAAYtH,OAAO,CACtB,EAOL,MAAM8E,WAAc9E,SAChB,MACMuH,gBADU,EAAArG,qBAAcA,gBAAClB,QACAwH,aAAa,kBAAmB,IAAIrH,MAAM,KAEzE,GAAIoH,eAAe9C,OAAS,EAAG,CAC3B,MAAMgD,eAAgB,EAAAC,SAAgBA,kBAAC1H,QACjC2H,aAAeJ,eAAe5F,KAAII,KAAO0F,cAAcG,WAAW7F,OAAMG,QAAOmB,QAAWjB,IAANiB,IACpFwE,mBAAoB,EAAAC,MAAAA,0BAAyB9H,OAAQf,SAG3D0I,aAAapE,SAAQF,GAAKwE,kBAAkBxE,EAAE0E,UAAY,IAAI,KAG9D,MAAMC,SAAWC,SAAS/B,cAAc,cACpC8B,UAAYA,SAAS9B,cAAc,iCACnC8B,SAASE,iBAAiB,UAAU,KAChCP,aAAapE,SAAQF,GAAKwE,kBAAkBxE,EAAE0E,UAAY,IAAI,MACvD,IAGnB,EAgFH"}