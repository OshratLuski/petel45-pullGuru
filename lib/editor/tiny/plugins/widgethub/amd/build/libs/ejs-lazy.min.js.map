{"version":3,"file":"ejs-lazy.min.js","sources":["../../src/libs/ejs-lazy.js"],"sourcesContent":["// @ts-nocheck\r\n/* eslint-disable */\r\n// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny WidgetHub plugin.\r\n * An adaptation of the EJS templating engine as AMD module.\r\n *\r\n * @module      tiny_widgethub/plugin\r\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/*\r\n * EJS Embedded JavaScript templates\r\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n*/\r\n\r\nconst utils = {};\r\n(function(mod) {\r\n    'use strict';\r\n    const regExpChars = /[|\\\\{}()[\\]^$+*?.]/g;\r\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\r\n    const hasOwn = function(obj, key) {\r\n        return hasOwnProperty.apply(obj, [key]);\r\n    };\r\n\r\n    /**\r\n     * Escape characters reserved in regular expressions.\r\n     *\r\n     * If `string` is `undefined` or `null`, the empty string is returned.\r\n     *\r\n     * @param {String} string Input string\r\n     * @return {String} Escaped string\r\n     * @static\r\n     * @private\r\n     */\r\n    mod.escapeRegExpChars = function(string) {\r\n        // istanbul ignore if\r\n        if (!string) {\r\n            return '';\r\n        }\r\n        return String(string).replace(regExpChars, '\\\\$&');\r\n    };\r\n\r\n    const _ENCODE_HTML_RULES = {\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&#34;',\r\n        \"'\": '&#39;'\r\n    };\r\n    const _MATCH_HTML = /[&<>'\"]/g;\r\n\r\n    /**\r\n     *\r\n     * @param {string} c\r\n     * @returns {string} encoded char\r\n     */\r\n    function encode_char(c) {\r\n        return _ENCODE_HTML_RULES[c] || c;\r\n    }\r\n\r\n    /**\r\n     * Stringified version of constants used by {@link module:utils.escapeXML}.\r\n     *\r\n     * It is used in the process of generating {@link ClientFunction}s.\r\n     *\r\n     * @readonly\r\n     * @type {String}\r\n     */\r\n\r\n    const escapeFuncStr =\r\n        'var _ENCODE_HTML_RULES = {\\n'\r\n        + '      \"&\": \"&amp;\"\\n'\r\n        + '    , \"<\": \"&lt;\"\\n'\r\n        + '    , \">\": \"&gt;\"\\n'\r\n        + '    , \\'\"\\': \"&#34;\"\\n'\r\n        + '    , \"\\'\": \"&#39;\"\\n'\r\n        + '    }\\n'\r\n        + '  , _MATCH_HTML = /[&<>\\'\"]/g;\\n'\r\n        + 'function encode_char(c) {\\n'\r\n        + '  return _ENCODE_HTML_RULES[c] || c;\\n'\r\n        + '};\\n';\r\n\r\n    /**\r\n     * Escape characters reserved in XML.\r\n     *\r\n     * If `markup` is `undefined` or `null`, the empty string is returned.\r\n     *\r\n     * @param {String} markup Input string\r\n     * @return {String} Escaped string\r\n     * @static\r\n     * @private\r\n     */\r\n    mod.escapeXML = function(markup) {\r\n        return markup == undefined\r\n            ? ''\r\n            : String(markup)\r\n                .replace(_MATCH_HTML, encode_char);\r\n    };\r\n\r\n    /**\r\n     * Naive copy of properties from one object to another.\r\n     * Does not recurse into non-scalar properties\r\n     */\r\n    function escapeXMLToString() {\r\n        return Function.prototype.toString.call(this) + ';\\n' + escapeFuncStr;\r\n    }\r\n\r\n    try {\r\n        if (typeof Object.defineProperty === 'function') {\r\n            // If the Function prototype is frozen, the \"toString\" property is non-writable.\r\n            // This means that any objects which inherit this property\r\n            // cannot have the property changed using an assignment. If using strict mode,\r\n            // attempting that will cause an error. If not using strict\r\n            // mode, attempting that will be silently ignored.\r\n            // However, we can still explicitly shadow the prototype's \"toString\" property by\r\n            // defining a new \"toString\" property on this object.\r\n            Object.defineProperty(mod.escapeXML, 'toString', {value: escapeXMLToString});\r\n        } else {\r\n            // If Object.defineProperty() doesn't exist, attempt to shadow this property using the assignment operator.\r\n            mod.escapeXML.toString = escapeXMLToString;\r\n        }\r\n    } catch (err) {\r\n        console.warn('Unable to set escapeXML.toString (is the Function prototype frozen?)');\r\n    }\r\n\r\n    /**\r\n     * Naive copy of properties from one object to another.\r\n     * Does not recurse into non-scalar properties\r\n     * Does not check to see if the property has a value before copying\r\n     *\r\n     * @param  {Object} to   Destination object\r\n     * @param  {Object} from Source object\r\n     * @return {Object}      Destination object\r\n     * @static\r\n     * @private\r\n     */\r\n    mod.shallowCopy = function(to, from) {\r\n        from = from || {};\r\n        if ((to !== null) && (to !== undefined)) {\r\n            for (let p in from) {\r\n                if (!hasOwn(from, p)) {\r\n                    continue;\r\n                }\r\n                if (p === '__proto__' || p === 'constructor') {\r\n                    continue;\r\n                }\r\n                to[p] = from[p];\r\n            }\r\n        }\r\n        return to;\r\n    };\r\n\r\n    /**\r\n     * Naive copy of a list of key names, from one object to another.\r\n     * Only copies property if it is actually defined\r\n     * Does not recurse into non-scalar properties\r\n     *\r\n     * @param  {Object} to   Destination object\r\n     * @param  {Object} from Source object\r\n     * @param  {Array} list List of properties to copy\r\n     * @return {Object}      Destination object\r\n     * @static\r\n     * @private\r\n     */\r\n    mod.shallowCopyFromList = function(to, from, list) {\r\n        list = list || [];\r\n        from = from || {};\r\n        if ((to !== null) && (to !== undefined)) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                const p = list[i];\r\n                if (typeof from[p] != 'undefined') {\r\n                    if (!hasOwn(from, p)) {\r\n                        continue;\r\n                    }\r\n                    if (p === '__proto__' || p === 'constructor') {\r\n                        continue;\r\n                    }\r\n                    to[p] = from[p];\r\n                }\r\n            }\r\n        }\r\n        return to;\r\n    };\r\n\r\n    /**\r\n     * Simple in-process cache implementation. Does not implement limits of any\r\n     * sort.\r\n     *\r\n     * @implements {Cache}\r\n     * @static\r\n     * @private\r\n     */\r\n    mod.cache = {\r\n        _data: {},\r\n        set: function(key, val) {\r\n            this._data[key] = val;\r\n        },\r\n        get: function(key) {\r\n            return this._data[key];\r\n        },\r\n        remove: function(key) {\r\n            delete this._data[key];\r\n        },\r\n        reset: function() {\r\n            this._data = {};\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Transforms hyphen case variable into camel case.\r\n     *\r\n     * @param {String} str Hyphen case string\r\n     * @return {String} Camel case string\r\n     * @static\r\n     * @private\r\n     */\r\n    mod.hyphenToCamel = function(str) {\r\n        return str.replace(/-[a-z]/g, function(match) {\r\n return match[1].toUpperCase();\r\n});\r\n    };\r\n\r\n    /**\r\n     * Returns a null-prototype object in runtimes that support it\r\n     *\r\n     * @return {Object} Object, prototype will be set to null where possible\r\n     * @static\r\n     * @private\r\n     */\r\n    mod.createNullProtoObjWherePossible = (function() {\r\n        if (typeof Object.create == 'function') {\r\n            return function() {\r\n                return Object.create(null);\r\n            };\r\n        }\r\n        if (!({__proto__: null} instanceof Object)) {\r\n            return function() {\r\n                return {__proto__: null};\r\n            };\r\n        }\r\n        // Not possible, just pass through\r\n        return function() {\r\n            return {};\r\n        };\r\n    })();\r\n\r\n    /**\r\n     * Copies own-properties from one object to a null-prototype object for basic\r\n     * protection against prototype pollution\r\n     *\r\n     * @param {Object} obj to copy properties from\r\n     * @return {Object} Object with own-properties of input object\r\n     * @static\r\n     * @private\r\n     */\r\n    mod.hasOwnOnlyObject = function(obj) {\r\n        const o = mod.createNullProtoObjWherePossible();\r\n        for (let p in obj) {\r\n            if (hasOwn(obj, p)) {\r\n                o[p] = obj[p];\r\n            }\r\n        }\r\n        return o;\r\n    };\r\n\r\n})(utils);\r\n\r\n/*\r\n * EJS Embedded JavaScript templates\r\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n*/\r\n\r\n/**\r\n * @file Embedded JavaScript templating engine. {@link http://ejs.co}\r\n * @author Matthew Eernisse <mde@fleegix.org>\r\n * @author Tiancheng \"Timothy\" Gu <timothygu99@gmail.com>\r\n * @project EJS\r\n * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}\r\n */\r\n\r\n/**\r\n * EJS internal functions.\r\n *\r\n * Technically this \"module\" lies in the same file as {@link module:ejs}, for\r\n * the sake of organization all the private functions re grouped into this\r\n * module.\r\n *\r\n * @module ejs-internal\r\n * @private\r\n */\r\n\r\n/**\r\n * Embedded JavaScript templating engine.\r\n *\r\n * @module ejs\r\n * @public\r\n */\r\nconst EJS = {};\r\nconst path = {\r\n    // Mocked path module\r\n};\r\n\r\nlet scopeOptionWarned = false;\r\n/** @type {string} */\r\nconst _VERSION_STRING = '3.1.10';\r\nconst _DEFAULT_OPEN_DELIMITER = '<';\r\nconst _DEFAULT_CLOSE_DELIMITER = '>';\r\nconst _DEFAULT_DELIMITER = '%';\r\nconst _DEFAULT_LOCALS_NAME = 'locals';\r\nconst _NAME = 'ejs';\r\nconst _REGEX_STRING = '(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)';\r\nconst _OPTS_PASSABLE_WITH_DATA = ['delimiter', 'scope', 'context', 'debug', 'compileDebug',\r\n    'client', '_with', 'rmWhitespace', 'strict', 'filename', 'async'];\r\nconst _JS_IDENTIFIER = /^[a-zA-Z_$][0-9a-zA-Z_$]*$/;\r\n\r\n/**\r\n * EJS template function cache. This can be a LRU object from lru-cache NPM\r\n * module. By default, it is {@link module:utils.cache}, a simple in-process\r\n * cache that grows continuously.\r\n *\r\n * @type {Cache}\r\n */\r\n\r\nEJS.cache = utils.cache;\r\n\r\n/**\r\n * Name of the object containing the locals.\r\n *\r\n * This variable is overridden by {@link Options}`.localsName` if it is not\r\n * `undefined`.\r\n *\r\n * @type {String}\r\n * @public\r\n */\r\n\r\nEJS.localsName = _DEFAULT_LOCALS_NAME;\r\n\r\n/**\r\n * Promise implementation -- defaults to the native implementation if available\r\n * This is mostly just for testability\r\n *\r\n * @type {PromiseConstructorLike}\r\n * @public\r\n */\r\n\r\nEJS.promiseImpl = (new Function('return this;'))().Promise;\r\n\r\n/**\r\n * Get the template from a string or a file, either compiled on-the-fly or\r\n * read from cache (if enabled), and cache the template if needed.\r\n *\r\n * If `template` is not set, the file specified in `options.filename` will be\r\n * read.\r\n *\r\n * If `options.cache` is true, this function reads the file from\r\n * `options.filename` so it must be set prior to calling this function.\r\n *\r\n * @memberof module:ejs-internal\r\n * @param {Options} options   compilation options\r\n * @param {String} [template] template source\r\n * @return {(TemplateFunction|ClientFunction)}\r\n * Depending on the value of `options.client`, either type might be returned.\r\n * @static\r\n */\r\n\r\n/**\r\n *\r\n * @param {Option} options\r\n * @param {String} template\r\n */\r\nfunction handleCache(options, template) {\r\n    let func;\r\n    const filename = options.filename;\r\n    const hasTemplate = arguments.length > 1;\r\n    if (!hasTemplate) {\r\n        throw new Error('Internal EJS error: a template must be provided');\r\n    }\r\n\r\n    if (options.cache) {\r\n        if (!filename) {\r\n            throw new Error('cache option requires a filename');\r\n        }\r\n        func = EJS.cache.get(filename);\r\n        if (func) {\r\n            return func;\r\n        }\r\n    }\r\n    func = EJS.compile(template, options);\r\n    if (options.cache) {\r\n        EJS.cache.set(filename, func);\r\n    }\r\n    return func;\r\n}\r\n\r\n\r\n/**\r\n * Get the template function.\r\n *\r\n * If `options.cache` is `true`, then the template is cached.\r\n *\r\n * @memberof module:ejs-internal\r\n * @param {String}  path    path for the specified file\r\n * @param {Options} options compilation options\r\n * @return {(TemplateFunction|ClientFunction)}\r\n * Depending on the value of `options.client`, either type might be returned\r\n * @static\r\n */\r\nfunction includeFile(path, options) {\r\n    const opts = utils.shallowCopy(utils.createNullProtoObjWherePossible(), options);\r\n    opts.filename = path + \"/\" + options.filename;\r\n    if (typeof options.includer === 'function') {\r\n      const includerResult = options.includer(path, opts.filename);\r\n      if (includerResult) {\r\n        if (includerResult.filename) {\r\n          opts.filename = includerResult.filename;\r\n        }\r\n        if (includerResult.template) {\r\n          return handleCache(opts, includerResult.template);\r\n        }\r\n      }\r\n    }\r\n    return handleCache(opts);\r\n }\r\n\r\n/**\r\n * Re-throw the given `err` in context to the `str` of ejs, `filename`, and\r\n * `lineno`.\r\n *\r\n * @memberof module:ejs-internal\r\n * @param {Error}  err      Error object\r\n * @param {String} str      EJS source\r\n * @param {String} flnm     file name of the EJS file\r\n * @param {Number} lineno   line number of the error\r\n * @param {EscapeCallback} esc\r\n * @static\r\n */\r\nfunction rethrow(err, str, flnm, lineno, esc) {\r\n    const lines = str.split('\\n');\r\n    const start = Math.max(lineno - 3, 0);\r\n    const end = Math.min(lines.length, lineno + 3);\r\n    const filename = esc(flnm);\r\n    // Error context\r\n    const context = lines.slice(start, end).map(function(line, i) {\r\n        const curr = i + start + 1;\r\n        return (curr == lineno ? ' >> ' : '    ')\r\n            + curr\r\n            + '| '\r\n            + line;\r\n    }).join('\\n');\r\n\r\n    // Alter exception message\r\n    err.path = filename;\r\n    err.message = (filename || 'ejs') + ':'\r\n        + lineno + '\\n'\r\n        + context + '\\n\\n'\r\n        + err.message;\r\n\r\n    throw err;\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} str\r\n */\r\nfunction stripSemi(str) {\r\n    return str.replace(/;(\\s*$)/, '$1');\r\n}\r\n\r\n/**\r\n * Compile the given `str` of ejs into a template function.\r\n *\r\n * @param {String}  template EJS template\r\n *\r\n * @param {Options} [opts] compilation options\r\n *\r\n * @return {(TemplateFunction|ClientFunction)}\r\n * Depending on the value of `opts.client`, either type might be returned.\r\n * Note that the return type of the function also depends on the value of `opts.async`.\r\n * @public\r\n */\r\n\r\nEJS.compile = function compile(template, opts) {\r\n    let templ;\r\n\r\n    // V1 compat\r\n    // 'scope' is 'context'\r\n    // Remove this in a future version\r\n    if (opts?.scope) {\r\n        if (!scopeOptionWarned) {\r\n            console.warn('`scope` option is deprecated and will be removed in EJS 3');\r\n            scopeOptionWarned = true;\r\n        }\r\n        if (!opts.context) {\r\n            opts.context = opts.scope;\r\n        }\r\n        delete opts.scope;\r\n    }\r\n    templ = new Template(template, opts);\r\n    return templ.compile();\r\n};\r\n\r\n/**\r\n * Render the given `template` of ejs.\r\n *\r\n * If you would like to include options but not data, you need to explicitly\r\n * call this function with `data` being an empty object or `null`.\r\n *\r\n * @param {String}   template EJS template\r\n * @param {Object}  [data={}] template data\r\n * @param {Options} [opts={}] compilation and rendering options\r\n * @return {(String|Promise<String>)}\r\n * Return value type depends on `opts.async`.\r\n * @public\r\n */\r\n\r\nEJS.render = function(template, d, o) {\r\n    const data = d || utils.createNullProtoObjWherePossible();\r\n    const opts = o || utils.createNullProtoObjWherePossible();\r\n\r\n    // No options object -- if there are optiony names\r\n    // in the data, copy them to options\r\n    if (arguments.length == 2) {\r\n        utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA);\r\n    }\r\n\r\n    return handleCache(opts, template)(data);\r\n};\r\n\r\n/**\r\n * Clear intermediate JavaScript cache. Calls {@link Cache#reset}.\r\n * @public\r\n */\r\n\r\n/**\r\n * EJS template class\r\n * @public\r\n */\r\nEJS.Template = Template;\r\n\r\nEJS.clearCache = function() {\r\n    EJS.cache.reset();\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} text\r\n * @param {Object} optsParam\r\n */\r\nfunction Template(text, optsParam) {\r\n    const opts = utils.hasOwnOnlyObject(optsParam);\r\n    const options = utils.createNullProtoObjWherePossible();\r\n    this.templateText = text;\r\n    /** @type {string | null} */\r\n    this.mode = null;\r\n    this.truncate = false;\r\n    this.currentLine = 1;\r\n    this.source = '';\r\n    options.client = opts.client || false;\r\n    options.escapeFunction = opts.escape || opts.escapeFunction || utils.escapeXML;\r\n    options.compileDebug = opts.compileDebug !== false;\r\n    options.debug = !!opts.debug;\r\n    options.filename = opts.filename;\r\n    options.openDelimiter = opts.openDelimiter || EJS.openDelimiter || _DEFAULT_OPEN_DELIMITER;\r\n    options.closeDelimiter = opts.closeDelimiter || EJS.closeDelimiter || _DEFAULT_CLOSE_DELIMITER;\r\n    options.delimiter = opts.delimiter || EJS.delimiter || _DEFAULT_DELIMITER;\r\n    options.strict = opts.strict || false;\r\n    options.context = opts.context;\r\n    options.cache = opts.cache || false;\r\n    options.rmWhitespace = opts.rmWhitespace;\r\n    options.root = opts.root;\r\n    options.includer = opts.includer;\r\n    options.outputFunctionName = opts.outputFunctionName;\r\n    options.localsName = opts.localsName || EJS.localsName || _DEFAULT_LOCALS_NAME;\r\n    options.views = opts.views;\r\n    options.async = opts.async;\r\n    options.destructuredLocals = opts.destructuredLocals;\r\n    options.legacyInclude = typeof opts.legacyInclude != 'undefined' ? !!opts.legacyInclude : true;\r\n\r\n    if (options.strict) {\r\n        options._with = false;\r\n    } else {\r\n        options._with = typeof opts._with != 'undefined' ? opts._with : true;\r\n    }\r\n\r\n    this.opts = options;\r\n\r\n    this.regex = this.createRegex();\r\n}\r\n\r\nTemplate.modes = {\r\n    EVAL: 'eval',\r\n    ESCAPED: 'escaped',\r\n    RAW: 'raw',\r\n    COMMENT: 'comment',\r\n    LITERAL: 'literal'\r\n};\r\n\r\nTemplate.prototype = {\r\n    createRegex: function() {\r\n        let str = _REGEX_STRING;\r\n        const delim = utils.escapeRegExpChars(this.opts.delimiter);\r\n        const open = utils.escapeRegExpChars(this.opts.openDelimiter);\r\n        const close = utils.escapeRegExpChars(this.opts.closeDelimiter);\r\n        str = str.replace(/%/g, delim)\r\n            .replace(/</g, open)\r\n            .replace(/>/g, close);\r\n        return new RegExp(str);\r\n    },\r\n\r\n    compile: function() {\r\n        /** @type {string} */\r\n        let src;\r\n        /** @type {ClientFunction} */\r\n        let fn;\r\n        const opts = this.opts;\r\n        let prepended = '';\r\n        let appended = '';\r\n        /** @type {EscapeCallback} */\r\n        const escapeFn = opts.escapeFunction;\r\n        /** @type {FunctionConstructor} */\r\n        let Ctor;\r\n        /** @type {string} */\r\n        const sanitizedFilename = opts.filename ? JSON.stringify(opts.filename) : 'undefined';\r\n\r\n        if (!this.source) {\r\n            this.generateSource();\r\n            prepended +=\r\n                '  var __output = \"\";\\n' +\r\n                '  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n';\r\n            if (opts.outputFunctionName) {\r\n                if (!_JS_IDENTIFIER.test(opts.outputFunctionName)) {\r\n                    throw new Error('outputFunctionName is not a valid JS identifier.');\r\n                }\r\n                prepended += '  var ' + opts.outputFunctionName + ' = __append;' + '\\n';\r\n            }\r\n            if (opts.localsName && !_JS_IDENTIFIER.test(opts.localsName)) {\r\n                throw new Error('localsName is not a valid JS identifier.');\r\n            }\r\n            if (opts.destructuredLocals?.length) {\r\n                let destructuring = '  var __locals = (' + opts.localsName + ' || {}),\\n';\r\n                for (let i = 0; i < opts.destructuredLocals.length; i++) {\r\n                    const name = opts.destructuredLocals[i];\r\n                    if (!_JS_IDENTIFIER.test(name)) {\r\n                        throw new Error('destructuredLocals[' + i + '] is not a valid JS identifier.');\r\n                    }\r\n                    if (i > 0) {\r\n                        destructuring += ',\\n  ';\r\n                    }\r\n                    destructuring += name + ' = __locals.' + name;\r\n                }\r\n                prepended += destructuring + ';\\n';\r\n            }\r\n            if (opts._with !== false) {\r\n                prepended += '  with (' + opts.localsName + ' || {}) {' + '\\n';\r\n                appended += '  }' + '\\n';\r\n            }\r\n            appended += '  return __output;' + '\\n';\r\n            this.source = prepended + this.source + appended;\r\n        }\r\n\r\n        if (opts.compileDebug) {\r\n            src = 'var __line = 1' + '\\n'\r\n                + '  , __lines = ' + JSON.stringify(this.templateText) + '\\n'\r\n                + '  , __filename = ' + sanitizedFilename + ';' + '\\n'\r\n                + 'try {' + '\\n'\r\n                + this.source\r\n                + '} catch (e) {' + '\\n'\r\n                + '  rethrow(e, __lines, __filename, __line, escapeFn);' + '\\n'\r\n                + '}' + '\\n';\r\n        } else {\r\n            src = this.source;\r\n        }\r\n\r\n        if (opts.client) {\r\n            src = 'escapeFn = escapeFn || ' + escapeFn.toString() + ';' + '\\n' + src;\r\n            if (opts.compileDebug) {\r\n                src = 'rethrow = rethrow || ' + rethrow.toString() + ';' + '\\n' + src;\r\n            }\r\n        }\r\n\r\n        if (opts.strict) {\r\n            src = '\"use strict\";\\n' + src;\r\n        }\r\n        if (opts.debug) {\r\n            console.log(src);\r\n        }\r\n        if (opts.compileDebug && opts.filename) {\r\n            src = src + '\\n'\r\n                + '//# sourceURL=' + sanitizedFilename + '\\n';\r\n        }\r\n\r\n        try {\r\n            if (opts.async) {\r\n                // Have to use generated function for this, since in envs without support,\r\n                // it breaks in parsing\r\n                try {\r\n                    Ctor = (new Function('return (async function(){}).constructor;'))();\r\n                } catch (e) {\r\n                    if (e instanceof SyntaxError) {\r\n                        throw new Error('This environment does not support async/await');\r\n                    } else {\r\n                        throw e;\r\n                    }\r\n                }\r\n            } else {\r\n                Ctor = Function;\r\n            }\r\n            fn = new Ctor(opts.localsName + ', escapeFn, include, rethrow', src);\r\n        } catch (e) {\r\n            // istanbul ignore else\r\n            if (e instanceof SyntaxError) {\r\n                if (opts.filename) {\r\n                    e.message += ' in ' + opts.filename;\r\n                }\r\n                e.message += ' while compiling ejs\\n\\n';\r\n                e.message += 'If the above error is not helpful, you may want to try EJS-Lint:\\n';\r\n                e.message += 'https://github.com/RyanZim/EJS-Lint';\r\n                if (!opts.async) {\r\n                    e.message += '\\n';\r\n                    e.message += 'Or, if you meant to create an async function, pass `async: true` as an option.';\r\n                }\r\n            }\r\n            throw e;\r\n        }\r\n\r\n        // Return a callable function which will execute the function\r\n        // created by the source-code, with the passed data as locals\r\n        // Adds a local `include` function which allows full recursive include\r\n        const returnedFn = opts.client ? fn : function anonymous(data) {\r\n            const include = function(path, includeData) {\r\n                let d = utils.shallowCopy(utils.createNullProtoObjWherePossible(), data);\r\n                if (includeData) {\r\n                    d = utils.shallowCopy(d, includeData);\r\n                }\r\n                return includeFile(path, opts)(d);\r\n            };\r\n            return fn.apply(opts.context,\r\n                [data || utils.createNullProtoObjWherePossible(), escapeFn, include, rethrow]);\r\n        };\r\n        if (opts.filename && typeof Object.defineProperty === 'function') {\r\n            const filename = opts.filename;\r\n            const basename = path.basename(filename, path.extname(filename));\r\n            try {\r\n                Object.defineProperty(returnedFn, 'name', {\r\n                    value: basename,\r\n                    writable: false,\r\n                    enumerable: false,\r\n                    configurable: true\r\n                });\r\n            } catch (e) { /* Ignore */ }\r\n        }\r\n        return returnedFn;\r\n    },\r\n\r\n    generateSource: function() {\r\n        const opts = this.opts;\r\n\r\n        if (opts.rmWhitespace) {\r\n            // Have to use two separate replace here as `^` and `$` operators don't\r\n            // work well with `\\r` and empty lines don't work well with the `m` flag.\r\n            this.templateText =\r\n                this.templateText.replace(/[\\r\\n]+/g, '\\n').replace(/^\\s+|\\s+$/gm, '');\r\n        }\r\n\r\n        // Slurp spaces and tabs before <%_ and after _%>\r\n        this.templateText =\r\n            this.templateText.replace(/[ \\t]*<%_/gm, '<%_').replace(/_%>[ \\t]*/gm, '_%>');\r\n\r\n        const self = this;\r\n        const matches = this.parseTemplateText();\r\n        const d = this.opts.delimiter;\r\n        const o = this.opts.openDelimiter;\r\n        const c = this.opts.closeDelimiter;\r\n\r\n        if (matches?.length) {\r\n            matches.forEach(function(line, index) {\r\n                let closing;\r\n                // If this is an opening tag, check for closing tags\r\n                // May end up with some false positives here\r\n                // Better to store modes as k/v with openDelimiter + delimiter as key\r\n                // Then this can simply check against the map\r\n                if (line.startsWith(o + d) // If it is a tag\r\n                    && !line.startsWith(o + d + d)) { // And is not escaped\r\n                    closing = matches[index + 2];\r\n                    if (!(closing == d + c || closing == '-' + d + c || closing == '_' + d + c)) {\r\n                        throw new Error('Could not find matching close tag for \"' + line + '\".');\r\n                    }\r\n                }\r\n                self.scanLine(line);\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    parseTemplateText: function() {\r\n        let str = this.templateText;\r\n        const pat = this.regex;\r\n        let result = pat.exec(str);\r\n        const arr = [];\r\n        let firstPos;\r\n\r\n        while (result) {\r\n            firstPos = result.index;\r\n\r\n            if (firstPos !== 0) {\r\n                arr.push(str.substring(0, firstPos));\r\n                str = str.slice(firstPos);\r\n            }\r\n\r\n            arr.push(result[0]);\r\n            str = str.slice(result[0].length);\r\n            result = pat.exec(str);\r\n        }\r\n\r\n        if (str) {\r\n            arr.push(str);\r\n        }\r\n\r\n        return arr;\r\n    },\r\n\r\n    _addOutput: function(line) {\r\n        if (this.truncate) {\r\n            // Only replace single leading linebreak in the line after\r\n            // -%> tag -- this is the single, trailing linebreak\r\n            // after the tag that the truncation mode replaces\r\n            // Handle Win / Unix / old Mac linebreaks -- do the \\r\\n\r\n            // combo first in the regex-or\r\n            line = line.replace(/^(?:\\r\\n|\\r|\\n)/, '');\r\n            this.truncate = false;\r\n        }\r\n        if (!line) {\r\n            return line;\r\n        }\r\n\r\n        // Preserve literal slashes\r\n        line = line.replace(/\\\\/g, '\\\\\\\\');\r\n\r\n        // Convert linebreaks\r\n        line = line.replace(/\\n/g, '\\\\n');\r\n        line = line.replace(/\\r/g, '\\\\r');\r\n\r\n        // Escape double-quotes\r\n        // - this will be the delimiter during execution\r\n        line = line.replace(/\"/g, '\\\\\"');\r\n        this.source += '    ; __append(\"' + line + '\")' + '\\n';\r\n        return undefined;\r\n    },\r\n\r\n    scanLine: function(line) {\r\n        const self = this;\r\n        const d = this.opts.delimiter;\r\n        const o = this.opts.openDelimiter;\r\n        const c = this.opts.closeDelimiter;\r\n        let newLineCount = 0;\r\n\r\n        newLineCount = (line.split('\\n').length - 1);\r\n\r\n        switch (line) {\r\n            case o + d:\r\n            case o + d + '_':\r\n                this.mode = Template.modes.EVAL;\r\n                break;\r\n            case o + d + '=':\r\n                this.mode = Template.modes.ESCAPED;\r\n                break;\r\n            case o + d + '-':\r\n                this.mode = Template.modes.RAW;\r\n                break;\r\n            case o + d + '#':\r\n                this.mode = Template.modes.COMMENT;\r\n                break;\r\n            case o + d + d:\r\n                this.mode = Template.modes.LITERAL;\r\n                this.source += '    ; __append(\"' + line.replace(o + d + d, o + d) + '\")' + '\\n';\r\n                break;\r\n            case d + d + c:\r\n                this.mode = Template.modes.LITERAL;\r\n                this.source += '    ; __append(\"' + line.replace(d + d + c, d + c) + '\")' + '\\n';\r\n                break;\r\n            case d + c:\r\n            case '-' + d + c:\r\n            case '_' + d + c:\r\n                if (this.mode == Template.modes.LITERAL) {\r\n                    this._addOutput(line);\r\n                }\r\n\r\n                this.mode = null;\r\n                this.truncate = line.indexOf('-') === 0 || line.indexOf('_') === 0;\r\n                break;\r\n            default:\r\n                // In script mode, depends on type of tag\r\n                if (this.mode) {\r\n                    // If '//' is found without a line break, add a line break.\r\n                    switch (this.mode) {\r\n                        case Template.modes.EVAL:\r\n                        case Template.modes.ESCAPED:\r\n                        case Template.modes.RAW:\r\n                            if (line.lastIndexOf('//') > line.lastIndexOf('\\n')) {\r\n                                line += '\\n';\r\n                            }\r\n                    }\r\n                    switch (this.mode) {\r\n                        // Just executing code\r\n                        case Template.modes.EVAL:\r\n                            this.source += '    ; ' + line + '\\n';\r\n                            break;\r\n                        // Exec, esc, and output\r\n                        case Template.modes.ESCAPED:\r\n                            this.source += '    ; __append(escapeFn(' + stripSemi(line) + '))' + '\\n';\r\n                            break;\r\n                        // Exec and output\r\n                        case Template.modes.RAW:\r\n                            this.source += '    ; __append(' + stripSemi(line) + ')' + '\\n';\r\n                            break;\r\n                        case Template.modes.COMMENT:\r\n                            // Do nothing\r\n                            break;\r\n                        // Literal <%% mode, append as raw output\r\n                        case Template.modes.LITERAL:\r\n                            this._addOutput(line);\r\n                            break;\r\n                    }\r\n                }\r\n                // In string mode, just add the output\r\n                else {\r\n                    this._addOutput(line);\r\n                }\r\n        }\r\n\r\n        if (self.opts.compileDebug && newLineCount) {\r\n            this.currentLine += newLineCount;\r\n            this.source += '    ; __line = ' + this.currentLine + '\\n';\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Escape characters reserved in XML.\r\n *\r\n * This is simply an export of {@link module:utils.escapeXML}.\r\n *\r\n * If `markup` is `undefined` or `null`, the empty string is returned.\r\n *\r\n * @param {String} markup Input string\r\n * @return {String} Escaped string\r\n * @public\r\n * @func\r\n * */\r\nEJS.escapeXML = utils.escapeXML;\r\n\r\n/**\r\n * Version of EJS.\r\n *\r\n * @readonly\r\n * @type {String}\r\n * @public\r\n */\r\n\r\nEJS.VERSION = _VERSION_STRING;\r\n\r\n/**\r\n * Name for detection of EJS.\r\n *\r\n * @readonly\r\n * @type {String}\r\n * @public\r\n */\r\n\r\nEJS.name = _NAME;\r\n\r\nexport default EJS;\r\n"],"names":["utils","mod","regExpChars","hasOwnProperty","Object","prototype","hasOwn","obj","key","apply","escapeRegExpChars","string","String","replace","_ENCODE_HTML_RULES","_MATCH_HTML","encode_char","c","escapeXMLToString","Function","toString","call","this","escapeXML","markup","undefined","defineProperty","value","err","console","warn","shallowCopy","to","from","p","shallowCopyFromList","list","i","length","cache","_data","set","val","get","remove","reset","hyphenToCamel","str","match","toUpperCase","createNullProtoObjWherePossible","create","__proto__","hasOwnOnlyObject","o","EJS","path","scopeOptionWarned","_OPTS_PASSABLE_WITH_DATA","_JS_IDENTIFIER","handleCache","options","template","func","filename","arguments","Error","compile","rethrow","flnm","lineno","esc","lines","split","start","Math","max","end","min","context","slice","map","line","curr","join","message","stripSemi","Template","text","optsParam","opts","templateText","mode","truncate","currentLine","source","client","escapeFunction","escape","compileDebug","debug","openDelimiter","closeDelimiter","delimiter","strict","rmWhitespace","root","includer","outputFunctionName","localsName","views","async","destructuredLocals","legacyInclude","_with","regex","createRegex","promiseImpl","Promise","templ","scope","render","d","data","clearCache","modes","EVAL","ESCAPED","RAW","COMMENT","LITERAL","delim","open","close","RegExp","src","fn","prepended","appended","escapeFn","Ctor","sanitizedFilename","JSON","stringify","_opts$destructuredLoc","generateSource","test","destructuring","name","log","e","SyntaxError","returnedFn","includeData","includerResult","includeFile","basename","extname","writable","enumerable","configurable","self","matches","parseTemplateText","forEach","index","closing","startsWith","scanLine","pat","result","exec","arr","firstPos","push","substring","_addOutput","newLineCount","indexOf","lastIndexOf","VERSION","_default","_exports","default"],"mappings":"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"}