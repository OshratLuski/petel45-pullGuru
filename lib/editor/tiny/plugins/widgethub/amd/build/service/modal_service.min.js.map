{"version":3,"file":"modal_service.min.js","sources":["../../src/service/modal_service.js"],"sourcesContent":["/* eslint-disable max-len */\r\n// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny WidgetHub plugin.\r\n *\r\n * @module      tiny_widgethub/plugin\r\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Modal from 'core/modal';\r\nimport ModalRegistry from 'core/modal_registry';\r\nimport ModalFactory from 'core/modal_factory';\r\nimport ModalEvents from 'core/modal_events';\r\n\r\n// @ts-ignore\r\nclass IBPickerModal extends Modal {\r\n    static TYPE = 'tiny_widgethub/picker_modal';\r\n    static TEMPLATE = 'tiny_widgethub/picker_modal';\r\n\r\n    registerEventListeners() {\r\n        // Call the parent registration.\r\n        super.registerEventListeners();\r\n    }\r\n}\r\n// @ts-ignore\r\nModalRegistry.register(IBPickerModal.TYPE, IBPickerModal, IBPickerModal.TEMPLATE);\r\n\r\n\r\n// @ts-ignore\r\nclass IBParamsModal extends Modal {\r\n    static TYPE = 'tiny_widgethub/params_modal';\r\n    static TEMPLATE = 'tiny_widgethub/params_modal';\r\n\r\n    registerEventListeners() {\r\n        // Call the parent registration.\r\n        super.registerEventListeners();\r\n    }\r\n}\r\n// @ts-ignore\r\nModalRegistry.register(IBParamsModal.TYPE, IBParamsModal, IBParamsModal.TEMPLATE);\r\n\r\n// @ts-ignore\r\nclass IBContextModal extends Modal {\r\n    static TYPE = 'tiny_widgethub/context_modal';\r\n    static TEMPLATE = 'tiny_widgethub/context_modal';\r\n\r\n    registerEventListeners() {\r\n        // Call the parent registration.\r\n        super.registerEventListeners();\r\n    }\r\n}\r\n// @ts-ignore\r\nModalRegistry.register(IBContextModal.TYPE, IBContextModal, IBContextModal.TEMPLATE);\r\n\r\n/**\r\n * @typedef {JQuery<HTMLElement> & {header: JQuery<HTMLElement>, body: JQuery<HTMLElement>, footer: JQuery<HTMLElement>, destroy: () => void, show: () => void, getRoot: () => {on: () => void}}} ModalDialogue\r\n */\r\n\r\n/**\r\n * @typedef {{ destroyOnHidden: boolean | undefined}} ModalOpts\r\n */\r\n\r\nexport class ModalSrv {\r\n    /**\r\n     * @param {'picker' | 'params' | 'context'} name\r\n     * @param {object} templateContext\r\n     * @param {()=>void} [onHidden]\r\n     * @returns {Promise<ModalDialogue>}\r\n     */\r\n    async create(name, templateContext, onHidden) {\r\n        let cls;\r\n        switch (name) {\r\n            case ('picker'): cls = IBPickerModal; break;\r\n            case ('params'): cls = IBParamsModal; break;\r\n            case ('context'): cls = IBContextModal; break;\r\n        }\r\n        // On versions of Moodle beyond 4.3, call create directly on Modal class\r\n        const options = {\r\n            type: cls.TYPE,\r\n            templateContext,\r\n            large: true,\r\n        };\r\n        let modal;\r\n        if (cls.create) {\r\n            modal = await cls.create(options);\r\n        } else {\r\n            // @ts-ignore\r\n            modal = await ModalFactory.create(options);\r\n        }\r\n        // Override styles imposed by body.tox-fullscreen on modals\r\n        modal.modal.css({\r\n            'max-width': '800px',\r\n            'height': 'initial'\r\n        });\r\n        modal.header.css({\r\n            'height': '61.46px',\r\n            'padding': '1rem 1rem'\r\n        });\r\n        if (onHidden) {\r\n            // @ts-ignore\r\n            modal.getRoot().on(ModalEvents.hidden, () => {\r\n                onHidden();\r\n            });\r\n        }\r\n        return modal;\r\n    }\r\n}\r\n\r\n/** @type {ModalSrv | undefined} */\r\nlet instanceSrv;\r\n/**\r\n * @returns {ModalSrv}\r\n */\r\nexport function getModalSrv() {\r\n    if (!instanceSrv) {\r\n        instanceSrv = new ModalSrv();\r\n    }\r\n    return instanceSrv;\r\n}\r\n"],"names":["_interopRequireDefault","e","__esModule","default","instanceSrv","ModalSrv","_modal","_modal_registry","_modal_factory","_modal_events","IBPickerModal","Modal","static","registerEventListeners","super","ModalRegistry","register","TYPE","TEMPLATE","IBParamsModal","IBContextModal","create","name","templateContext","onHidden","cls","options","type","large","modal","ModalFactory","css","height","header","padding","getRoot","on","ModalEvents","hidden","_exports"],"mappings":"8MA2B4C,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;2GAqGrC,WACEG,cACDA,YAAc,IAAIC,UAEtB,OAAOD,WACX,EA7GAE,OAAAN,uBAAAM,QACAC,gBAAAP,uBAAAO,iBACAC,eAAAR,uBAAAQ,gBACAC,cAAAT,uBAAAS,eAGA,MAAMC,sBAAsBC,OAAAA,QACxBC,YAAc,8BACdA,gBAAkB,8BAElBC,sBAAAA,GAEIC,MAAMD,wBACV,EAGJE,gBAAAA,QAAcC,SAASN,cAAcO,KAAMP,cAAeA,cAAcQ,UAIxE,MAAMC,sBAAsBR,OAAAA,QACxBC,YAAc,8BACdA,gBAAkB,8BAElBC,sBAAAA,GAEIC,MAAMD,wBACV,EAGJE,gBAAAA,QAAcC,SAASG,cAAcF,KAAME,cAAeA,cAAcD,UAGxE,MAAME,uBAAuBT,OAAAA,QACzBC,YAAc,+BACdA,gBAAkB,+BAElBC,sBAAAA,GAEIC,MAAMD,wBACV,EAGJE,gBAAAA,QAAcC,SAASI,eAAeH,KAAMG,eAAgBA,eAAeF,UAUpE,MAAMb,SAOT,YAAMgB,CAAOC,KAAMC,gBAAiBC,UAChC,IAAIC,IACJ,OAAQH,MACJ,IAAM,SAAWG,IAAMf,cAAe,MACtC,IAAM,SAAWe,IAAMN,cAAe,MACtC,IAAM,UAAYM,IAAML,eAG5B,MAAMM,QAAU,CACZC,KAAMF,IAAIR,KACVM,gCACAK,OAAO,GAEX,IAAIC,MAsBJ,OApBIA,MADAJ,IAAIJ,aACUI,IAAIJ,OAAOK,eAGXI,eAAAA,QAAaT,OAAOK,SAGtCG,MAAMA,MAAME,IAAI,CACZ,YAAa,QACbC,OAAU,YAEdH,MAAMI,OAAOF,IAAI,CACbC,OAAU,UACVE,QAAW,cAEXV,UAEAK,MAAMM,UAAUC,GAAGC,cAAWlC,QAACmC,QAAQ,KACnCd,UAAU,IAGXK,KACX,EAIJ,IAAIzB,YAHHmC,SAAAlC,SAAAA,QAYA"}