{"version":3,"file":"widgetparams_ctrl.min.js","sources":["../../src/controller/widgetparams_ctrl.js"],"sourcesContent":["/* eslint-disable no-console */\r\n// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport {getFormCtrl} from '../controller/form_ctrl';\r\nimport {getListeners} from '../extension';\r\nimport {getModalSrv} from '../service/modal_service';\r\nimport {getTemplateSrv} from '../service/template_service';\r\nimport {getUserStorage} from '../service/userstorage_service';\r\nimport {applyWidgetFilterFactory} from '../util';\r\nimport * as coreStr from \"core/str\";\r\n\r\n/**\r\n * Tiny WidgetHub plugin.\r\n *\r\n * @module      tiny_widgethub/plugin\r\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nexport class WidgetParamsCtrl {\r\n   /** @type {import('../service/modal_service').ModalDialogue | null} */\r\n   modal = null;\r\n\r\n   /**\r\n    * @type {import('./widgetpicker_ctrl').WidgetPickerCtrl | undefined }\r\n    */\r\n   parentCtrl;\r\n  /**\r\n   * @param {import('../plugin').TinyMCE} editor\r\n   * @param {import('../service/userstorage_service').UserStorageSrv} userStorage\r\n   * @param {import('../service/template_service').TemplateSrv} templateSrv\r\n   * @param {import('../service/modal_service').ModalSrv} modal_service\r\n   * @param {import('../controller/form_ctrl').FormCtrl} formCtrl\r\n   * @param {*} applyWidgetFilter\r\n   * @param {import('../options').Widget} widget\r\n   */\r\n   constructor(editor, userStorage, templateSrv, modal_service, formCtrl, applyWidgetFilter, widget) {\r\n      /** @type {import('../plugin').TinyMCE} */\r\n      this.editor = editor;\r\n      /** @type {import('../service/userstorage_service').UserStorageSrv} */\r\n      this.storage = userStorage;\r\n      /** @type {import('../service/template_service').TemplateSrv} */\r\n      this.templateSrv = templateSrv;\r\n      /** @type {import('../service/modal_service').ModalSrv} */\r\n      this.modal_service = modal_service;\r\n      /** @type {import('../controller/form_ctrl').FormCtrl} */\r\n      this.formCtrl = formCtrl;\r\n      this.applyWidgetFilter = applyWidgetFilter;\r\n      /** @type {import('../options').Widget} */\r\n      this.widget = widget;\r\n   }\r\n   /**\r\n    * Displays a dialogue for configuring the parameters of the selected snpt\r\n    */\r\n   async handleAction() {\r\n      // Show modal with buttons.\r\n      const data = this.formCtrl.createContext(this.widget);\r\n      const modal = await this.modal_service.create('params', data, () => {\r\n         this.modal?.destroy();\r\n         this.modal = null;\r\n      });\r\n      this.modal = modal;\r\n      modal.body.find(`a[href=\"#${data.idtabpane}_1\"`).on(\"click\", async() => {\r\n         // Handle preview;\r\n         const ctxFromDialogue = this.formCtrl.extractFormParameters(this.widget, modal.body.find(\"form\"), true);\r\n         await this.updatePreview(data.idtabpane, ctxFromDialogue);\r\n      });\r\n      this.formCtrl.attachPickers(modal.body);\r\n      modal.footer.show();\r\n      modal.footer.find(\"button.btn-secondary\").on(\"click\", async() => {\r\n         // Go back to main menú\r\n         modal.destroy();\r\n         if (this.parentCtrl) {\r\n            await this.parentCtrl.handleAction();\r\n         }\r\n      });\r\n      modal.footer.find(\"button.btn-primary\").on(\"click\", async() => {\r\n         // Go back to main menú\r\n         const ctxFromDialogue = this.formCtrl.extractFormParameters(this.widget, modal.body.find(\"form\"), true);\r\n         modal.hide();\r\n         await this.insertWidget(ctxFromDialogue);\r\n         modal.destroy();\r\n      });\r\n\r\n      // Change input fields visibilities upon conditions\r\n      const selectmode = this.editor.selection.getContent().trim() != '';\r\n      this.formCtrl.applyFieldWatchers(modal.body, this.widget.defaults, this.widget, selectmode);\r\n\r\n      // Help circles require popover\r\n      try {\r\n         // @ts-ignore\r\n         modal.body.popover({\r\n            container: \"body\",\r\n            selector: \"[data-toggle=popover][data-trigger=hover]\",\r\n            trigger: \"hover\"\r\n         });\r\n      } catch (ex) {\r\n         // console.error(ex);\r\n      }\r\n\r\n      modal.show();\r\n   }\r\n\r\n   destroy() {\r\n      this.modal?.destroy();\r\n   }\r\n\r\n   /**\r\n    * @param {object} ctx\r\n    * @returns {Promise<string>} The rendered template\r\n    */\r\n    render(ctx) {\r\n        const defaultsCopy = {...this.widget.defaults};\r\n        const toInterpolate = Object.assign(defaultsCopy, ctx ?? {});\r\n        // Decide which template engine to use\r\n        let engine = this.widget.prop('engine');\r\n        return this.templateSrv.render(this.widget.template ?? \"\", toInterpolate,\r\n            this.widget.I18n, engine);\r\n   }\r\n\r\n   /**\r\n    * @param {Object.<string, any>} ctxFromDialogue\r\n    * @returns {Promise<string>}\r\n    */\r\n   async generateInterpolatedCode(ctxFromDialogue) {\r\n      const sel = this.editor.selection.getContent();\r\n      // Decideix quin mode de selecció estam\r\n      let interpoledComponentCode = await this.render(ctxFromDialogue);\r\n      if (sel.trim() && this.widget.insertquery) {\r\n         let query = this.widget.insertquery.trim();\r\n         let replaceMode = query.startsWith('r!');\r\n         if (replaceMode) {\r\n            query = query.substring(2).trim();\r\n         }\r\n         // We are in selection mode\r\n         const tmpDiv = document.createElement(\"div\");\r\n         tmpDiv.innerHTML = interpoledComponentCode;\r\n         const insertPoint = tmpDiv.querySelector(query);\r\n         if (insertPoint) {\r\n            if (replaceMode) {\r\n               // Replace the insertPoint by the interpolated HTML\r\n               insertPoint.outerHTML = sel;\r\n            } else {\r\n               // Inserts the interpolated HTML into the insertPoint\r\n               insertPoint.innerHTML = sel;\r\n            }\r\n            interpoledComponentCode = tmpDiv.innerHTML;\r\n         } else {\r\n            console.error(\"Cannot find insert point\", query);\r\n         }\r\n      }\r\n      return interpoledComponentCode;\r\n   }\r\n\r\n   /**\r\n    * @param {string} idtabpane\r\n    * @param {Object.<string, any>} ctxFromDialogue\r\n    * @returns\r\n    */\r\n   async updatePreview(idtabpane, ctxFromDialogue) {\r\n      const interpoledCode = await this.generateInterpolatedCode(ctxFromDialogue);\r\n      const $previewPanel = this.modal?.body?.find(`#${idtabpane}_1`);\r\n      if ($previewPanel) {\r\n         $previewPanel.html(interpoledCode);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {Object.<string, any>} ctxFromDialogue\r\n    * @returns\r\n    */\r\n   async insertWidget(ctxFromDialogue) {\r\n      /** @type {{key: string, p: Record<string, any>}[]} */\r\n      const recentList = this.storage.getRecentUsed();\r\n      const pos = recentList.map(e => e.key).indexOf(this.widget.key);\r\n      if (pos >= 0) {\r\n         recentList.splice(pos, 1);\r\n      }\r\n      recentList.unshift({key: this.widget.key, p: ctxFromDialogue});\r\n      if (recentList.length > 4) {\r\n         recentList.splice(5, recentList.length - 4);\r\n      }\r\n\r\n      this.storage.setToSession(\"recent\", JSON.stringify(recentList), true);\r\n\r\n      if (this.widget.isFilter()) {\r\n         this.applyWidgetFilter(this.widget.template ?? '', false, ctxFromDialogue);\r\n         this.editor.focus();\r\n         return;\r\n      }\r\n      const interpoledCode = await this.generateInterpolatedCode(ctxFromDialogue);\r\n      // Normal insert mode\r\n      this.editor.selection.setContent(interpoledCode);\r\n      this.editor.focus();\r\n\r\n      // Call any subscriber\r\n      getListeners('widgetInserted').forEach(listener => listener(this.editor, this.widget, ctxFromDialogue));\r\n   }\r\n}\r\n\r\n\r\n/**\r\n * @param {import('../plugin').TinyMCE} editor\r\n * @returns {(widget: import('../options').Widget) => WidgetParamsCtrl}\r\n */\r\nexport function getWidgetParamsFactory(editor) {\r\n   // @ts-ignore\r\n   const applyWidgetFilter = applyWidgetFilterFactory(editor, coreStr);\r\n   return (widget) => new WidgetParamsCtrl(editor, getUserStorage(editor), getTemplateSrv(),\r\n      getModalSrv(), getFormCtrl(editor), applyWidgetFilter, widget);\r\n\r\n}\r\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","editor","applyWidgetFilter","applyWidgetFilterFactory","coreStr","widget","WidgetParamsCtrl","getUserStorage","getTemplateSrv","getModalSrv","getFormCtrl","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","modal","parentCtrl","constructor","userStorage","templateSrv","modal_service","formCtrl","this","storage","handleAction","data","createContext","create","_this$modal","destroy","body","find","idtabpane","on","async","ctxFromDialogue","extractFormParameters","updatePreview","attachPickers","footer","show","hide","insertWidget","selectmode","selection","getContent","trim","applyFieldWatchers","defaults","popover","container","selector","trigger","ex","_this$modal2","render","ctx","defaultsCopy","toInterpolate","assign","engine","prop","template","I18n","generateInterpolatedCode","sel","interpoledComponentCode","insertquery","query","replaceMode","startsWith","substring","tmpDiv","document","createElement","innerHTML","insertPoint","querySelector","outerHTML","console","error","_this$modal3","_this$modal3$body","interpoledCode","$previewPanel","html","recentList","getRecentUsed","pos","map","key","indexOf","splice","unshift","p","length","setToSession","JSON","stringify","isFilter","focus","setContent","getListeners","forEach","listener","_exports"],"mappings":"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"}