{"version":3,"file":"configuration.min.js","sources":["../src/configuration.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny WidgetHub plugin.\r\n *\r\n * @module      tiny_widgethub/plugin\r\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport Common from './common';\r\nimport {addMenubarItem} from 'editor_tiny/utils';\r\n\r\nconst buttonName = Common.component;\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {{items: string}} insert\r\n */\r\n/**\r\n * @param {Menu} menu\r\n * @returns {Menu}\r\n */\r\nconst configureMenu = (menu) => {\r\n    const items = menu.insert.items.split(' ');\r\n    const inserted = items.some((item, index) => {\r\n        // Append after the link button.\r\n        if (RegExp(/(link)\\b/).exec(item)) {\r\n            items.splice(index + 1, 0, buttonName);\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    if (inserted) {\r\n        menu.insert.items = items.join(' ');\r\n    } else {\r\n        addMenubarItem(menu, 'insert', buttonName);\r\n    }\r\n\r\n    return menu;\r\n};\r\n\r\n/**\r\n * @typedef {Object} Section\r\n * @property {string} name\r\n * @property {string[]} items\r\n */\r\n/**\r\n * @param {Section[]} toolbar\r\n * @returns {Section[]}\r\n */\r\nconst configureToolbar = (toolbar) => {\r\n    // The toolbar contains an array of named sections.\r\n    // The Moodle integration ensures that there is a section called 'content'.\r\n\r\n    return toolbar.map((section) => {\r\n        if (section.name === 'content') {\r\n            // Insert the button at the start of it.\r\n            section.items.unshift(buttonName);\r\n        }\r\n        return section;\r\n    });\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} contextmenu\r\n * @returns {string}\r\n */\r\nconst configureContextMenu = (contextmenu) => {\r\n    return contextmenu + ' ' + buttonName;\r\n};\r\n\r\n/**\r\n *\r\n * @param {any} instanceConfig\r\n * @returns {any}\r\n */\r\nexport const configure = (instanceConfig) => {\r\n    return {\r\n        menu: configureMenu(instanceConfig.menu),\r\n        toolbar: configureToolbar(instanceConfig.toolbar),\r\n        contextmenu: configureContextMenu(instanceConfig.contextmenu)\r\n    };\r\n};\r\n"],"names":["e","buttonName","_common","__esModule","default","component","configureMenu","menu","items","insert","split","some","item","index","RegExp","exec","splice","join","addMenubarItem","_exports","configure","instanceConfig","toolbar","map","section","name","unshift","contextmenu"],"mappings":"oHAsB8B,IAAAA;;;;;;;uFAG9B,MAAMC,YAHNC,SAA8BF,EAA9BE,UAA8BF,EAAAG,WAAAH,EAAAI,CAAAA,QAAAJ,IAGLI,QAACC,UAUpBC,cAAiBC,OACnB,MAAMC,MAAQD,KAAKE,OAAOD,MAAME,MAAM,KAgBtC,OAfiBF,MAAMG,MAAK,CAACC,KAAMC,UAE3BC,OAAO,YAAYC,KAAKH,QACxBJ,MAAMQ,OAAOH,MAAQ,EAAG,EAAGZ,aACpB,KAMXM,KAAKE,OAAOD,MAAQA,MAAMS,KAAK,MAE/B,EAAAC,uBAAeX,KAAM,SAAUN,YAG5BM,IAAI,EA6CbY,SAAAC,UANwBC,iBACtB,MAAO,CACHd,KAAMD,cAAce,eAAed,MACnCe,SA9BkBA,QA8BQD,eAAeC,QA1BtCA,QAAQC,KAAKC,UACK,YAAjBA,QAAQC,MAERD,QAAQhB,MAAMkB,QAAQzB,YAEnBuB,YAsBPG,aAbsBA,YAaYN,eAAeM,YAZ9CA,YAAc,IAAM1B,aADD0B,gBAlBJL,OAgCrB,CACH"}