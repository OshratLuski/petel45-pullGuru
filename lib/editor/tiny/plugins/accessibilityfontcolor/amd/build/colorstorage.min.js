define("tiny_accessibilityfontcolor/colorstorage",["exports","editor_tiny/options","./common"],(function(_exports,_options,_common){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.initializeColorStorage=_exports.getOriginalTextColors=_exports.getOriginalBackgroundColors=void 0;const forecolorMap=(0,_options.getPluginOptionName)(_common.pluginName,"textcolors"),backcolorMap=(0,_options.getPluginOptionName)(_common.pluginName,"backgroundcolors");let originalBackgroundColors=null,originalTextColors=null,isInitialized=!1;const initializeColorStorage=editor=>{if(isInitialized)console.warn("⚠️ Color storage already initialized – skipping.");else{let backColors=editor.options.get(backcolorMap),textColors=editor.options.get(forecolorMap);if(!backColors||!textColors)return void setTimeout((()=>initializeColorStorage(editor)),100);originalBackgroundColors=JSON.parse(JSON.stringify(backColors)),originalTextColors=JSON.parse(JSON.stringify(textColors)),isInitialized=!0}};_exports.initializeColorStorage=initializeColorStorage;_exports.getOriginalBackgroundColors=()=>JSON.parse(JSON.stringify(originalBackgroundColors));_exports.getOriginalTextColors=()=>JSON.parse(JSON.stringify(originalTextColors))}));

//# sourceMappingURL=colorstorage.min.js.map