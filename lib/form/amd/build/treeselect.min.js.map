{"version":3,"file":"treeselect.min.js","sources":["../src/treeselect.js"],"sourcesContent":["define([\"jquery\"], function(jQuery) {\n  (function ($) {\n    jQuery.fn.treeSelector = function (tree, defaultValues, onChange, params) {\n      // use namespace for autoclose\n      $(window).off('click.treeSelector').on('click.treeSelector', function (e) {\n        var isClickSelector = $(e.target).closest('.treeSelector-container').length > 0\n        if (!isClickSelector) {\n          $('div.treeSelector-wrapper').removeClass('visible')\n        } else {\n          // First selector should be close when the second onClick\n          var $container = $(e.target).closest('.treeSelector-container')\n          if ($container.length > 0) {\n            var treeId = $container.attr('data-treeId')\n            $('div.treeSelector-container:not([data-treeId=' + treeId + '])').find('div.treeSelector-wrapper').removeClass('visible')\n          }\n        }\n      })\n\n      // options\n      var options = $.extend({\n        // children checked/unchecked if true\n        checkWithParent: false,\n        // title with 'title1 - title 2' in view if true\n        titleWithParent: false,\n        // when item click, only view leaf title if true\n        notViewClickParentTitle: false,\n        disabled: false,\n        emptyOptonPlaceholder: 'no options'\n      }, params)\n\n      /**\n       * iterate to gen node\n       * @param {*} node\n       * @param {*} level\n       * @param Int randId. The selector private id\n       */\n      var buildTree = function (node, level, randId) {\n        var hasChildren = node.children && node.children.length > 0\n\n        var li = $(document.createElement('li'));\n        li.addClass('treeSelector-li level-' + level + (hasChildren ? ' has-children' : ''))\n        var liBox = $(document.createElement('div'));\n        liBox.addClass('treeSelector-li-box')\n\n        var liTitle = $(document.createElement('label'));\n        liTitle.addClass('treeSelector-li-title-box')\n        var nodeLiId = 'treeSelector-li-' + randId + '-' + node.id\n        liTitle.attr({\n          for: nodeLiId,\n          'data-value': node.value,\n          'data-title': node.title\n        })\n        var liTitleCheckbox = $(document.createElement('input'));\n        liTitleCheckbox.attr({\n          type: 'checkbox',\n          id: nodeLiId,\n          'data-value': node.value\n        })\n        liTitle.append(liTitleCheckbox)\n\n        var liTitleSpan = $(document.createElement('span'));\n        liTitleSpan.addClass('treeSelector-li-title')\n        liTitleSpan.attr({\n          'data-value': node.value\n        })\n        liTitleSpan.text(node.title)\n        liTitle.append(liTitleSpan)\n\n        liBox.append(liTitle)\n\n        if (hasChildren) {\n          var liChildUl = $(document.createElement('ul'));\n          var childrenLis = $()\n          for (var k = 0; k < node.children.length; k++) {\n            childrenLis = childrenLis.add(buildTree(node.children[k], level + 1, randId))\n          }\n          liChildUl.append(childrenLis)\n          liBox.append(liChildUl)\n        } else {\n          liBox.addClass('leaf')\n        }\n\n        li.append(liBox)\n\n        return li\n      }\n\n      var getParentTitles = function ($seletor, value) {\n        if (!value) {\n          return []\n        }\n        var titles = []\n        var valueItem = $seletor.find('.treeSelector-li-title-box[data-value=' + value + ']:first')\n        if (valueItem && valueItem.closest('.treeSelector-li').length > 0) {\n          var closeLiBox = valueItem.closest('.treeSelector-li')\n              .closest('.treeSelector-li-box')\n          var closeTitle = closeLiBox.find('>.treeSelector-li-title-box').attr('data-title')\n          var closeValue = closeLiBox.find('>.treeSelector-li-title-box').attr('data-value')\n          var tmpTitles = getParentTitles($seletor, closeValue).slice()\n          titles = tmpTitles.concat([closeTitle])\n        }\n        return titles.filter(function (e) {\n          return e\n        })\n      }\n\n      /**\n       * view values(titles)\n       * @param {*} $selector\n       * @param {*} values\n       */\n      var appendSelectedItems = function ($selector, values) {\n        if ($selector && values && Array.isArray(values)) {\n          var titleSpans = $()\n          for (var k = 0; k < values.length; k++) {\n            var value = values[k];\n            var item = $selector.find('.treeSelector-li-title[data-value=' + value + ']:first')\n            if (item) {\n              item.prev('input[type=checkbox]').prop('checked', true)\n              // titles.push([item.text(), value])\n              var titleItem = $(document.createElement('div'));\n              titleItem.addClass('title-item')\n              titleItem.attr({\n                'data-value': value\n              })\n              var itemSpan = $(document.createElement('span'));\n              itemSpan.addClass('title')\n              var title = item.text()\n              if (options.titleWithParent) {\n                var itemParentTitles = getParentTitles($selector, value)\n                title = itemParentTitles.concat([title]).filter(function (e) {\n                  return e\n                }).join(' - ')\n              }\n              itemSpan.text(title)\n              var faClose = $(document.createElement('span'));\n              faClose.addClass('fa fa-times')\n\n              titleItem.append(faClose)\n              titleItem.append(itemSpan)\n              titleSpans = titleSpans.add(titleItem)\n            }\n          }\n          $selector.find('.treeSelector-input-box:first')\n              .empty()\n              .append(titleSpans)\n        }\n      }\n\n      /**\n       * get current values\n       * @param {*} $selector\n       */\n      var getCheckedInputValues = function ($selector) {\n        return $selector.find('input[type=checkbox]:checked')\n            .map(function (_index, elem) {\n              return $(elem).attr('data-value')\n            })\n            .toArray()\n      }\n\n      /**\n       * set checked = false to parents\n       * @param {Element} inputCheckbox\n       */\n      var uncheckParent = function (inputCheckbox) {\n        var closeUl = $(inputCheckbox).closest('ul')\n        if (closeUl && closeUl.length) {\n          var checkbox = closeUl.prev('.treeSelector-li-title-box')\n              .find('input[type=checkbox]:first')\n          checkbox.prop('checked', false)\n          uncheckParent(checkbox.get(0))\n        }\n      }\n\n      /**\n       * reset titles when vaule change actions\n       * @param {*} $selector\n       */\n      var valueChangeEventView = function ($selector, event) {\n        var values = getCheckedInputValues($selector)\n        // on view leaf titles\n        if (options.notViewClickParentTitle) {\n          var leafValues = []\n          for (var k = 0; k < values.length; k++) {\n            var value = values[k];\n            var valueLeafInput = $selector\n                .find('.treeSelector-li-box.leaf input[data-value=' + value + ']')\n            if (valueLeafInput.length > 0) {\n              leafValues.push(value)\n            } else {\n              var liBox = $('label.treeSelector-li-title-box[data-value=' + value + ']:first')\n              if (liBox.length > 0 && liBox.next('ul').find('input[type=checkbox]:checked').length > 0) {\n                // dont show\n              } else {\n                leafValues.push(value)\n              }\n            }\n          }\n          appendSelectedItems($selector, leafValues)\n          onChange && onChange(event, values)\n        } else {\n          appendSelectedItems($selector, values)\n          onChange && onChange(event, values)\n        }\n      }\n\n      /**\n       * events\n       * @param {*} $selector\n       */\n      var bindEvents = function ($selector) {\n        $selector.on('change', 'input[type=checkbox]', function (e) {\n          if (options.disabled) {\n            return false\n          }\n          if (options.checkWithParent) {\n            var childrenBox = $(e.target)\n                .parent('.treeSelector-li-title-box')\n                .next('ul')\n            if (e.target.checked) {\n              if (childrenBox && childrenBox.length > 0) {\n                childrenBox.find('input[type=checkbox]')\n                    .prop('checked', e.target.checked)\n              }\n            } else {\n              uncheckParent(e.target)\n              if (childrenBox && childrenBox.length > 0) {\n                childrenBox.find('input[type=checkbox]')\n                    .prop('checked', e.target.checked)\n              }\n            }\n          }\n\n          valueChangeEventView($selector, e)\n        })\n\n        /**\n         * click [x] icon\n         */\n        $selector.on('click', 'span.fa.fa-times', function (e) {\n          if (options.disabled) {\n            return false\n          }\n          var value = $(e.target).parent('.title-item').attr('data-value')\n          var input = $selector.find('input[type=checkbox][data-value=' + value + ']:checked')\n          if (input && input.length) {\n            input.prop('checked', false)\n            if (options.checkWithParent) {\n              uncheckParent(input.get(0))\n            }\n          }\n\n          valueChangeEventView($selector, e)\n          return false\n        })\n\n        /**\n         * click input, show options\n         */\n        $selector.on('click', '.treeSelector-input-box', function (e) {\n          if (options.disabled || !tree || !tree.length) {\n            return false\n          }\n          var $wrapper = $selector.find('.treeSelector-wrapper:first')\n          var isOpen = $wrapper.hasClass('visible')\n          if (!isOpen) {\n            $wrapper.addClass('visible')\n          }\n        })\n      }\n\n      var genRandId = function () {\n        return (new Date()).valueOf() + parseInt(Math.random() * 10000000000, 10)\n      }\n\n      // construct\n      return $(this).each(function () {\n        var selector = $(document.createElement('div'));\n        var randId = genRandId()\n        selector.addClass('treeSelector-container');\n        selector.attr('data-treeId', randId)\n        if (options.disabled) {\n          selector.addClass('disabled');\n        }\n\n        var selectorInputBox = $(document.createElement('div'));\n        selectorInputBox.addClass('treeSelector-input-box');\n\n        var selectorWrapper = $(document.createElement('div'));\n        selectorWrapper.addClass('treeSelector-wrapper');\n        var selectorWrapperUl = $(document.createElement('ul'))\n\n        selector.append(selectorInputBox)\n        selector.append(selectorWrapper)\n        if (tree && tree.length) {\n          for (var j = 0; j < tree.length; j++) {\n            var element = buildTree(tree[j], 0, randId)\n            selectorWrapperUl.append(element)\n          }\n        } else {\n          selector.addClass('no-options')\n          selectorInputBox.text(options.emptyOptonPlaceholder)\n        }\n\n        selectorWrapper.append(selectorWrapperUl);\n        $(this).empty().append(selector);\n\n        if (defaultValues && defaultValues.length) {\n          appendSelectedItems(selector, defaultValues)\n        }\n\n        bindEvents(selector)\n      })\n    }\n  })(jQuery);\n})\n"],"names":["define","jQuery","$","fn","treeSelector","tree","defaultValues","onChange","params","window","off","on","e","target","closest","length","$container","treeId","attr","find","removeClass","options","extend","checkWithParent","titleWithParent","notViewClickParentTitle","disabled","emptyOptonPlaceholder","buildTree","node","level","randId","hasChildren","children","li","document","createElement","addClass","liBox","liTitle","nodeLiId","id","for","value","title","liTitleCheckbox","type","append","liTitleSpan","text","liChildUl","childrenLis","k","add","getParentTitles","$seletor","titles","valueItem","closeLiBox","closeTitle","slice","concat","filter","appendSelectedItems","$selector","values","Array","isArray","titleSpans","item","prev","prop","titleItem","itemSpan","join","faClose","empty","uncheckParent","inputCheckbox","closeUl","checkbox","get","valueChangeEventView","event","map","_index","elem","toArray","getCheckedInputValues","leafValues","push","next","this","each","selector","Date","valueOf","parseInt","Math","random","selectorInputBox","selectorWrapper","selectorWrapperUl","j","element","childrenBox","parent","checked","input","$wrapper","hasClass"],"mappings":"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"}